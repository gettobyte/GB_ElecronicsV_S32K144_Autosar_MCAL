
Marking local functions:


Marking externally visible functions: ST7789_Float ST7789_WriteDec ST7789_WriteStringBox ST7789_WriteString ST7789_WriteChar ST7789DrawPixel ST7789_DrawImage ST7789_Fill_Color ST7789_SetAddressWindow GB_ST7789_Init GB_ST7789_SendDataIm GB_ST7789_SendData GB_ST7789_SendCommand GB_STT7789_SPI_CS_high GB_STT7789_SPI_CS_low GB_MA_SPI_exchange_byte GB_MA_SPI_send_byte_conti


Marking externally visible variables: j i length total rx_val


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

sprintf/31 (sprintf) @06a3c620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ST7789_Float/25 
  Calls: 
Dio_WriteChannel/30 (Dio_WriteChannel) @06a019a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ST7789_WriteChar/21 ST7789_WriteChar/21 ST7789DrawPixel/20 ST7789DrawPixel/20 ST7789_DrawImage/19 ST7789_DrawImage/19 ST7789_Fill_Color/15 ST7789_Fill_Color/15 ST7789_SetAddressWindow/13 ST7789_SetAddressWindow/13 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_SendDataIm/11 GB_ST7789_SendData/10 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_STT7789_SPI_CS_high/8 GB_STT7789_SPI_CS_low/7 
  Calls: 
val.6606/29 (val) @069fd948
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: GB_MA_SPI_exchange_byte/6 (addr)
  Availability: available
  Varpool flags: initialized
Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals/28 (Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals) @069fd7e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: GB_MA_SPI_send_byte_conti/5 (addr)GB_MA_SPI_exchange_byte/6 (addr)
  Availability: not_available
  Varpool flags: read-only
Lpspi_Ip_SyncTransmit/27 (Lpspi_Ip_SyncTransmit) @06a01700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: GB_MA_SPI_exchange_byte/6 GB_MA_SPI_send_byte_conti/5 
  Calls: 
DelayTimer.6590/26 (DelayTimer) @069fd678
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: TestDelay/3 (read)TestDelay/3 (write)TestDelay/3 (read)TestDelay/3 (write)
  Availability: available
  Varpool flags: initialized
ST7789_Float/25 (ST7789_Float) @06a011c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ST7789_WriteString/22 sprintf/31 
ST7789_WriteDec/24 (ST7789_WriteDec) @069e0e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ST7789_WriteChar/21 
ST7789_WriteStringBox/23 (ST7789_WriteStringBox) @069e08c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ST7789_WriteChar/21 
ST7789_WriteString/22 (ST7789_WriteString) @069e00e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_Float/25 
  Calls: ST7789_WriteChar/21 
ST7789_WriteChar/21 (ST7789_WriteChar) @069e0d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_WriteDec/24 ST7789_WriteStringBox/23 ST7789_WriteString/22 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendData/10 GB_ST7789_SendData/10 GB_ST7789_SendCommand/9 Dio_WriteChannel/30 ST7789_SetAddressWindow/13 
ST7789DrawPixel/20 (ST7789DrawPixel) @069e0a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendData/10 Dio_WriteChannel/30 ST7789_SetAddressWindow/13 
ST7789_DrawImage/19 (ST7789_DrawImage) @069e07e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: j/18 (write)j/18 (read)j/18 (read)j/18 (write)j/18 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendDataIm/11 GB_ST7789_SendCommand/9 Dio_WriteChannel/30 ST7789_SetAddressWindow/13 
j/18 (j) @069d7ab0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: ST7789_DrawImage/19 (write)ST7789_DrawImage/19 (read)ST7789_DrawImage/19 (read)ST7789_DrawImage/19 (write)ST7789_DrawImage/19 (read)
  Availability: available
  Varpool flags:
i/17 (i) @069d7a20
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags:
length/16 (length) @069d79d8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
ST7789_Fill_Color/15 (ST7789_Fill_Color) @069e02a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendData/10 GB_ST7789_SendCommand/9 Dio_WriteChannel/30 
total/14 (total) @069d7828
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
ST7789_SetAddressWindow/13 (ST7789_SetAddressWindow) @069d9d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_WriteChar/21 ST7789DrawPixel/20 ST7789_DrawImage/19 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 Dio_WriteChannel/30 
GB_ST7789_Init/12 (GB_ST7789_Init) @069d97e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 Dio_WriteChannel/30 TestDelay/3 Dio_WriteChannel/30 TestDelay/3 Dio_WriteChannel/30 
GB_ST7789_SendDataIm/11 (GB_ST7789_SendDataIm) @069d92a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_DrawImage/19 
  Calls: GB_MA_SPI_send_byte_conti/5 Dio_WriteChannel/30 
GB_ST7789_SendData/10 (GB_ST7789_SendData) @069d9ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_WriteChar/21 ST7789_WriteChar/21 ST7789DrawPixel/20 ST7789_Fill_Color/15 
  Calls: GB_MA_SPI_send_byte_conti/5 Dio_WriteChannel/30 
GB_ST7789_SendCommand/9 (GB_ST7789_SendCommand) @069d9c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ST7789_WriteChar/21 ST7789_DrawImage/19 ST7789_Fill_Color/15 ST7789_SetAddressWindow/13 ST7789_SetAddressWindow/13 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 GB_ST7789_Init/12 
  Calls: GB_MA_SPI_send_byte_conti/5 Dio_WriteChannel/30 GB_MA_SPI_send_byte_conti/5 Dio_WriteChannel/30 
GB_STT7789_SPI_CS_high/8 (GB_STT7789_SPI_CS_high) @069d99a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 
GB_STT7789_SPI_CS_low/7 (GB_STT7789_SPI_CS_low) @069d9700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Dio_WriteChannel/30 
GB_MA_SPI_exchange_byte/6 (GB_MA_SPI_exchange_byte) @069d9460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals/28 (addr)val.6606/29 (addr)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_SyncTransmit/27 
GB_MA_SPI_send_byte_conti/5 (GB_MA_SPI_send_byte_conti) @069d91c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals/28 (addr)rx_val/4 (addr)
  Referring: 
  Availability: available
  Function flags: body
  Called by: GB_ST7789_SendDataIm/11 GB_ST7789_SendData/10 GB_ST7789_SendCommand/9 GB_ST7789_SendCommand/9 
  Calls: Lpspi_Ip_SyncTransmit/27 
rx_val/4 (rx_val) @069d7288
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: GB_MA_SPI_send_byte_conti/5 (addr)
  Availability: available
  Varpool flags:
TestDelay/3 (TestDelay) @069d27e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: DelayTimer.6590/26 (read)DelayTimer.6590/26 (write)DelayTimer.6590/26 (read)DelayTimer.6590/26 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: GB_ST7789_Init/12 GB_ST7789_Init/12 
  Calls: 
ST7789_Float (uint16_t x, uint16_t y, float gb_value, struct FontDef font, uint16_t color, uint16_t bgcolor)
{
  char gb_float_buff[10];

  <bb 2> :
  _1 = (double) gb_value;
  sprintf (&gb_float_buff, "%.2f", _1);
  ST7789_WriteString (x, y, &gb_float_buff, font, color, bgcolor);
  gb_float_buff = {CLOBBER};
  return;

}


ST7789_WriteDec (uint16_t x, uint16_t y, uint32_t gb_val, struct FontDef font, uint16_t color, uint16_t bgcolor)
{
  int8_t gb_ptr;
  unsigned char gb_buf[5];

  <bb 2> :
  gb_ptr = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = (int) x;
  _2 = font.width;
  _3 = (int) _2;
  _4 = _1 + _3;
  if (_4 > 239)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  x = 0;
  _5 = font.height;
  _6 = (short unsigned int) _5;
  y = y + _6;
  _7 = (int) y;
  _8 = font.height;
  _9 = (int) _8;
  _10 = _7 + _9;
  if (_10 > 239)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
  _11 = gb_val % 10;
  _12 = (unsigned char) _11;
  _13 = (int) gb_ptr;
  _14 = _12 + 48;
  gb_buf[_13] = _14;
  gb_val = gb_val / 10;
  gb_ptr.6_15 = (unsigned char) gb_ptr;
  _16 = gb_ptr.6_15 + 1;
  gb_ptr = (int8_t) _16;

  <bb 7> :
  if (gb_ptr <= 4)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  gb_ptr.7_17 = (unsigned char) gb_ptr;
  _18 = gb_ptr.7_17 + 255;
  gb_ptr = (int8_t) _18;
  goto <bb 10>; [INV]

  <bb 9> :
  _19 = (int) gb_ptr;
  _20 = gb_buf[_19];
  ST7789_WriteChar (x, y, _20, font, color, bgcolor);
  _21 = font.width;
  _22 = (short unsigned int) _21;
  x = x + _22;
  gb_ptr.8_23 = (unsigned char) gb_ptr;
  _24 = gb_ptr.8_23 + 255;
  gb_ptr = (int8_t) _24;

  <bb 10> :
  if (gb_ptr >= 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  gb_buf = {CLOBBER};
  return;

}


ST7789_WriteStringBox (uint16_t x, uint16_t y, uint16_t x1, uint16_t y1, const char * str, struct FontDef font, uint16_t color, uint16_t bgcolor)
{
  uint16_t y_temp;
  uint16_t x_temp;

  <bb 2> :
  x_temp = x;
  y_temp = y;
  goto <bb 13>; [INV]

  <bb 3> :
  _1 = (int) x;
  _2 = font.width;
  _3 = (int) _2;
  _4 = _1 + _3;
  if (_4 > 239)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  x = 0;
  _5 = font.height;
  _6 = (short unsigned int) _5;
  y = y + _6;
  _7 = (int) y;
  _8 = font.height;
  _9 = (int) _8;
  _10 = _7 + _9;
  if (_10 > 239)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 14>; [INV]

  <bb 6> :
  _11 = *str;
  if (_11 == 32)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  str = str + 1;
  // predicted unlikely by continue predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  _12 = *str;
  ST7789_WriteChar (x, y, _12, font, color, bgcolor);
  _13 = font.width;
  _14 = (short unsigned int) _13;
  x = x + _14;
  if (x > x1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  x = x_temp;
  _15 = font.height;
  _16 = (short unsigned int) _15;
  y = y + _16;

  <bb 10> :
  if (y > y1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  x = x_temp;
  y = y_temp;

  <bb 12> :
  str = str + 1;

  <bb 13> :
  _17 = *str;
  if (_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  return;

}


ST7789_WriteString (uint16_t x, uint16_t y, const char * str, struct FontDef font, uint16_t color, uint16_t bgcolor)
{
  <bb 2> :
  goto <bb 9>; [INV]

  <bb 3> :
  _1 = (int) x;
  _2 = font.width;
  _3 = (int) _2;
  _4 = _1 + _3;
  if (_4 > 239)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  x = 0;
  _5 = font.height;
  _6 = (short unsigned int) _5;
  y = y + _6;
  _7 = (int) y;
  _8 = font.height;
  _9 = (int) _8;
  _10 = _7 + _9;
  if (_10 > 239)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 10>; [INV]

  <bb 6> :
  _11 = *str;
  if (_11 == 32)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  str = str + 1;
  // predicted unlikely by continue predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _12 = *str;
  ST7789_WriteChar (x, y, _12, font, color, bgcolor);
  _13 = font.width;
  _14 = (short unsigned int) _13;
  x = x + _14;
  str = str + 1;

  <bb 9> :
  _15 = *str;
  if (_15 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  return;

}


ST7789_WriteChar (uint16_t x, uint16_t y, char ch, struct FontDef font, uint16_t color, uint16_t bgcolor)
{
  uint8_t data[2];
  uint8_t data[2];
  uint8_t d_ata;
  uint32_t j;
  uint32_t b;
  uint32_t i;

  <bb 2> :
  _1 = font.width;
  _2 = (short unsigned int) _1;
  _3 = x + _2;
  _4 = _3 + 65535;
  _5 = font.height;
  _6 = (short unsigned int) _5;
  _7 = y + _6;
  _8 = _7 + 65535;
  ST7789_SetAddressWindow (x, y, _4, _8);
  Dio_WriteChannel (49, 0);
  GB_ST7789_SendCommand (44, &d_ata, 0, 1000);
  i = 0;
  goto <bb 10>; [INV]

  <bb 3> :
  _9 = font.data;
  _10 = (int) ch;
  _11 = _10 + -32;
  _12 = font.height;
  _13 = (int) _12;
  _14 = _11 * _13;
  _15 = (long unsigned int) _14;
  _16 = i + _15;
  _17 = _16 * 2;
  _18 = _9 + _17;
  _19 = *_18;
  b = (uint32_t) _19;
  j = 0;
  goto <bb 8>; [INV]

  <bb 4> :
  _20 = b << j;
  _21 = _20 & 32768;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _22 = color >> 8;
  _23 = (unsigned char) _22;
  data[0] = _23;
  _24 = (unsigned char) color;
  data[1] = _24;
  GB_ST7789_SendData (&data, 2);
  data = {CLOBBER};
  goto <bb 7>; [INV]

  <bb 6> :
  _25 = bgcolor >> 8;
  _26 = (unsigned char) _25;
  data[0] = _26;
  _27 = (unsigned char) bgcolor;
  data[1] = _27;
  GB_ST7789_SendData (&data, 2);
  data = {CLOBBER};

  <bb 7> :
  j = j + 1;

  <bb 8> :
  _28 = font.width;
  _29 = (long unsigned int) _28;
  if (j < _29)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i = i + 1;

  <bb 10> :
  _30 = font.height;
  _31 = (long unsigned int) _30;
  if (i < _31)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  Dio_WriteChannel (49, 1);
  d_ata = {CLOBBER};
  return;

}


ST7789DrawPixel (uint16_t x, uint16_t y, uint16_t color)
{
  uint8_t data[2];

  <bb 2> :
  ST7789_SetAddressWindow (x, y, x, y);
  _1 = color >> 8;
  _2 = (unsigned char) _1;
  data[0] = _2;
  _3 = (unsigned char) color;
  data[1] = _3;
  Dio_WriteChannel (49, 0);
  GB_ST7789_SendData (&data, 2);
  Dio_WriteChannel (49, 1);
  data = {CLOBBER};
  return;

}


ST7789_DrawImage (uint16_t x, uint16_t y, uint16_t w, uint16_t h, const uint8_t * data)
{
  uint32_t TotalBytesToBeFilled;
  uint32_t TotalCellsToBeFilled;
  uint16_t NoOfRounds;
  uint16_t BytesToSend;
  uint8_t d_data;

  <bb 2> :
  _1 = x + w;
  _2 = _1 + 65535;
  _3 = y + h;
  _4 = _3 + 65535;
  ST7789_SetAddressWindow (x, y, _2, _4);
  Dio_WriteChannel (49, 0);
  GB_ST7789_SendCommand (44, &d_data, 0, 1000);
  NoOfRounds = 0;
  _5 = (int) w;
  _6 = (int) h;
  _7 = _5 * _6;
  TotalCellsToBeFilled = (uint32_t) _7;
  _8 = (int) w;
  _9 = (int) h;
  _10 = _8 * _9;
  _11 = _10 * 2;
  TotalBytesToBeFilled = (uint32_t) _11;
  if (TotalBytesToBeFilled <= 14400)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  NoOfRounds = 1;
  BytesToSend = (uint16_t) TotalBytesToBeFilled;
  goto <bb 6>; [INV]

  <bb 4> :
  if (TotalBytesToBeFilled > 14400)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _12 = TotalBytesToBeFilled / 7200;
  NoOfRounds = (uint16_t) _12;
  _13 = (long unsigned int) NoOfRounds;
  _14 = TotalBytesToBeFilled / _13;
  BytesToSend = (uint16_t) _14;

  <bb 6> :
  j = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _15 = (int) BytesToSend;
  j.2_16 = j;
  _17 = (int) j.2_16;
  _18 = _15 * _17;
  _19 = (sizetype) _18;
  _20 = data + _19;
  _21 = (long unsigned int) BytesToSend;
  GB_ST7789_SendDataIm (_20, _21);
  j.3_22 = j;
  j.4_23 = j.3_22;
  _24 = j.4_23 + 1;
  j = _24;

  <bb 8> :
  j.5_25 = j;
  if (NoOfRounds > j.5_25)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  Dio_WriteChannel (49, 1);
  d_data = {CLOBBER};
  return;

}


ST7789_Fill_Color (uint16_t color)
{
  uint32_t i;
  uint8_t colorData[2];
  uint8_t data;

  <bb 2> :
  Dio_WriteChannel (49, 0);
  GB_ST7789_SendCommand (44, &data, 0, 1000);
  _1 = color >> 8;
  _2 = (unsigned char) _1;
  colorData[0] = _2;
  _3 = (unsigned char) color;
  colorData[1] = _3;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  GB_ST7789_SendData (&colorData, 2);
  i = i + 1;

  <bb 4> :
  if (i <= 57599)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Dio_WriteChannel (49, 1);
  data = {CLOBBER};
  colorData = {CLOBBER};
  return;

}


ST7789_SetAddressWindow (uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1)
{
  uint8_t RowAddr[4];
  uint8_t ColAddr[4];
  uint16_t y_end;
  uint16_t y_start;
  uint16_t x_end;
  uint16_t x_start;

  <bb 2> :
  Dio_WriteChannel (49, 0);
  x_start = x0;
  x_end = x1;
  y_start = y0;
  y_end = y1;
  _1 = x_start >> 8;
  _2 = (unsigned char) _1;
  ColAddr[0] = _2;
  _3 = (unsigned char) x_start;
  ColAddr[1] = _3;
  _4 = x_end >> 8;
  _5 = (unsigned char) _4;
  ColAddr[2] = _5;
  _6 = (unsigned char) x_end;
  ColAddr[3] = _6;
  GB_ST7789_SendCommand (42, &ColAddr, 4, 1000);
  _7 = y_start >> 8;
  _8 = (unsigned char) _7;
  RowAddr[0] = _8;
  _9 = (unsigned char) y_start;
  RowAddr[1] = _9;
  _10 = y_end >> 8;
  _11 = (unsigned char) _10;
  RowAddr[2] = _11;
  _12 = (unsigned char) y_end;
  RowAddr[3] = _12;
  GB_ST7789_SendCommand (43, &RowAddr, 4, 1000);
  Dio_WriteChannel (49, 1);
  ColAddr = {CLOBBER};
  RowAddr = {CLOBBER};
  return;

}


GB_ST7789_Init ()
{
  uint8_t data;
  uint8_t RowAddr[4];
  uint8_t ColAddr[4];
  uint8_t MADCTL_SetRotation0;
  uint8_t MADCTL_SetRotation1;
  uint8_t ColorMod;

  <bb 2> :
  ColorMod = 85;
  MADCTL_SetRotation1 = 128;
  MADCTL_SetRotation0 = 192;
  ColAddr = "\x00\x00\x00\xf0";
  RowAddr = "\x00\x00\x01@";
  Dio_WriteChannel (44, 0);
  TestDelay (72000);
  Dio_WriteChannel (44, 1);
  TestDelay (144000);
  Dio_WriteChannel (49, 0);
  GB_ST7789_SendCommand (1, &data, 0, 1000);
  GB_ST7789_SendCommand (17, &data, 0, 1000);
  GB_ST7789_SendCommand (58, &ColorMod, 1, 1000);
  GB_ST7789_SendCommand (33, &data, 0, 1000);
  GB_ST7789_SendCommand (19, &data, 0, 1000);
  GB_ST7789_SendCommand (41, &data, 0, 1000);
  GB_ST7789_SendCommand (54, &MADCTL_SetRotation0, 1, 1000);
  Dio_WriteChannel (49, 1);
  ColorMod = {CLOBBER};
  MADCTL_SetRotation0 = {CLOBBER};
  ColAddr = {CLOBBER};
  RowAddr = {CLOBBER};
  data = {CLOBBER};
  return;

}


GB_ST7789_SendDataIm (const uint8_t * data, uint32_t data_size)
{
  <bb 2> :
  Dio_WriteChannel (45, 1);
  _1 = (short unsigned int) data_size;
  GB_MA_SPI_send_byte_conti (data, _1, 5000);
  return;

}


GB_ST7789_SendData (uint8_t * data, uint32_t data_size)
{
  <bb 2> :
  Dio_WriteChannel (45, 1);
  _1 = (short unsigned int) data_size;
  GB_MA_SPI_send_byte_conti (data, _1, 5000);
  return;

}


GB_ST7789_SendCommand (uint8_t commandByte, uint8_t * dataBytes, uint8_t numDataBytes, uint32_t timeout)
{
  <bb 2> :
  Dio_WriteChannel (45, 0);
  GB_MA_SPI_send_byte_conti (&commandByte, 1, timeout);
  Dio_WriteChannel (45, 1);
  if (numDataBytes != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (short unsigned int) numDataBytes;
  GB_MA_SPI_send_byte_conti (dataBytes, _1, timeout);

  <bb 4> :
  return;

}


GB_STT7789_SPI_CS_high ()
{
  <bb 2> :
  Dio_WriteChannel (49, 1);
  return;

}


GB_STT7789_SPI_CS_low ()
{
  <bb 2> :
  Dio_WriteChannel (49, 0);
  return;

}


GB_MA_SPI_exchange_byte (uint8_t * rx_value, uint8_t count, uint32_t timeout)
{
  static uint8_t val = 0;

  <bb 2> :
  _1 = (short unsigned int) count;
  Lpspi_Ip_SyncTransmit (&Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals, &val, rx_value, _1, timeout);
  return;

}


GB_MA_SPI_send_byte_conti (uint8_t * val, uint16_t count, uint32_t timeout)
{
  <bb 2> :
  Lpspi_Ip_SyncTransmit (&Lpspi_Ip_DeviceAttributes_W25_SPI_Flash_BOARD_InitPeripherals, val, &rx_val, count, timeout);
  return;

}


TestDelay (uint32 delay)
{
  static volatile uint32 DelayTimer = 0;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  DelayTimer.0_1 = DelayTimer;
  _2 = DelayTimer.0_1 + 1;
  DelayTimer = _2;

  <bb 4> :
  DelayTimer.1_3 = DelayTimer;
  if (delay > DelayTimer.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  DelayTimer = 0;
  return;

}


