Symbol table:

clockFeatures/43 (clockFeatures) @076190d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetSimFtmoptSel_TrustedCall/26 (read)ResetPccPcsSelect_TrustedCall/32 (read)ResetSimFtmoptSel_TrustedCall/24 (read)SetPccPcsSelect_TrustedCall/34 (read)
  Availability: not_available
  Varpool flags: read-only
selectorEntryPCS_hardwareValue/42 (selectorEntryPCS_hardwareValue) @07611798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetPccPcsSelect_TrustedCall/34 (read)ResetSimTraceSel_TrustedCall/36 (read)ResetSimLpoSel_TrustedCall/16 (read)SetSimLpoSel_TrustedCall/18 (read)SetSimTraceSel_TrustedCall/38 (read)
  Availability: not_available
  Varpool flags: read-only
selectorEntry_hardwareValue/41 (selectorEntry_hardwareValue) @07611360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ResetSimFtmoptSel_TrustedCall/24 (read)SetSimFtmoptSel_TrustedCall/26 (read)ResetSimRtcSel_TrustedCall/12 (read)SetSimRtcSel_TrustedCall/14 (read)SetSimClkoutSel_TrustedCall/30 (read)
  Availability: not_available
  Varpool flags: read-only
selectorEntrySCS_hardwareValue/40 (selectorEntrySCS_hardwareValue) @0696c900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetScgHsrunSel_TrustedCall/10 (read)ResetScgClkoutSel_TrustedCall/20 (read)ResetScgRunSel_TrustedCall/2 (read)SetScgRunSel_TrustedCall/4 (read)SetScgVlprSel_TrustedCall/6 (read)ResetScgHsrunSel_TrustedCall/8 (read)SetScgClkoutSel_TrustedCall/22 (read)
  Availability: not_available
  Varpool flags: read-only
SetSimTraceSel/39 (SetSimTraceSel) @0696f9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSimTraceSel_TrustedCall/38 
SetSimTraceSel_TrustedCall/38 (SetSimTraceSel_TrustedCall) @0696fee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntryPCS_hardwareValue/42 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSimTraceSel/39 
  Calls: 
ResetSimTraceSel/37 (ResetSimTraceSel) @0696fb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSimTraceSel_TrustedCall/36 
ResetSimTraceSel_TrustedCall/36 (ResetSimTraceSel_TrustedCall) @0696f8c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntryPCS_hardwareValue/42 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSimTraceSel/37 
  Calls: 
SetPccPcsSelect/35 (SetPccPcsSelect) @0696f540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetPccPcsSelect_TrustedCall/34 
SetPccPcsSelect_TrustedCall/34 (SetPccPcsSelect_TrustedCall) @0696f2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: clockFeatures/43 (read)selectorEntryPCS_hardwareValue/42 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetPccPcsSelect/35 
  Calls: 
ResetPccPcsSelect/33 (ResetPccPcsSelect) @0696bb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetPccPcsSelect_TrustedCall/32 
ResetPccPcsSelect_TrustedCall/32 (ResetPccPcsSelect_TrustedCall) @0696b0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: clockFeatures/43 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetPccPcsSelect/33 
  Calls: 
SetSimClkoutSel/31 (SetSimClkoutSel) @0696bd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSimClkoutSel_TrustedCall/30 
SetSimClkoutSel_TrustedCall/30 (SetSimClkoutSel_TrustedCall) @0696ba80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntry_hardwareValue/41 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSimClkoutSel/31 
  Calls: 
ResetSimClkoutSel/29 (ResetSimClkoutSel) @0696b7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSimClkoutSel_TrustedCall/28 
ResetSimClkoutSel_TrustedCall/28 (ResetSimClkoutSel_TrustedCall) @0696b540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSimClkoutSel/29 
  Calls: 
SetSimFtmoptSel/27 (SetSimFtmoptSel) @0696b2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSimFtmoptSel_TrustedCall/26 
SetSimFtmoptSel_TrustedCall/26 (SetSimFtmoptSel_TrustedCall) @0696b000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntry_hardwareValue/41 (read)clockFeatures/43 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSimFtmoptSel/27 
  Calls: 
ResetSimFtmoptSel/25 (ResetSimFtmoptSel) @06964d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSimFtmoptSel_TrustedCall/24 
ResetSimFtmoptSel_TrustedCall/24 (ResetSimFtmoptSel_TrustedCall) @06964a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntry_hardwareValue/41 (read)clockFeatures/43 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSimFtmoptSel/25 
  Calls: 
SetScgClkoutSel/23 (SetScgClkoutSel) @06964380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetScgClkoutSel_TrustedCall/22 
SetScgClkoutSel_TrustedCall/22 (SetScgClkoutSel_TrustedCall) @069640e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetScgClkoutSel/23 
  Calls: 
ResetScgClkoutSel/21 (ResetScgClkoutSel) @06961540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetScgClkoutSel_TrustedCall/20 
ResetScgClkoutSel_TrustedCall/20 (ResetScgClkoutSel_TrustedCall) @06961ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetScgClkoutSel/21 
  Calls: 
SetSimLpoSel/19 (SetSimLpoSel) @06961c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSimLpoSel_TrustedCall/18 
SetSimLpoSel_TrustedCall/18 (SetSimLpoSel_TrustedCall) @069619a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntryPCS_hardwareValue/42 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSimLpoSel/19 
  Calls: 
ResetSimLpoSel/17 (ResetSimLpoSel) @06961700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSimLpoSel_TrustedCall/16 
ResetSimLpoSel_TrustedCall/16 (ResetSimLpoSel_TrustedCall) @06961460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntryPCS_hardwareValue/42 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSimLpoSel/17 
  Calls: 
SetSimRtcSel/15 (SetSimRtcSel) @069611c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSimRtcSel_TrustedCall/14 
SetSimRtcSel_TrustedCall/14 (SetSimRtcSel_TrustedCall) @0695cd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntry_hardwareValue/41 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSimRtcSel/15 
  Calls: 
ResetSimRtcSel/13 (ResetSimRtcSel) @0695cee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSimRtcSel_TrustedCall/12 
ResetSimRtcSel_TrustedCall/12 (ResetSimRtcSel_TrustedCall) @0695cc40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntry_hardwareValue/41 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSimRtcSel/13 
  Calls: 
SetScgHsrunSel/11 (SetScgHsrunSel) @0695c9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetScgHsrunSel_TrustedCall/10 
SetScgHsrunSel_TrustedCall/10 (SetScgHsrunSel_TrustedCall) @0695c700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetScgHsrunSel/11 
  Calls: 
ResetScgHsrunSel/9 (ResetScgHsrunSel) @0695c380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetScgHsrunSel_TrustedCall/8 
ResetScgHsrunSel_TrustedCall/8 (ResetScgHsrunSel_TrustedCall) @0695c0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetScgHsrunSel/9 
  Calls: 
SetScgVlprSel/7 (SetScgVlprSel) @069ce1c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetScgVlprSel_TrustedCall/6 
SetScgVlprSel_TrustedCall/6 (SetScgVlprSel_TrustedCall) @069ced20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetScgVlprSel/7 
  Calls: 
SetScgRunSel/5 (SetScgRunSel) @069ce9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetScgRunSel_TrustedCall/4 
SetScgRunSel_TrustedCall/4 (SetScgRunSel_TrustedCall) @069ce700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetScgRunSel/5 
  Calls: 
ResetScgRunSel/3 (ResetScgRunSel) @069ce380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetScgRunSel_TrustedCall/2 
ResetScgRunSel_TrustedCall/2 (ResetScgRunSel_TrustedCall) @069ce0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: selectorEntrySCS_hardwareValue/40 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetScgRunSel/3 
  Calls: 
Callback_SelectorEmpty/1 (Callback_SelectorEmpty) @069cae00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: selectorCallbacks/0 (addr)selectorCallbacks/0 (addr)selectorCallbacks/0 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
selectorCallbacks/0 (selectorCallbacks) @069c8a68
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Callback_SelectorEmpty/1 (addr)Callback_SelectorEmpty/1 (addr)ResetScgRunSel/3 (addr)SetScgRunSel/5 (addr)Callback_SelectorEmpty/1 (addr)SetScgVlprSel/7 (addr)ResetScgHsrunSel/9 (addr)SetScgHsrunSel/11 (addr)ResetSimRtcSel/13 (addr)SetSimRtcSel/15 (addr)ResetSimLpoSel/17 (addr)SetSimLpoSel/19 (addr)ResetScgClkoutSel/21 (addr)SetScgClkoutSel/23 (addr)ResetSimFtmoptSel/25 (addr)SetSimFtmoptSel/27 (addr)ResetSimClkoutSel/29 (addr)SetSimClkoutSel/31 (addr)ResetPccPcsSelect/33 (addr)SetPccPcsSelect/35 (addr)ResetSimTraceSel/37 (addr)SetSimTraceSel/39 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
SetSimTraceSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetSimTraceSel_TrustedCall (config_2(D));
  return;

}


SetSimTraceSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct SIM_Type * _6;

  <bb 2> :
  _1 = config_8(D)->value;
  _2 = selectorEntryPCS_hardwareValue[_1];
  selectorValue_9 = (uint32) _2;
  _3 = 1074036736B;
  regValue_10 ={v} _3->CHIPCTL;
  regValue_11 = regValue_10 & 4294963199;
  _4 = selectorValue_9 << 12;
  _5 = _4 & 4096;
  regValue_12 = regValue_11 | _5;
  _6 = 1074036736B;
  _6->CHIPCTL ={v} regValue_12;
  return;

}


ResetSimTraceSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetSimTraceSel_TrustedCall (config_2(D));
  return;

}


ResetSimTraceSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SIM_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  struct SIM_Type * _5;

  <bb 2> :
  _1 = selectorEntryPCS_hardwareValue[28];
  selectorValue_7 = (uint32) _1;
  _2 = 1074036736B;
  regValue_8 ={v} _2->CHIPCTL;
  regValue_9 = regValue_8 & 4294963199;
  _3 = selectorValue_7 << 12;
  _4 = _3 & 4096;
  regValue_10 = regValue_9 | _4;
  _5 = 1074036736B;
  _5->CHIPCTL ={v} regValue_10;
  return;

}


SetPccPcsSelect (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetPccPcsSelect_TrustedCall (config_2(D));
  return;

}


SetPccPcsSelect_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 pccIndex;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  <unnamed type> _3;
  unsigned char _4;
  struct PCC_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct PCC_Type * _8;

  <bb 2> :
  _1 = config_10(D)->name;
  _2 = clockFeatures[_1][4];
  pccIndex_11 = (uint32) _2;
  _3 = config_10(D)->value;
  _4 = selectorEntryPCS_hardwareValue[_3];
  selectorValue_12 = (uint32) _4;
  _5 = 1074155520B;
  regValue_13 ={v} _5->PCCn[pccIndex_11];
  regValue_14 = regValue_13 & 4177526783;
  _6 = selectorValue_12 << 24;
  _7 = _6 & 117440512;
  regValue_15 = regValue_14 | _7;
  _8 = 1074155520B;
  _8->PCCn[pccIndex_11] ={v} regValue_15;
  return;

}


ResetPccPcsSelect (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetPccPcsSelect_TrustedCall (config_2(D));
  return;

}


ResetPccPcsSelect_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 pccIndex;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct PCC_Type * _3;
  struct PCC_Type * _4;

  <bb 2> :
  _1 = config_6(D)->name;
  _2 = clockFeatures[_1][4];
  pccIndex_7 = (uint32) _2;
  _3 = 1074155520B;
  regValue_8 ={v} _3->PCCn[pccIndex_7];
  regValue_9 = regValue_8 & 3103784959;
  _4 = 1074155520B;
  _4->PCCn[pccIndex_7] ={v} regValue_9;
  return;

}


SetSimClkoutSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetSimClkoutSel_TrustedCall (config_2(D));
  return;

}


SetSimClkoutSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  struct SIM_Type * _5;

  <bb 2> :
  _1 = config_7(D)->value;
  _2 = selectorEntry_hardwareValue[_1];
  selectorValue_8 = (uint32) _2;
  _3 = 1074036736B;
  regValue_9 ={v} _3->CHIPCTL;
  regValue_10 = regValue_9 & 4294967055;
  _4 = selectorValue_8 << 4;
  regValue_11 = regValue_10 | _4;
  _5 = 1074036736B;
  _5->CHIPCTL ={v} regValue_11;
  return;

}


ResetSimClkoutSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetSimClkoutSel_TrustedCall (config_2(D));
  return;

}


ResetSimClkoutSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 regValue;
  struct SIM_Type * _1;
  struct SIM_Type * _2;

  <bb 2> :
  _1 = 1074036736B;
  regValue_4 ={v} _1->CHIPCTL;
  regValue_5 = regValue_4 & 4294965007;
  _2 = 1074036736B;
  _2->CHIPCTL ={v} regValue_5;
  return;

}


SetSimFtmoptSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetSimFtmoptSel_TrustedCall (config_2(D));
  return;

}


SetSimFtmoptSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 instance;
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  <unnamed type> _3;
  unsigned char _4;
  struct SIM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  struct SIM_Type * _22;

  <bb 2> :
  _1 = config_25(D)->value;
  _2 = selectorEntry_hardwareValue[_1];
  selectorValue_26 = (uint32) _2;
  _3 = config_25(D)->name;
  _4 = clockFeatures[_3][0];
  instance_27 = (uint32) _4;
  _5 = 1074036736B;
  regValue_28 ={v} _5->FTMOPT0;
  if (instance_27 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = instance_27 << 1;
  _7 = _6 + 24;
  _8 = 3 << _7;
  _9 = ~_8;
  regValue_31 = regValue_28 & _9;
  _10 = instance_27 << 1;
  _11 = _10 + 24;
  _12 = selectorValue_26 << _11;
  regValue_32 = regValue_31 | _12;
  goto <bb 5>; [INV]

  <bb 4> :
  _13 = instance_27 + 4294967292;
  _14 = _13 << 1;
  _15 = _14 + 16;
  _16 = 3 << _15;
  _17 = ~_16;
  regValue_29 = regValue_28 & _17;
  _18 = instance_27 + 4294967292;
  _19 = _18 << 1;
  _20 = _19 + 16;
  _21 = selectorValue_26 << _20;
  regValue_30 = regValue_29 | _21;

  <bb 5> :
  # regValue_23 = PHI <regValue_32(3), regValue_30(4)>
  _22 = 1074036736B;
  _22->FTMOPT0 ={v} regValue_23;
  return;

}


ResetSimFtmoptSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetSimFtmoptSel_TrustedCall (config_2(D));
  return;

}


ResetSimFtmoptSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 instance;
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  <unnamed type> _2;
  unsigned char _3;
  struct SIM_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct SIM_Type * _21;

  <bb 2> :
  _1 = selectorEntry_hardwareValue[5];
  selectorValue_24 = (uint32) _1;
  _2 = config_25(D)->name;
  _3 = clockFeatures[_2][0];
  instance_26 = (uint32) _3;
  _4 = 1074036736B;
  regValue_27 ={v} _4->FTMOPT0;
  if (instance_26 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = instance_26 << 1;
  _6 = _5 + 24;
  _7 = 3 << _6;
  _8 = ~_7;
  regValue_30 = regValue_27 & _8;
  _9 = instance_26 << 1;
  _10 = _9 + 24;
  _11 = selectorValue_24 << _10;
  regValue_31 = regValue_30 | _11;
  goto <bb 5>; [INV]

  <bb 4> :
  _12 = instance_26 + 4294967292;
  _13 = _12 << 1;
  _14 = _13 + 16;
  _15 = 3 << _14;
  _16 = ~_15;
  regValue_28 = regValue_27 & _16;
  _17 = instance_26 + 4294967292;
  _18 = _17 << 1;
  _19 = _18 + 16;
  _20 = selectorValue_24 << _19;
  regValue_29 = regValue_28 | _20;

  <bb 5> :
  # regValue_22 = PHI <regValue_31(3), regValue_29(4)>
  _21 = 1074036736B;
  _21->FTMOPT0 ={v} regValue_22;
  return;

}


SetScgClkoutSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetScgClkoutSel_TrustedCall (config_2(D));
  return;

}


SetScgClkoutSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;

  <bb 2> :
  _1 = config_7(D)->value;
  _2 = selectorEntrySCS_hardwareValue[_1];
  selectorValue_8 = (uint32) _2;
  _3 = 1074151424B;
  regValue_9 ={v} _3->CLKOUTCNFG;
  regValue_10 = regValue_9 & 4043309055;
  _4 = selectorValue_8 << 24;
  regValue_11 = regValue_10 | _4;
  _5 = 1074151424B;
  _5->CLKOUTCNFG ={v} regValue_11;
  return;

}


ResetScgClkoutSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetScgClkoutSel_TrustedCall (config_2(D));
  return;

}


ResetScgClkoutSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  struct SCG_Type * _4;

  <bb 2> :
  _1 = selectorEntrySCS_hardwareValue[5];
  selectorValue_6 = (uint32) _1;
  _2 = 1074151424B;
  regValue_7 ={v} _2->CLKOUTCNFG;
  regValue_8 = regValue_7 & 4043309055;
  _3 = selectorValue_6 << 24;
  regValue_9 = regValue_8 | _3;
  _4 = 1074151424B;
  _4->CLKOUTCNFG ={v} regValue_9;
  return;

}


SetSimLpoSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetSimLpoSel_TrustedCall (config_2(D));
  return;

}


SetSimLpoSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  struct SIM_Type * _5;

  <bb 2> :
  _1 = config_7(D)->value;
  _2 = selectorEntryPCS_hardwareValue[_1];
  selectorValue_8 = (uint32) _2;
  _3 = 1074036736B;
  regValue_9 ={v} _3->LPOCLKS;
  regValue_10 = regValue_9 & 4294967283;
  _4 = selectorValue_8 << 2;
  regValue_11 = regValue_10 | _4;
  _5 = 1074036736B;
  _5->LPOCLKS ={v} regValue_11;
  return;

}


ResetSimLpoSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetSimLpoSel_TrustedCall (config_2(D));
  return;

}


ResetSimLpoSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SIM_Type * _2;
  long unsigned int _3;
  struct SIM_Type * _4;

  <bb 2> :
  _1 = selectorEntryPCS_hardwareValue[1];
  selectorValue_6 = (uint32) _1;
  _2 = 1074036736B;
  regValue_7 ={v} _2->LPOCLKS;
  regValue_8 = regValue_7 & 4294967283;
  _3 = selectorValue_6 << 2;
  regValue_9 = regValue_8 | _3;
  _4 = 1074036736B;
  _4->LPOCLKS ={v} regValue_9;
  return;

}


SetSimRtcSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetSimRtcSel_TrustedCall (config_2(D));
  return;

}


SetSimRtcSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  struct SIM_Type * _5;

  <bb 2> :
  _1 = config_7(D)->value;
  _2 = selectorEntry_hardwareValue[_1];
  selectorValue_8 = (uint32) _2;
  _3 = 1074036736B;
  regValue_9 ={v} _3->LPOCLKS;
  regValue_10 = regValue_9 & 4294967247;
  _4 = selectorValue_8 << 4;
  regValue_11 = regValue_10 | _4;
  _5 = 1074036736B;
  _5->LPOCLKS ={v} regValue_11;
  return;

}


ResetSimRtcSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetSimRtcSel_TrustedCall (config_2(D));
  return;

}


ResetSimRtcSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SIM_Type * _2;
  long unsigned int _3;
  struct SIM_Type * _4;

  <bb 2> :
  _1 = selectorEntry_hardwareValue[14];
  selectorValue_6 = (uint32) _1;
  _2 = 1074036736B;
  regValue_7 ={v} _2->LPOCLKS;
  regValue_8 = regValue_7 & 4294967247;
  _3 = selectorValue_6 << 4;
  regValue_9 = regValue_8 | _3;
  _4 = 1074036736B;
  _4->LPOCLKS ={v} regValue_9;
  return;

}


SetScgHsrunSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetScgHsrunSel_TrustedCall (config_2(D));
  return;

}


SetScgHsrunSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct SCG_Type * _6;

  <bb 2> :
  _1 = config_8(D)->value;
  _2 = selectorEntrySCS_hardwareValue[_1];
  selectorValue_9 = (uint32) _2;
  _3 = 1074151424B;
  regValue_10 ={v} _3->HCCR;
  regValue_11 = regValue_10 & 4043309055;
  _4 = selectorValue_9 << 24;
  _5 = _4 & 251658240;
  regValue_12 = regValue_11 | _5;
  _6 = 1074151424B;
  _6->HCCR ={v} regValue_12;
  return;

}


ResetScgHsrunSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetScgHsrunSel_TrustedCall (config_2(D));
  return;

}


ResetScgHsrunSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  struct SCG_Type * _5;

  <bb 2> :
  _1 = selectorEntrySCS_hardwareValue[5];
  selectorValue_7 = (uint32) _1;
  _2 = 1074151424B;
  regValue_8 ={v} _2->HCCR;
  regValue_9 = regValue_8 & 4043309055;
  _3 = selectorValue_7 << 24;
  _4 = _3 & 251658240;
  regValue_10 = regValue_9 | _4;
  _5 = 1074151424B;
  _5->HCCR ={v} regValue_10;
  return;

}


SetScgVlprSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetScgVlprSel_TrustedCall (config_2(D));
  return;

}


SetScgVlprSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct SCG_Type * _6;

  <bb 2> :
  _1 = config_8(D)->value;
  _2 = selectorEntrySCS_hardwareValue[_1];
  selectorValue_9 = (uint32) _2;
  _3 = 1074151424B;
  regValue_10 ={v} _3->VCCR;
  regValue_11 = regValue_10 & 4043309055;
  _4 = selectorValue_9 << 24;
  _5 = _4 & 251658240;
  regValue_12 = regValue_11 | _5;
  _6 = 1074151424B;
  _6->VCCR ={v} regValue_12;
  return;

}


SetScgRunSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  SetScgRunSel_TrustedCall (config_2(D));
  return;

}


SetScgRunSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  <unnamed type> _1;
  unsigned char _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  struct SCG_Type * _6;

  <bb 2> :
  _1 = config_8(D)->value;
  _2 = selectorEntrySCS_hardwareValue[_1];
  selectorValue_9 = (uint32) _2;
  _3 = 1074151424B;
  regValue_10 ={v} _3->RCCR;
  regValue_11 = regValue_10 & 4043309055;
  _4 = selectorValue_9 << 24;
  _5 = _4 & 251658240;
  regValue_12 = regValue_11 | _5;
  _6 = 1074151424B;
  _6->RCCR ={v} regValue_12;
  return;

}


ResetScgRunSel (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  ResetScgRunSel_TrustedCall (config_2(D));
  return;

}


ResetScgRunSel_TrustedCall (const struct Clock_Ip_SelectorConfigType * config)
{
  uint32 selectorValue;
  uint32 regValue;
  unsigned char _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  struct SCG_Type * _5;

  <bb 2> :
  _1 = selectorEntrySCS_hardwareValue[5];
  selectorValue_7 = (uint32) _1;
  _2 = 1074151424B;
  regValue_8 ={v} _2->RCCR;
  regValue_9 = regValue_8 & 4043309055;
  _3 = selectorValue_7 << 24;
  _4 = _3 & 251658240;
  regValue_10 = regValue_9 | _4;
  _5 = 1074151424B;
  _5->RCCR ={v} regValue_10;
  return;

}


Callback_SelectorEmpty (const struct Clock_Ip_SelectorConfigType * config)
{
  <bb 2> :
  return;

}


