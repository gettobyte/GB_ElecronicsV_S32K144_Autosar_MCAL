IPA summary for Lpspi_Ip_GetStatus/22 is missing.
IPA summary for Lpspi_Ip_IrqHandler/21 is missing.
IPA summary for Lpspi_Ip_Cancel/20 is missing.
IPA summary for Lpspi_Ip_UpdateTransferMode/19 is missing.
IPA summary for Lpspi_Ip_UpdateDefaultTransmitData/18 is missing.
IPA summary for Lpspi_Ip_UpdateLsb/17 is missing.
IPA summary for Lpspi_Ip_UpdateFrameSize/16 is missing.
IPA summary for Lpspi_Ip_ManageBuffers/15 is missing.
IPA summary for Lpspi_Ip_AsyncTransmit/14 is missing.
IPA summary for Lpspi_TransmitRxInit/13 is missing.
IPA summary for Lpspi_TransmitTxInit/12 is missing.
IPA summary for Lpspi_Ip_SyncTransmit/11 is missing.
IPA summary for Lpspi_Ip_DeInit/10 is missing.
IPA summary for Lpspi_Ip_Init/9 is missing.
IPA summary for Lpspi_Ip_CheckValidParameters/8 is missing.
IPA summary for Lpspi_Ip_TransferProcess/7 is missing.
IPA summary for Lpspi_Ip_ChannelFinished/6 is missing.
IPA summary for DevAssert/0 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       40 calls, 40.000000 freq, 0 count
function body not available                       :       13 calls, 13.000000 freq, 0 count
IPA summary for Lpspi_Ip_GetStatus/22 is missing.
IPA summary for Lpspi_Ip_IrqHandler/21 is missing.
IPA summary for Lpspi_Ip_Cancel/20 is missing.
IPA summary for Lpspi_Ip_UpdateTransferMode/19 is missing.
IPA summary for Lpspi_Ip_UpdateDefaultTransmitData/18 is missing.
IPA summary for Lpspi_Ip_UpdateLsb/17 is missing.
IPA summary for Lpspi_Ip_UpdateFrameSize/16 is missing.
IPA summary for Lpspi_Ip_ManageBuffers/15 is missing.
IPA summary for Lpspi_Ip_AsyncTransmit/14 is missing.
IPA summary for Lpspi_TransmitRxInit/13 is missing.
IPA summary for Lpspi_TransmitTxInit/12 is missing.
IPA summary for Lpspi_Ip_SyncTransmit/11 is missing.
IPA summary for Lpspi_Ip_DeInit/10 is missing.
IPA summary for Lpspi_Ip_Init/9 is missing.
IPA summary for Lpspi_Ip_CheckValidParameters/8 is missing.
IPA summary for Lpspi_Ip_TransferProcess/7 is missing.
IPA summary for Lpspi_Ip_ChannelFinished/6 is missing.
IPA summary for DevAssert/0 is missing.
Symbol table:

SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_10/33 (SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_10) @068f6460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_Cancel/20 
  Calls: 
SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_10/32 (SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_10) @068f6380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_Cancel/20 
  Calls: 
SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_11/31 (SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_11) @068dfe00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_AsyncTransmit/14 
  Calls: 
SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_11/30 (SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_11) @068dfd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_AsyncTransmit/14 
  Calls: 
SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09/29 (SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09) @068dfc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_AsyncTransmit/14 
  Calls: 
SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_09/28 (SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_09) @068dfb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_AsyncTransmit/14 
  Calls: 
OsIf_GetElapsed/27 (OsIf_GetElapsed) @068df7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_SyncTransmit/11 
  Calls: 
OsIf_GetCounter/26 (OsIf_GetCounter) @068df700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_SyncTransmit/11 
  Calls: 
SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08/25 (SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08) @068df620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_SyncTransmit/11 
  Calls: 
SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_08/24 (SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_08) @068df540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_SyncTransmit/11 
  Calls: 
OsIf_MicrosToTicks/23 (OsIf_MicrosToTicks) @068df460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Lpspi_Ip_SyncTransmit/11 
  Calls: 
Lpspi_Ip_GetStatus/22 (Lpspi_Ip_GetStatus) @068b8620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DevAssert/0 
Lpspi_Ip_IrqHandler/21 (Lpspi_Ip_IrqHandler) @068b8380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_TransferProcess/7 
Lpspi_Ip_Cancel/20 (Lpspi_Ip_Cancel) @068b80e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_10/33 SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_10/32 DevAssert/0 DevAssert/0 
Lpspi_Ip_UpdateTransferMode/19 (Lpspi_Ip_UpdateTransferMode) @068a9a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_Init/9 
  Calls: DevAssert/0 DevAssert/0 
Lpspi_Ip_UpdateDefaultTransmitData/18 (Lpspi_Ip_UpdateDefaultTransmitData) @068a9540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DevAssert/0 DevAssert/0 
Lpspi_Ip_UpdateLsb/17 (Lpspi_Ip_UpdateLsb) @068a9ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DevAssert/0 DevAssert/0 
Lpspi_Ip_UpdateFrameSize/16 (Lpspi_Ip_UpdateFrameSize) @068a9c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DevAssert/0 DevAssert/0 DevAssert/0 DevAssert/0 
Lpspi_Ip_ManageBuffers/15 (Lpspi_Ip_ManageBuffers) @068a99a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_TransferProcess/7 DevAssert/0 DevAssert/0 
Lpspi_Ip_AsyncTransmit/14 (Lpspi_Ip_AsyncTransmit) @068a9700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_TransmitRxInit/13 SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_11/31 Lpspi_TransmitTxInit/12 SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_11/30 SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09/29 SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09/29 SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_09/28 DevAssert/0 Lpspi_Ip_CheckValidParameters/8 DevAssert/0 DevAssert/0 
Lpspi_TransmitRxInit/13 (Lpspi_TransmitRxInit) @068a9460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_SyncTransmit/11 
  Calls: 
Lpspi_TransmitTxInit/12 (Lpspi_TransmitTxInit) @068a91c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_TransferProcess/7 
  Calls: 
Lpspi_Ip_SyncTransmit/11 (Lpspi_Ip_SyncTransmit) @0683ba80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: OsIf_GetElapsed/27 Lpspi_TransmitTxInit/12 OsIf_GetCounter/26 Lpspi_TransmitRxInit/13 Lpspi_TransmitTxInit/12 SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08/25 SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08/25 SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_08/24 DevAssert/0 Lpspi_Ip_CheckValidParameters/8 DevAssert/0 DevAssert/0 DevAssert/0 OsIf_MicrosToTicks/23 
Lpspi_Ip_DeInit/10 (Lpspi_Ip_DeInit) @0683b540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxStateStructureArray/2 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DevAssert/0 DevAssert/0 
Lpspi_Ip_Init/9 (Lpspi_Ip_Init) @0683bee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_axStateStructure/1 (addr)Lpspi_Ip_apxStateStructureArray/2 (write)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_UpdateTransferMode/19 DevAssert/0 DevAssert/0 
Lpspi_Ip_CheckValidParameters/8 (Lpspi_Ip_CheckValidParameters) @0683bc40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_SyncTransmit/11 
  Calls: DevAssert/0 DevAssert/0 
Lpspi_Ip_TransferProcess/7 (Lpspi_Ip_TransferProcess) @0683b9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)Lpspi_Ip_apxBases/3 (read)Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_IrqHandler/21 Lpspi_Ip_ManageBuffers/15 
  Calls: Lpspi_Ip_ChannelFinished/6 Lpspi_TransmitTxInit/12 
Lpspi_Ip_ChannelFinished/6 (Lpspi_Ip_ChannelFinished) @0683b700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Lpspi_Ip_apxStateStructureArray/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Lpspi_Ip_TransferProcess/7 
  Calls: 
   Indirect call
   Indirect call
Lpspi_Ip_apxBases/3 (Lpspi_Ip_apxBases) @06834480
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Lpspi_Ip_DeInit/10 (read)Lpspi_Ip_Init/9 (read)Lpspi_Ip_Cancel/20 (read)Lpspi_Ip_AsyncTransmit/14 (read)Lpspi_Ip_TransferProcess/7 (read)Lpspi_TransmitTxInit/12 (read)Lpspi_Ip_TransferProcess/7 (read)Lpspi_Ip_TransferProcess/7 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_ManageBuffers/15 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_IrqHandler/21 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Lpspi_Ip_apxStateStructureArray/2 (Lpspi_Ip_apxStateStructureArray) @068343f0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Lpspi_Ip_TransferProcess/7 (read)Lpspi_Ip_DeInit/10 (write)Lpspi_Ip_Cancel/20 (read)Lpspi_Ip_IrqHandler/21 (read)Lpspi_Ip_UpdateTransferMode/19 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_UpdateDefaultTransmitData/18 (read)Lpspi_Ip_Init/9 (read)Lpspi_Ip_TransferProcess/7 (read)Lpspi_Ip_TransferProcess/7 (read)Lpspi_Ip_ChannelFinished/6 (read)Lpspi_TransmitTxInit/12 (read)Lpspi_TransmitRxInit/13 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_AsyncTransmit/14 (read)Lpspi_Ip_ManageBuffers/15 (read)Lpspi_Ip_UpdateFrameSize/16 (read)Lpspi_Ip_UpdateLsb/17 (read)Lpspi_Ip_SyncTransmit/11 (read)Lpspi_Ip_DeInit/10 (read)Lpspi_Ip_Init/9 (read)Lpspi_Ip_Init/9 (write)Lpspi_Ip_GetStatus/22 (read)
  Availability: available
  Varpool flags:
Lpspi_Ip_axStateStructure/1 (Lpspi_Ip_axStateStructure) @06834318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Lpspi_Ip_Init/9 (addr)
  Availability: available
  Varpool flags:
DevAssert/0 (DevAssert) @06831c40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Lpspi_Ip_GetStatus/22 Lpspi_Ip_Cancel/20 Lpspi_Ip_Cancel/20 Lpspi_Ip_Init/9 Lpspi_Ip_Init/9 Lpspi_Ip_UpdateTransferMode/19 Lpspi_Ip_UpdateTransferMode/19 Lpspi_Ip_UpdateDefaultTransmitData/18 Lpspi_Ip_UpdateDefaultTransmitData/18 Lpspi_Ip_UpdateLsb/17 Lpspi_Ip_UpdateLsb/17 Lpspi_Ip_UpdateFrameSize/16 Lpspi_Ip_UpdateFrameSize/16 Lpspi_Ip_UpdateFrameSize/16 Lpspi_Ip_UpdateFrameSize/16 Lpspi_Ip_ManageBuffers/15 Lpspi_Ip_ManageBuffers/15 Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_AsyncTransmit/14 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_SyncTransmit/11 Lpspi_Ip_DeInit/10 Lpspi_Ip_DeInit/10 Lpspi_Ip_CheckValidParameters/8 Lpspi_Ip_CheckValidParameters/8 
  Calls: 

;; Function DevAssert (DevAssert, funcdef_no=0, decl_uid=5748, cgraph_uid=1, symbol_order=0)

DevAssert (volatile boolean x)
{
  _Bool x.9_1;

  <bb 2> :
  x.9_1 ={v} x;
  if (x.9_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  goto <bb 3>; [INV]

  <bb 4> :
  return;

}



;; Function Lpspi_Ip_ChannelFinished (Lpspi_Ip_ChannelFinished, funcdef_no=3, decl_uid=5762, cgraph_uid=4, symbol_order=6)

Lpspi_Ip_ChannelFinished (uint8 Instance, boolean ErrorFlag)
{
  struct Lpspi_Ip_StateStructureType * State;
  int _1;
  void (*<T4ae>) (uint8, Lpspi_Ip_EventType) _2;
  void (*<T4ae>) (uint8, Lpspi_Ip_EventType) _3;
  void (*<T4ae>) (uint8, Lpspi_Ip_EventType) _4;

  <bb 2> :
  _1 = (int) Instance_7(D);
  State_9 = Lpspi_Ip_apxStateStructureArray[_1];
  if (ErrorFlag_10(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  State_9->Status = 3;
  goto <bb 5>; [INV]

  <bb 4> :
  State_9->Status = 1;

  <bb 5> :
  _2 = State_9->Callback;
  if (_2 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (ErrorFlag_10(D) != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = State_9->Callback;
  _3 (Instance_7(D), 1);
  goto <bb 9>; [INV]

  <bb 8> :
  _4 = State_9->Callback;
  _4 (Instance_7(D), 0);

  <bb 9> :
  return;

}



;; Function Lpspi_Ip_TransferProcess (Lpspi_Ip_TransferProcess, funcdef_no=4, decl_uid=5764, cgraph_uid=5, symbol_order=7)

Lpspi_Ip_TransferProcess (uint8 Instance)
{
  struct LPSPI_Type * Base;
  struct Lpspi_Ip_StateStructureType * State;
  uint32 Data;
  uint8 Index;
  uint8 Instance;
  uint8 NumberOfWrites;
  long unsigned int vol.3;
  const struct LPSPI_Type * Base;
  struct Lpspi_Ip_StateStructureType * State;
  uint32 Data;
  uint8 Index;
  uint8 Instance;
  uint8 NumberOfReads;
  boolean ErrorFlag;
  uint8 NumberOfReads;
  uint8 NumberOfWrites;
  uint32 SrStatusRegister;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  int _1;
  int _2;
  <unnamed type> _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  int _10;
  short unsigned int _11;
  int _12;
  short unsigned int _13;
  int _14;
  int _15;
  short unsigned int _16;
  unsigned char _17;
  short unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  _Bool _26;
  _Bool _27;
  short unsigned int _28;
  short unsigned int _29;
  int _30;
  short unsigned int _31;
  int _32;
  short unsigned int _33;
  int _34;
  int _35;
  short unsigned int _36;
  unsigned char _37;
  short unsigned int _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  _Bool _42;
  const struct Lpspi_Ip_ExternalDeviceType * _43;
  struct Lpspi_Ip_DeviceParamsType * _44;
  long unsigned int _45;
  uint8 * _46;
  unsigned char _47;
  _Bool _48;
  short unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  _Bool _52;
  _Bool _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  short unsigned int _58;
  short unsigned int _59;
  int _95;
  int _97;
  uint8 * _101;
  const struct Lpspi_Ip_ExternalDeviceType * _102;
  struct Lpspi_Ip_DeviceParamsType * _103;
  unsigned char _104;
  uint8 * _107;
  short unsigned int _108;
  int _109;
  int _111;
  int _112;
  sizetype _113;
  uint8 * _114;
  unsigned char _115;
  unsigned char Index.0_116;
  const struct Lpspi_Ip_ExternalDeviceType * _118;
  struct Lpspi_Ip_DeviceParamsType * _119;
  unsigned char _120;
  uint8 * _123;
  short unsigned int _124;
  int _125;
  int _127;
  int _128;
  unsigned int _129;
  unsigned int _130;
  uint8 * _131;
  short unsigned int _132;
  unsigned char Index.1_133;
  uint8 * _137;
  short unsigned int _138;
  int _139;
  int _141;
  int _142;
  unsigned int _143;
  unsigned int _144;
  uint8 * _145;
  unsigned char Index.2_146;
  long unsigned int vol.3_149;
  unsigned char Index.4_151;
  short unsigned int _153;
  short unsigned int _154;
  short unsigned int _155;
  int _158;
  int _160;
  const struct Lpspi_Ip_ExternalDeviceType * _164;
  struct Lpspi_Ip_DeviceParamsType * _165;
  uint8 * _167;
  unsigned char _168;
  uint8 * _170;
  short unsigned int _171;
  int _172;
  int _174;
  int _175;
  sizetype _176;
  uint8 * _177;
  unsigned char _178;
  unsigned char Index.5_180;
  unsigned char _182;
  uint8 * _184;
  short unsigned int _185;
  int _186;
  int _188;
  int _189;
  unsigned int _190;
  unsigned int _191;
  uint8 * _192;
  short unsigned int _193;
  unsigned char Index.6_195;
  uint8 * _198;
  short unsigned int _199;
  int _200;
  int _202;
  int _203;
  unsigned int _204;
  unsigned int _205;
  uint8 * _206;
  unsigned char Index.7_208;
  unsigned char Index.8_212;
  short unsigned int _214;
  short unsigned int _215;
  short unsigned int _216;

  <bb 2> :
  _1 = (int) Instance_67(D);
  Base_69 = Lpspi_Ip_apxBases[_1];
  _2 = (int) Instance_67(D);
  State_70 = Lpspi_Ip_apxStateStructureArray[_2];
  NumberOfWrites_71 = 0;
  NumberOfReads_72 = 0;
  ErrorFlag_73 = 0;
  _3 = State_70->Status;
  if (_3 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 3> :
  SrStatusRegister_74 ={v} Base_69->SR;
  _4 ={v} Base_69->SR;
  _5 = _4 & 16128;
  Base_69->SR ={v} _5;
  _6 = SrStatusRegister_74 & 6144;
  if (_6 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  ErrorFlag_90 = 1;
  goto <bb 54>; [INV]

  <bb 5> :
  _7 ={v} Base_69->FSR;
  _8 = _7 >> 16;
  _9 = (unsigned char) _8;
  NumberOfReads_76 = _9 & 7;
  if (NumberOfReads_76 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 6> :
  _10 = (int) NumberOfReads_76;
  _11 = State_70->ExpectedFifoReads;
  _12 = (int) _11;
  _13 = State_70->RxIndex;
  _14 = (int) _13;
  _15 = _12 - _14;
  if (_10 > _15)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _16 = State_70->ExpectedFifoReads;
  _17 = (unsigned char) _16;
  _18 = State_70->RxIndex;
  _19 = (unsigned char) _18;
  NumberOfReads_77 = _17 - _19;

  <bb 8> :
  # NumberOfReads_61 = PHI <NumberOfReads_76(6), NumberOfReads_77(7)>
  _20 = State_70->RxIndex;
  if (_20 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _21 = State_70->CurrentTxFifoSlot;
  _22 = _21 + 1;
  State_70->CurrentTxFifoSlot = _22;

  <bb 10> :
  Instance_93 = Instance_67(D);
  NumberOfReads_94 = NumberOfReads_61;
  _95 = (int) Instance_93;
  Base_96 = Lpspi_Ip_apxBases[_95];
  _97 = (int) Instance_93;
  State_98 = Lpspi_Ip_apxStateStructureArray[_97];
  Data_99 = 0;
  Index_100 = 0;
  _101 = State_98->RxBuffer;
  if (_101 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 11> :
  _102 = State_98->ExternalDevice;
  _103 = _102->DeviceParams;
  _104 = _103->FrameSize;
  if (_104 <= 8)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  Index_105 = 0;
  goto <bb 14>; [INV]

  <bb 13> :
  Data_106 ={v} Base_96->RDR;
  _107 = State_98->RxBuffer;
  _108 = State_98->RxIndex;
  _109 = (int) _108;
  _111 = (int) Index_110;
  _112 = _109 + _111;
  _113 = (sizetype) _112;
  _114 = _107 + _113;
  _115 = (unsigned char) Data_106;
  *_114 = _115;
  Index.0_116 = Index_110;
  Index_117 = Index.0_116 + 1;

  <bb 14> :
  # Index_110 = PHI <Index_105(12), Index_117(13)>
  if (NumberOfReads_94 > Index_110)
    goto <bb 13>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 15> :
  _118 = State_98->ExternalDevice;
  _119 = _118->DeviceParams;
  _120 = _119->FrameSize;
  if (_120 <= 16)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  Index_121 = 0;
  goto <bb 18>; [INV]

  <bb 17> :
  Data_122 ={v} Base_96->RDR;
  _123 = State_98->RxBuffer;
  _124 = State_98->RxIndex;
  _125 = (int) _124;
  _127 = (int) Index_126;
  _128 = _125 + _127;
  _129 = (unsigned int) _128;
  _130 = _129 * 2;
  _131 = _123 + _130;
  _132 = (short unsigned int) Data_122;
  MEM[(uint16 *)_131] = _132;
  Index.1_133 = Index_126;
  Index_134 = Index.1_133 + 1;

  <bb 18> :
  # Index_126 = PHI <Index_121(16), Index_134(17)>
  if (NumberOfReads_94 > Index_126)
    goto <bb 17>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 19> :
  Index_135 = 0;
  goto <bb 21>; [INV]

  <bb 20> :
  Data_136 ={v} Base_96->RDR;
  _137 = State_98->RxBuffer;
  _138 = State_98->RxIndex;
  _139 = (int) _138;
  _141 = (int) Index_140;
  _142 = _139 + _141;
  _143 = (unsigned int) _142;
  _144 = _143 * 4;
  _145 = _137 + _144;
  MEM[(uint32 *)_145] = Data_136;
  Index.2_146 = Index_140;
  Index_147 = Index.2_146 + 1;

  <bb 21> :
  # Index_140 = PHI <Index_135(19), Index_147(20)>
  if (NumberOfReads_94 > Index_140)
    goto <bb 20>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  Index_148 = 0;
  goto <bb 24>; [INV]

  <bb 23> :
  vol.3_149 ={v} Base_96->RDR;
  Index.4_151 = Index_150;
  Index_152 = Index.4_151 + 1;

  <bb 24> :
  # Index_150 = PHI <Index_148(22), Index_152(23)>
  if (NumberOfReads_94 > Index_150)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _153 = State_98->RxIndex;
  _154 = (short unsigned int) NumberOfReads_94;
  _155 = _153 + _154;
  State_98->RxIndex = _155;

  <bb 26> :
  _23 = State_70->CurrentTxFifoSlot;
  _24 = NumberOfReads_61 + _23;
  State_70->CurrentTxFifoSlot = _24;

  <bb 27> :
  _25 = State_70->CurrentTxFifoSlot;
  if (_25 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 28> :
  _26 = State_70->TxDoneFlag;
  _27 = ~_26;
  if (_27 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 29> :
  _28 = State_70->ExpectedFifoWrites;
  _29 = State_70->TxIndex;
  if (_28 != _29)
    goto <bb 30>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 30> :
  NumberOfWrites_87 = State_70->CurrentTxFifoSlot;
  _30 = (int) NumberOfWrites_87;
  _31 = State_70->ExpectedFifoWrites;
  _32 = (int) _31;
  _33 = State_70->TxIndex;
  _34 = (int) _33;
  _35 = _32 - _34;
  if (_30 > _35)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  _36 = State_70->ExpectedFifoWrites;
  _37 = (unsigned char) _36;
  _38 = State_70->TxIndex;
  _39 = (unsigned char) _38;
  NumberOfWrites_88 = _37 - _39;

  <bb 32> :
  # NumberOfWrites_60 = PHI <NumberOfWrites_87(30), NumberOfWrites_88(31)>
  Instance_156 = Instance_67(D);
  NumberOfWrites_157 = NumberOfWrites_60;
  _158 = (int) Instance_156;
  Base_159 = Lpspi_Ip_apxBases[_158];
  _160 = (int) Instance_156;
  State_161 = Lpspi_Ip_apxStateStructureArray[_160];
  Data_162 = 0;
  Index_163 = 0;
  _164 = State_161->ExternalDevice;
  _165 = _164->DeviceParams;
  Data_166 = _165->DefaultData;
  _167 = State_161->TxBuffer;
  if (_167 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 33> :
  _168 = State_161->TxFrameSize;
  if (_168 <= 8)
    goto <bb 34>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 34> :
  Index_169 = 0;
  goto <bb 36>; [INV]

  <bb 35> :
  _170 = State_161->TxBuffer;
  _171 = State_161->TxIndex;
  _172 = (int) _171;
  _174 = (int) Index_173;
  _175 = _172 + _174;
  _176 = (sizetype) _175;
  _177 = _170 + _176;
  _178 = *_177;
  Data_179 = (uint32) _178;
  Base_159->TDR ={v} Data_179;
  Index.5_180 = Index_173;
  Index_181 = Index.5_180 + 1;

  <bb 36> :
  # Index_173 = PHI <Index_169(34), Index_181(35)>
  if (NumberOfWrites_157 > Index_173)
    goto <bb 35>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 37> :
  _182 = State_161->TxFrameSize;
  if (_182 <= 16)
    goto <bb 38>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 38> :
  Index_183 = 0;
  goto <bb 40>; [INV]

  <bb 39> :
  _184 = State_161->TxBuffer;
  _185 = State_161->TxIndex;
  _186 = (int) _185;
  _188 = (int) Index_187;
  _189 = _186 + _188;
  _190 = (unsigned int) _189;
  _191 = _190 * 2;
  _192 = _184 + _191;
  _193 = MEM[(uint16 *)_192];
  Data_194 = (uint32) _193;
  Base_159->TDR ={v} Data_194;
  Index.6_195 = Index_187;
  Index_196 = Index.6_195 + 1;

  <bb 40> :
  # Index_187 = PHI <Index_183(38), Index_196(39)>
  if (NumberOfWrites_157 > Index_187)
    goto <bb 39>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 41> :
  Index_197 = 0;
  goto <bb 43>; [INV]

  <bb 42> :
  _198 = State_161->TxBuffer;
  _199 = State_161->TxIndex;
  _200 = (int) _199;
  _202 = (int) Index_201;
  _203 = _200 + _202;
  _204 = (unsigned int) _203;
  _205 = _204 * 4;
  _206 = _198 + _205;
  Data_207 = MEM[(uint32 *)_206];
  Base_159->TDR ={v} Data_207;
  Index.7_208 = Index_201;
  Index_209 = Index.7_208 + 1;

  <bb 43> :
  # Index_201 = PHI <Index_197(41), Index_209(42)>
  if (NumberOfWrites_157 > Index_201)
    goto <bb 42>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 44> :
  Index_210 = 0;
  goto <bb 46>; [INV]

  <bb 45> :
  Base_159->TDR ={v} Data_166;
  Index.8_212 = Index_211;
  Index_213 = Index.8_212 + 1;

  <bb 46> :
  # Index_211 = PHI <Index_210(44), Index_213(45)>
  if (NumberOfWrites_157 > Index_211)
    goto <bb 45>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 47> :
  _214 = State_161->TxIndex;
  _215 = (short unsigned int) NumberOfWrites_157;
  _216 = _214 + _215;
  State_161->TxIndex = _216;

  <bb 48> :
  _40 = State_70->CurrentTxFifoSlot;
  _41 = _40 - NumberOfWrites_60;
  State_70->CurrentTxFifoSlot = _41;
  goto <bb 54>; [INV]

  <bb 49> :
  _42 = State_70->NextTransferConfigAvailable;
  if (_42 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _43 = State_70->ExternalDevice;
  _44 = _43->DeviceParams;
  _45 = State_70->DefaultDataNext;
  _44->DefaultData = _45;
  State_70->FirstCmd = 0;
  _46 = State_70->TxBufferNext;
  _47 = State_70->FrameSizeNext;
  _48 = State_70->LsbNext;
  _49 = State_70->LengthNext;
  Lpspi_TransmitTxInit (Instance_67(D), _46, _47, _48, _49);
  State_70->NextTransferConfigAvailable = 0;
  goto <bb 54>; [INV]

  <bb 51> :
  State_70->TxDoneFlag = 1;
  _50 ={v} Base_69->IER;
  _51 = _50 & 4294967294;
  Base_69->IER ={v} _51;
  _52 = State_70->KeepCs;
  _53 = ~_52;
  if (_53 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 52> :
  _54 ={v} Base_69->TCR;
  _55 = _54 & 2097152;
  if (_55 != 0)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  _56 ={v} Base_69->TCR;
  _57 = _56 & 4291821567;
  Base_69->TCR ={v} _57;

  <bb 54> :
  # ErrorFlag_62 = PHI <ErrorFlag_90(4), ErrorFlag_73(27), ErrorFlag_73(28), ErrorFlag_73(48), ErrorFlag_73(50), ErrorFlag_73(51), ErrorFlag_73(52), ErrorFlag_73(53)>
  _58 = State_70->RxIndex;
  _59 = State_70->ExpectedFifoReads;
  if (_58 == _59)
    goto <bb 56>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 55> :
  if (ErrorFlag_62 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  Base_69->IER ={v} 0;
  Lpspi_Ip_ChannelFinished (Instance_67(D), ErrorFlag_62);

  <bb 57> :
  return;

}



;; Function Lpspi_Ip_CheckValidParameters (Lpspi_Ip_CheckValidParameters, funcdef_no=5, decl_uid=5778, cgraph_uid=6, symbol_order=8)

Lpspi_Ip_CheckValidParameters (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, uint16 Length)
{
  struct Lpspi_Ip_DeviceParamsType * _1;
  unsigned char _2;
  short unsigned int _3;
  _Bool _4;
  struct Lpspi_Ip_DeviceParamsType * _5;
  unsigned char _6;
  short unsigned int _7;
  _Bool _8;

  <bb 2> :
  _1 = ExternalDevice_11(D)->DeviceParams;
  _2 = _1->FrameSize;
  if (_2 > 16)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = Length_12(D) & 3;
  _4 = _3 == 0;
  DevAssert (_4);
  goto <bb 6>; [INV]

  <bb 4> :
  _5 = ExternalDevice_11(D)->DeviceParams;
  _6 = _5->FrameSize;
  if (_6 > 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _7 = Length_12(D) & 1;
  _8 = _7 == 0;
  DevAssert (_8);

  <bb 6> :
  return;

}



;; Function Lpspi_Ip_Init (Lpspi_Ip_Init, funcdef_no=6, decl_uid=5634, cgraph_uid=7, symbol_order=9)

Lpspi_Ip_Init (const struct Lpspi_Ip_ConfigType * PhyUnitConfigPtr)
{
  uint8 Instance;
  Lpspi_Ip_StatusType Status;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  Lpspi_Ip_StatusType D.6019;
  _Bool _1;
  int _2;
  int _3;
  _Bool _4;
  unsigned char _5;
  int _6;
  int _7;
  struct Lpspi_Ip_StateStructureType * _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  <unnamed type> _13;
  long unsigned int _14;
  long unsigned int _15;
  Lpspi_Ip_StatusType _36;

  <bb 2> :
  Status_16 = 0;
  Instance_17 = 0;
  _1 = PhyUnitConfigPtr_18(D) != 0B;
  DevAssert (_1);
  Instance_21 = PhyUnitConfigPtr_18(D)->Instance;
  _2 = (int) Instance_21;
  State_22 = Lpspi_Ip_apxStateStructureArray[_2];
  _3 = (int) Instance_21;
  Base_23 = Lpspi_Ip_apxBases[_3];
  _4 = State_22 == 0B;
  DevAssert (_4);
  _5 = PhyUnitConfigPtr_18(D)->StateIndex;
  _6 = (int) _5;
  _7 = (int) Instance_21;
  _8 = &Lpspi_Ip_axStateStructure[_6];
  Lpspi_Ip_apxStateStructureArray[_7] = _8;
  _9 = (int) Instance_21;
  State_26 = Lpspi_Ip_apxStateStructureArray[_9];
  State_26->PhyUnitConfig = PhyUnitConfigPtr_18(D);
  _10 = PhyUnitConfigPtr_18(D)->Cr;
  _11 = _10 | 8;
  Base_23->CR ={v} _11;
  _12 = PhyUnitConfigPtr_18(D)->Cfgr1;
  Base_23->CFGR1 ={v} _12;
  Base_23->FCR ={v} 3;
  State_26->KeepCs = 0;
  State_26->FirstCmd = 1;
  State_26->Status = 1;
  _13 = PhyUnitConfigPtr_18(D)->TransferMode;
  Lpspi_Ip_UpdateTransferMode (Instance_21, _13);
  _14 ={v} Base_23->CR;
  _15 = _14 | 1;
  Base_23->CR ={v} _15;
  _36 = Status_16;

  <bb 3> :
<L0>:
  return _36;

}



;; Function Lpspi_Ip_DeInit (Lpspi_Ip_DeInit, funcdef_no=7, decl_uid=5636, cgraph_uid=8, symbol_order=10)

Lpspi_Ip_DeInit (uint8 Instance)
{
  Lpspi_Ip_StatusType Status;
  const struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  Lpspi_Ip_StatusType D.6024;
  _Bool _1;
  int _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  long unsigned int _6;
  long unsigned int _7;
  int _8;
  Lpspi_Ip_StatusType _22;

  <bb 2> :
  Status_11 = 0;
  _1 = Instance_12(D) <= 2;
  DevAssert (_1);
  _2 = (int) Instance_12(D);
  Base_15 = Lpspi_Ip_apxBases[_2];
  _3 = (int) Instance_12(D);
  State_16 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_16 != 0B;
  DevAssert (_4);
  _5 = State_16->Status;
  if (_5 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_21 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} Base_15->CR;
  _7 = _6 | 2;
  Base_15->CR ={v} _7;
  Base_15->CR ={v} 0;
  _8 = (int) Instance_12(D);
  Lpspi_Ip_apxStateStructureArray[_8] = 0B;

  <bb 5> :
  # Status_9 = PHI <Status_21(3), Status_11(4)>
  _22 = Status_9;

  <bb 6> :
<L3>:
  return _22;

}



;; Function Lpspi_Ip_SyncTransmit (Lpspi_Ip_SyncTransmit, funcdef_no=8, decl_uid=5642, cgraph_uid=9, symbol_order=11)

Lpspi_Ip_SyncTransmit (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, uint8 * TxBuffer, uint8 * RxBuffer, uint16 Length, uint32 TimeOut)
{
  struct LPSPI_Type * Base;
  struct Lpspi_Ip_StateStructureType * State;
  uint32 Data;
  uint8 Index;
  uint8 Instance;
  uint8 NumberOfWrites;
  long unsigned int vol.3;
  const struct LPSPI_Type * Base;
  struct Lpspi_Ip_StateStructureType * State;
  uint32 Data;
  uint8 Index;
  uint8 Instance;
  uint8 NumberOfReads;
  boolean TxDoneFlag;
  uint8 Instance;
  uint32 ElapsedTicks;
  uint32 CurrentTicks;
  uint32 TimeoutTicks;
  Lpspi_Ip_StatusType Status;
  uint8 NumberOfReads;
  uint8 NumberOfWrites;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  Lpspi_Ip_StatusType D.6059;
  long unsigned int D.6053;
  _Bool _1;
  _Bool _2;
  _Bool _3;
  int _4;
  _Bool _5;
  int _6;
  <unnamed type> _7;
  _Bool _8;
  _Bool _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  const struct Lpspi_Ip_ExternalDeviceType * _13;
  struct Lpspi_Ip_DeviceParamsType * _14;
  unsigned char _15;
  const struct Lpspi_Ip_ExternalDeviceType * _16;
  struct Lpspi_Ip_DeviceParamsType * _17;
  _Bool _18;
  const struct Lpspi_Ip_ExternalDeviceType * _19;
  struct Lpspi_Ip_DeviceParamsType * _20;
  unsigned char _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  unsigned char _25;
  int _26;
  short unsigned int _27;
  int _28;
  short unsigned int _29;
  int _30;
  int _31;
  short unsigned int _32;
  unsigned char _33;
  short unsigned int _34;
  unsigned char _35;
  short unsigned int _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  _Bool _42;
  short unsigned int _43;
  short unsigned int _44;
  int _45;
  short unsigned int _46;
  int _47;
  short unsigned int _48;
  int _49;
  int _50;
  short unsigned int _51;
  unsigned char _52;
  short unsigned int _53;
  unsigned char _54;
  unsigned char _55;
  unsigned char _56;
  _Bool _57;
  const struct Lpspi_Ip_ExternalDeviceType * _58;
  struct Lpspi_Ip_DeviceParamsType * _59;
  long unsigned int _60;
  uint8 * _61;
  unsigned char _62;
  _Bool _63;
  short unsigned int _64;
  _Bool _65;
  _Bool _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  short unsigned int _71;
  short unsigned int _72;
  long unsigned int _140;
  Lpspi_Ip_StatusType _147;
  int _151;
  int _153;
  uint8 * _157;
  const struct Lpspi_Ip_ExternalDeviceType * _158;
  struct Lpspi_Ip_DeviceParamsType * _159;
  unsigned char _160;
  uint8 * _163;
  short unsigned int _164;
  int _165;
  int _167;
  int _168;
  sizetype _169;
  uint8 * _170;
  unsigned char _171;
  unsigned char Index.0_172;
  const struct Lpspi_Ip_ExternalDeviceType * _174;
  struct Lpspi_Ip_DeviceParamsType * _175;
  unsigned char _176;
  uint8 * _179;
  short unsigned int _180;
  int _181;
  int _183;
  int _184;
  unsigned int _185;
  unsigned int _186;
  uint8 * _187;
  short unsigned int _188;
  unsigned char Index.1_189;
  uint8 * _193;
  short unsigned int _194;
  int _195;
  int _197;
  int _198;
  unsigned int _199;
  unsigned int _200;
  uint8 * _201;
  unsigned char Index.2_202;
  long unsigned int vol.3_205;
  unsigned char Index.4_207;
  short unsigned int _209;
  short unsigned int _210;
  short unsigned int _211;
  int _214;
  int _216;
  const struct Lpspi_Ip_ExternalDeviceType * _220;
  struct Lpspi_Ip_DeviceParamsType * _221;
  uint8 * _223;
  unsigned char _224;
  uint8 * _226;
  short unsigned int _227;
  int _228;
  int _230;
  int _231;
  sizetype _232;
  uint8 * _233;
  unsigned char _234;
  unsigned char Index.5_236;
  unsigned char _238;
  uint8 * _240;
  short unsigned int _241;
  int _242;
  int _244;
  int _245;
  unsigned int _246;
  unsigned int _247;
  uint8 * _248;
  short unsigned int _249;
  unsigned char Index.6_251;
  uint8 * _254;
  short unsigned int _255;
  int _256;
  int _258;
  int _259;
  unsigned int _260;
  unsigned int _261;
  uint8 * _262;
  unsigned char Index.7_264;
  unsigned char Index.8_268;
  short unsigned int _270;
  short unsigned int _271;
  short unsigned int _272;

  <bb 2> :
  Status_89 = 0;
  TimeoutTicks_93 = OsIf_MicrosToTicks (TimeOut_91(D), 0);
  CurrentTicks = 0;
  ElapsedTicks_95 = 0;
  Instance_96 = 0;
  TxDoneFlag_97 = 0;
  _1 = ExternalDevice_98(D) != 0B;
  DevAssert (_1);
  _2 = Length_100(D) != 0;
  DevAssert (_2);
  _3 = TimeOut_91(D) != 0;
  DevAssert (_3);
  Lpspi_Ip_CheckValidParameters (ExternalDevice_98(D), Length_100(D));
  Instance_104 = ExternalDevice_98(D)->Instance;
  _4 = (int) Instance_104;
  State_105 = Lpspi_Ip_apxStateStructureArray[_4];
  _5 = State_105 != 0B;
  DevAssert (_5);
  _6 = (int) Instance_104;
  Base_107 = Lpspi_Ip_apxBases[_6];
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_08 ();
  _7 = State_105->Status;
  if (_7 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08 ();
  Status_146 = 1;
  goto <bb 62>; [INV]

  <bb 4> :
  State_105->Status = 2;
  State_105->ExternalDevice = ExternalDevice_98(D);
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_08 ();
  Base_107->DER ={v} 0;
  Base_107->IER ={v} 0;
  _8 = State_105->KeepCs;
  State_105->NextTransferConfigAvailable = _8;
  _9 = State_105->FirstCmd;
  if (_9 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _10 ={v} Base_107->CR;
  _11 = _10 | 768;
  Base_107->CR ={v} _11;
  _12 = ExternalDevice_98(D)->Ccr;
  Base_107->CCR ={v} _12;
  State_105->CurrentTxFifoSlot = 4;
  _13 = State_105->ExternalDevice;
  _14 = _13->DeviceParams;
  _15 = _14->FrameSize;
  _16 = State_105->ExternalDevice;
  _17 = _16->DeviceParams;
  _18 = _17->Lsb;
  Lpspi_TransmitTxInit (Instance_104, TxBuffer_118(D), _15, _18, Length_100(D));

  <bb 6> :
  _19 = State_105->ExternalDevice;
  _20 = _19->DeviceParams;
  _21 = _20->FrameSize;
  Lpspi_TransmitRxInit (Instance_104, RxBuffer_120(D), _21, Length_100(D));
  _22 = OsIf_GetCounter (0);
  CurrentTicks = _22;
  goto <bb 58>; [INV]

  <bb 7> :
  _23 ={v} Base_107->FSR;
  _24 = _23 >> 16;
  _25 = (unsigned char) _24;
  NumberOfReads_124 = _25 & 7;
  if (NumberOfReads_124 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 8> :
  _26 = (int) NumberOfReads_124;
  _27 = State_105->ExpectedFifoReads;
  _28 = (int) _27;
  _29 = State_105->RxIndex;
  _30 = (int) _29;
  _31 = _28 - _30;
  if (_26 > _31)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _32 = State_105->ExpectedFifoReads;
  _33 = (unsigned char) _32;
  _34 = State_105->RxIndex;
  _35 = (unsigned char) _34;
  NumberOfReads_125 = _33 - _35;

  <bb 10> :
  # NumberOfReads_74 = PHI <NumberOfReads_124(8), NumberOfReads_125(9)>
  _36 = State_105->RxIndex;
  if (_36 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _37 = State_105->CurrentTxFifoSlot;
  _38 = _37 + 1;
  State_105->CurrentTxFifoSlot = _38;

  <bb 12> :
  Instance_149 = Instance_104;
  NumberOfReads_150 = NumberOfReads_74;
  _151 = (int) Instance_149;
  Base_152 = Lpspi_Ip_apxBases[_151];
  _153 = (int) Instance_149;
  State_154 = Lpspi_Ip_apxStateStructureArray[_153];
  Data_155 = 0;
  Index_156 = 0;
  _157 = State_154->RxBuffer;
  if (_157 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 13> :
  _158 = State_154->ExternalDevice;
  _159 = _158->DeviceParams;
  _160 = _159->FrameSize;
  if (_160 <= 8)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  Index_161 = 0;
  goto <bb 16>; [INV]

  <bb 15> :
  Data_162 ={v} Base_152->RDR;
  _163 = State_154->RxBuffer;
  _164 = State_154->RxIndex;
  _165 = (int) _164;
  _167 = (int) Index_166;
  _168 = _165 + _167;
  _169 = (sizetype) _168;
  _170 = _163 + _169;
  _171 = (unsigned char) Data_162;
  *_170 = _171;
  Index.0_172 = Index_166;
  Index_173 = Index.0_172 + 1;

  <bb 16> :
  # Index_166 = PHI <Index_161(14), Index_173(15)>
  if (NumberOfReads_150 > Index_166)
    goto <bb 15>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 17> :
  _174 = State_154->ExternalDevice;
  _175 = _174->DeviceParams;
  _176 = _175->FrameSize;
  if (_176 <= 16)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  Index_177 = 0;
  goto <bb 20>; [INV]

  <bb 19> :
  Data_178 ={v} Base_152->RDR;
  _179 = State_154->RxBuffer;
  _180 = State_154->RxIndex;
  _181 = (int) _180;
  _183 = (int) Index_182;
  _184 = _181 + _183;
  _185 = (unsigned int) _184;
  _186 = _185 * 2;
  _187 = _179 + _186;
  _188 = (short unsigned int) Data_178;
  MEM[(uint16 *)_187] = _188;
  Index.1_189 = Index_182;
  Index_190 = Index.1_189 + 1;

  <bb 20> :
  # Index_182 = PHI <Index_177(18), Index_190(19)>
  if (NumberOfReads_150 > Index_182)
    goto <bb 19>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 21> :
  Index_191 = 0;
  goto <bb 23>; [INV]

  <bb 22> :
  Data_192 ={v} Base_152->RDR;
  _193 = State_154->RxBuffer;
  _194 = State_154->RxIndex;
  _195 = (int) _194;
  _197 = (int) Index_196;
  _198 = _195 + _197;
  _199 = (unsigned int) _198;
  _200 = _199 * 4;
  _201 = _193 + _200;
  MEM[(uint32 *)_201] = Data_192;
  Index.2_202 = Index_196;
  Index_203 = Index.2_202 + 1;

  <bb 23> :
  # Index_196 = PHI <Index_191(21), Index_203(22)>
  if (NumberOfReads_150 > Index_196)
    goto <bb 22>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 24> :
  Index_204 = 0;
  goto <bb 26>; [INV]

  <bb 25> :
  vol.3_205 ={v} Base_152->RDR;
  Index.4_207 = Index_206;
  Index_208 = Index.4_207 + 1;

  <bb 26> :
  # Index_206 = PHI <Index_204(24), Index_208(25)>
  if (NumberOfReads_150 > Index_206)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _209 = State_154->RxIndex;
  _210 = (short unsigned int) NumberOfReads_150;
  _211 = _209 + _210;
  State_154->RxIndex = _211;

  <bb 28> :
  _39 = State_105->CurrentTxFifoSlot;
  _40 = NumberOfReads_74 + _39;
  State_105->CurrentTxFifoSlot = _40;
  ElapsedTicks_128 = 0;

  <bb 29> :
  # ElapsedTicks_77 = PHI <ElapsedTicks_79(7), ElapsedTicks_128(28)>
  _41 = State_105->CurrentTxFifoSlot;
  if (_41 != 0)
    goto <bb 30>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 30> :
  _42 = ~TxDoneFlag_81;
  if (_42 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 31> :
  _43 = State_105->ExpectedFifoWrites;
  _44 = State_105->TxIndex;
  if (_43 != _44)
    goto <bb 32>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 32> :
  NumberOfWrites_135 = State_105->CurrentTxFifoSlot;
  _45 = (int) NumberOfWrites_135;
  _46 = State_105->ExpectedFifoWrites;
  _47 = (int) _46;
  _48 = State_105->TxIndex;
  _49 = (int) _48;
  _50 = _47 - _49;
  if (_45 > _50)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _51 = State_105->ExpectedFifoWrites;
  _52 = (unsigned char) _51;
  _53 = State_105->TxIndex;
  _54 = (unsigned char) _53;
  NumberOfWrites_136 = _52 - _54;

  <bb 34> :
  # NumberOfWrites_73 = PHI <NumberOfWrites_135(32), NumberOfWrites_136(33)>
  Instance_212 = Instance_104;
  NumberOfWrites_213 = NumberOfWrites_73;
  _214 = (int) Instance_212;
  Base_215 = Lpspi_Ip_apxBases[_214];
  _216 = (int) Instance_212;
  State_217 = Lpspi_Ip_apxStateStructureArray[_216];
  Data_218 = 0;
  Index_219 = 0;
  _220 = State_217->ExternalDevice;
  _221 = _220->DeviceParams;
  Data_222 = _221->DefaultData;
  _223 = State_217->TxBuffer;
  if (_223 != 0B)
    goto <bb 35>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 35> :
  _224 = State_217->TxFrameSize;
  if (_224 <= 8)
    goto <bb 36>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 36> :
  Index_225 = 0;
  goto <bb 38>; [INV]

  <bb 37> :
  _226 = State_217->TxBuffer;
  _227 = State_217->TxIndex;
  _228 = (int) _227;
  _230 = (int) Index_229;
  _231 = _228 + _230;
  _232 = (sizetype) _231;
  _233 = _226 + _232;
  _234 = *_233;
  Data_235 = (uint32) _234;
  Base_215->TDR ={v} Data_235;
  Index.5_236 = Index_229;
  Index_237 = Index.5_236 + 1;

  <bb 38> :
  # Index_229 = PHI <Index_225(36), Index_237(37)>
  if (NumberOfWrites_213 > Index_229)
    goto <bb 37>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 39> :
  _238 = State_217->TxFrameSize;
  if (_238 <= 16)
    goto <bb 40>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 40> :
  Index_239 = 0;
  goto <bb 42>; [INV]

  <bb 41> :
  _240 = State_217->TxBuffer;
  _241 = State_217->TxIndex;
  _242 = (int) _241;
  _244 = (int) Index_243;
  _245 = _242 + _244;
  _246 = (unsigned int) _245;
  _247 = _246 * 2;
  _248 = _240 + _247;
  _249 = MEM[(uint16 *)_248];
  Data_250 = (uint32) _249;
  Base_215->TDR ={v} Data_250;
  Index.6_251 = Index_243;
  Index_252 = Index.6_251 + 1;

  <bb 42> :
  # Index_243 = PHI <Index_239(40), Index_252(41)>
  if (NumberOfWrites_213 > Index_243)
    goto <bb 41>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 43> :
  Index_253 = 0;
  goto <bb 45>; [INV]

  <bb 44> :
  _254 = State_217->TxBuffer;
  _255 = State_217->TxIndex;
  _256 = (int) _255;
  _258 = (int) Index_257;
  _259 = _256 + _258;
  _260 = (unsigned int) _259;
  _261 = _260 * 4;
  _262 = _254 + _261;
  Data_263 = MEM[(uint32 *)_262];
  Base_215->TDR ={v} Data_263;
  Index.7_264 = Index_257;
  Index_265 = Index.7_264 + 1;

  <bb 45> :
  # Index_257 = PHI <Index_253(43), Index_265(44)>
  if (NumberOfWrites_213 > Index_257)
    goto <bb 44>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  Index_266 = 0;
  goto <bb 48>; [INV]

  <bb 47> :
  Base_215->TDR ={v} Data_222;
  Index.8_268 = Index_267;
  Index_269 = Index.8_268 + 1;

  <bb 48> :
  # Index_267 = PHI <Index_266(46), Index_269(47)>
  if (NumberOfWrites_213 > Index_267)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 49> :
  _270 = State_217->TxIndex;
  _271 = (short unsigned int) NumberOfWrites_213;
  _272 = _270 + _271;
  State_217->TxIndex = _272;

  <bb 50> :
  _55 = State_105->CurrentTxFifoSlot;
  _56 = _55 - NumberOfWrites_73;
  State_105->CurrentTxFifoSlot = _56;
  ElapsedTicks_138 = 0;
  goto <bb 56>; [INV]

  <bb 51> :
  _57 = State_105->NextTransferConfigAvailable;
  if (_57 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  _58 = State_105->ExternalDevice;
  _59 = _58->DeviceParams;
  _60 = State_105->DefaultDataNext;
  _59->DefaultData = _60;
  State_105->FirstCmd = 0;
  _61 = State_105->TxBufferNext;
  _62 = State_105->FrameSizeNext;
  _63 = State_105->LsbNext;
  _64 = State_105->LengthNext;
  Lpspi_TransmitTxInit (Instance_104, _61, _62, _63, _64);
  State_105->NextTransferConfigAvailable = 0;
  goto <bb 56>; [INV]

  <bb 53> :
  TxDoneFlag_129 = 1;
  _65 = State_105->KeepCs;
  _66 = ~_65;
  if (_66 != 0)
    goto <bb 54>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 54> :
  _67 ={v} Base_107->TCR;
  _68 = _67 & 2097152;
  if (_68 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  _69 ={v} Base_107->TCR;
  _70 = _69 & 4291821567;
  Base_107->TCR ={v} _70;

  <bb 56> :
  # ElapsedTicks_78 = PHI <ElapsedTicks_77(29), ElapsedTicks_77(30), ElapsedTicks_138(50), ElapsedTicks_77(52), ElapsedTicks_77(53), ElapsedTicks_77(54), ElapsedTicks_77(55)>
  # TxDoneFlag_80 = PHI <TxDoneFlag_81(29), TxDoneFlag_81(30), TxDoneFlag_81(50), TxDoneFlag_81(52), TxDoneFlag_129(53), TxDoneFlag_129(54), TxDoneFlag_129(55)>
  _140 = OsIf_GetElapsed (&CurrentTicks, 0);
  ElapsedTicks_141 = _140 + ElapsedTicks_78;
  if (ElapsedTicks_141 >= TimeoutTicks_93)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  Status_142 = 3;
  goto <bb 59>; [INV]

  <bb 58> :
  # ElapsedTicks_79 = PHI <ElapsedTicks_95(6), ElapsedTicks_141(56)>
  # TxDoneFlag_81 = PHI <TxDoneFlag_97(6), TxDoneFlag_80(56)>
  _71 = State_105->RxIndex;
  _72 = State_105->ExpectedFifoReads;
  if (_71 != _72)
    goto <bb 7>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 59> :
  # Status_75 = PHI <Status_142(57), Status_89(58)>
  if (Status_75 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  State_105->Status = 3;
  goto <bb 62>; [INV]

  <bb 61> :
  State_105->Status = 1;

  <bb 62> :
  # Status_76 = PHI <Status_146(3), Status_75(60), Status_75(61)>
  _147 = Status_76;
  CurrentTicks ={v} {CLOBBER};

  <bb 63> :
<L36>:
  return _147;

}



;; Function Lpspi_TransmitTxInit (Lpspi_TransmitTxInit, funcdef_no=9, decl_uid=5770, cgraph_uid=10, symbol_order=12)

Lpspi_TransmitTxInit (uint8 Instance, uint8 * TxBuffer, uint8 TxFrameSize, boolean TxLsb, uint16 NumberOfFrames)
{
  uint8 LsbWriteValue;
  uint32 TransferCommand;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  uint8 iftmp.10;
  int _1;
  int _2;
  const struct Lpspi_Ip_ExternalDeviceType * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  _Bool _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  unsigned char _16;
  short unsigned int _17;
  short unsigned int _18;
  uint8 iftmp.10_19;
  uint8 iftmp.10_28;
  uint8 iftmp.10_29;

  <bb 2> :
  _1 = (int) Instance_22(D);
  Base_24 = Lpspi_Ip_apxBases[_1];
  _2 = (int) Instance_22(D);
  State_25 = Lpspi_Ip_apxStateStructureArray[_2];
  TransferCommand_26 = 0;
  if (TxLsb_27(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.10_29 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.10_28 = 0;

  <bb 5> :
  # iftmp.10_19 = PHI <iftmp.10_29(3), iftmp.10_28(4)>
  LsbWriteValue_30 = iftmp.10_19;
  State_25->TxFrameSize = TxFrameSize_31(D);
  State_25->TxLsb = TxLsb_27(D);
  _3 = State_25->ExternalDevice;
  _4 = _3->Tcr;
  _5 = (long unsigned int) TxFrameSize_31(D);
  _6 = _5 + 4294967295;
  _7 = _6 & 4095;
  _8 = _4 | _7;
  _9 = (long unsigned int) LsbWriteValue_30;
  _10 = _9 << 23;
  _11 = _10 & 8388608;
  TransferCommand_34 = _8 | _11;
  _12 = State_25->FirstCmd;
  if (_12 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Base_24->TCR ={v} TransferCommand_34;
  goto <bb 10>; [INV]

  <bb 7> :
  _13 = TransferCommand_34 & 2097152;
  if (_13 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _14 = TransferCommand_34 | 1048576;
  Base_24->TCR ={v} _14;
  goto <bb 10>; [INV]

  <bb 9> :
  Base_24->TCR ={v} TransferCommand_34;

  <bb 10> :
  _15 = State_25->CurrentTxFifoSlot;
  _16 = _15 + 255;
  State_25->CurrentTxFifoSlot = _16;
  State_25->TxIndex = 0;
  State_25->TxBuffer = TxBuffer_40(D);
  if (TxFrameSize_31(D) <= 8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  State_25->ExpectedFifoWrites = NumberOfFrames_42(D);
  goto <bb 15>; [INV]

  <bb 12> :
  if (TxFrameSize_31(D) <= 16)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _17 = NumberOfFrames_42(D) / 2;
  State_25->ExpectedFifoWrites = _17;
  goto <bb 15>; [INV]

  <bb 14> :
  _18 = NumberOfFrames_42(D) / 4;
  State_25->ExpectedFifoWrites = _18;

  <bb 15> :
  return;

}



;; Function Lpspi_TransmitRxInit (Lpspi_TransmitRxInit, funcdef_no=10, decl_uid=5775, cgraph_uid=11, symbol_order=13)

Lpspi_TransmitRxInit (uint8 Instance, uint8 * RxBuffer, uint8 RxFrameSize, uint16 NumberOfFrames)
{
  struct Lpspi_Ip_StateStructureType * State;
  int _1;
  short unsigned int _2;
  short unsigned int _3;

  <bb 2> :
  _1 = (int) Instance_5(D);
  State_7 = Lpspi_Ip_apxStateStructureArray[_1];
  State_7->RxIndex = 0;
  State_7->RxBuffer = RxBuffer_9(D);
  if (RxFrameSize_11(D) <= 8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  State_7->ExpectedFifoReads = NumberOfFrames_12(D);
  goto <bb 7>; [INV]

  <bb 4> :
  if (RxFrameSize_11(D) <= 16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = NumberOfFrames_12(D) / 2;
  State_7->ExpectedFifoReads = _2;
  goto <bb 7>; [INV]

  <bb 6> :
  _3 = NumberOfFrames_12(D) / 4;
  State_7->ExpectedFifoReads = _3;

  <bb 7> :
  return;

}



;; Function Lpspi_Ip_AsyncTransmit (Lpspi_Ip_AsyncTransmit, funcdef_no=11, decl_uid=5648, cgraph_uid=12, symbol_order=14)

Lpspi_Ip_AsyncTransmit (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, uint8 * TxBuffer, uint8 * RxBuffer, uint16 Length, void (*Lpspi_Ip_CallbackType) (uint8, Lpspi_Ip_EventType) EndCallback)
{
  uint8 Instance;
  Lpspi_Ip_StatusType Status;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  Lpspi_Ip_StatusType D.6089;
  _Bool _1;
  _Bool _2;
  int _3;
  _Bool _4;
  int _5;
  <unnamed type> _6;
  _Bool _7;
  _Bool _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  const struct Lpspi_Ip_ExternalDeviceType * _14;
  struct Lpspi_Ip_DeviceParamsType * _15;
  unsigned char _16;
  const struct Lpspi_Ip_ExternalDeviceType * _17;
  struct Lpspi_Ip_DeviceParamsType * _18;
  _Bool _19;
  const struct Lpspi_Ip_ExternalDeviceType * _20;
  struct Lpspi_Ip_DeviceParamsType * _21;
  unsigned char _22;
  <unnamed type> _23;
  Lpspi_Ip_StatusType _63;

  <bb 2> :
  Status_27 = 0;
  Instance_28 = 0;
  _1 = ExternalDevice_29(D) != 0B;
  DevAssert (_1);
  _2 = Length_32(D) != 0;
  DevAssert (_2);
  Lpspi_Ip_CheckValidParameters (ExternalDevice_29(D), Length_32(D));
  Instance_35 = ExternalDevice_29(D)->Instance;
  _3 = (int) Instance_35;
  State_36 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_36 != 0B;
  DevAssert (_4);
  _5 = (int) Instance_35;
  Base_38 = Lpspi_Ip_apxBases[_5];
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_09 ();
  _6 = State_36->Status;
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09 ();
  Status_62 = 1;
  goto <bb 10>; [INV]

  <bb 4> :
  State_36->Status = 2;
  State_36->ExternalDevice = ExternalDevice_29(D);
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_09 ();
  State_36->Callback = EndCallback_43(D);
  _7 = State_36->KeepCs;
  State_36->NextTransferConfigAvailable = _7;
  State_36->TxDoneFlag = 0;
  _8 = State_36->FirstCmd;
  if (_8 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_11 ();
  _9 ={v} Base_38->CR;
  _10 = _9 | 768;
  Base_38->CR ={v} _10;
  _11 ={v} Base_38->SR;
  _12 = _11 & 16128;
  Base_38->SR ={v} _12;
  _13 = ExternalDevice_29(D)->Ccr;
  Base_38->CCR ={v} _13;
  State_36->CurrentTxFifoSlot = 4;
  _14 = State_36->ExternalDevice;
  _15 = _14->DeviceParams;
  _16 = _15->FrameSize;
  _17 = State_36->ExternalDevice;
  _18 = _17->DeviceParams;
  _19 = _18->Lsb;
  Lpspi_TransmitTxInit (Instance_35, TxBuffer_52(D), _16, _19, Length_32(D));
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_11 ();

  <bb 6> :
  _20 = State_36->ExternalDevice;
  _21 = _20->DeviceParams;
  _22 = _21->FrameSize;
  Lpspi_TransmitRxInit (Instance_35, RxBuffer_55(D), _22, Length_32(D));
  Base_38->FCR ={v} 3;
  Base_38->DER ={v} 0;
  _23 = State_36->TransferMode;
  switch (_23) <default: <L6> [INV], case 0: <L4> [INV], case 1: <L5> [INV]>

  <bb 7> :
<L4>:
  Base_38->IER ={v} 0;
  goto <bb 10>; [INV]

  <bb 8> :
<L5>:
  Base_38->IER ={v} 6147;
  goto <bb 10>; [INV]

  <bb 9> :
<L6>:

  <bb 10> :
  # Status_24 = PHI <Status_62(3), Status_27(7), Status_27(8), Status_27(9)>
  _63 = Status_24;

  <bb 11> :
<L9>:
  return _63;

}



;; Function Lpspi_Ip_ManageBuffers (Lpspi_Ip_ManageBuffers, funcdef_no=12, decl_uid=5652, cgraph_uid=13, symbol_order=15)

Lpspi_Ip_ManageBuffers (uint8 Instance)
{
  const struct Lpspi_Ip_StateStructureType * State;
  const struct LPSPI_Type * Base;
  _Bool _1;
  int _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char _10;

  <bb 2> :
  _1 = Instance_12(D) <= 2;
  DevAssert (_1);
  _2 = (int) Instance_12(D);
  Base_15 = Lpspi_Ip_apxBases[_2];
  _3 = (int) Instance_12(D);
  State_16 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_16 != 0B;
  DevAssert (_4);
  _5 = State_16->TransferMode;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _6 ={v} Base_15->SR;
  _7 = _6 & 2;
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _8 ={v} Base_15->SR;
  _9 = _8 & 1;
  if (_9 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _10 = State_16->CurrentTxFifoSlot;
  if (_10 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Lpspi_Ip_TransferProcess (Instance_12(D));

  <bb 7> :
  return;

}



;; Function Lpspi_Ip_UpdateFrameSize (Lpspi_Ip_UpdateFrameSize, funcdef_no=13, decl_uid=5655, cgraph_uid=14, symbol_order=16)

Lpspi_Ip_UpdateFrameSize (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, uint8 FrameSize)
{
  Lpspi_Ip_StatusType Status;
  const struct Lpspi_Ip_StateStructureType * State;
  Lpspi_Ip_StatusType D.6100;
  _Bool _1;
  _Bool _2;
  _Bool _3;
  unsigned char _4;
  int _5;
  _Bool _6;
  <unnamed type> _7;
  struct Lpspi_Ip_DeviceParamsType * _8;
  Lpspi_Ip_StatusType _22;

  <bb 2> :
  Status_11 = 0;
  _1 = ExternalDevice_12(D) != 0B;
  DevAssert (_1);
  _2 = FrameSize_15(D) <= 32;
  DevAssert (_2);
  _3 = FrameSize_15(D) > 3;
  DevAssert (_3);
  _4 = ExternalDevice_12(D)->Instance;
  _5 = (int) _4;
  State_18 = Lpspi_Ip_apxStateStructureArray[_5];
  _6 = State_18 != 0B;
  DevAssert (_6);
  _7 = State_18->Status;
  if (_7 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = ExternalDevice_12(D)->DeviceParams;
  _8->FrameSize = FrameSize_15(D);
  goto <bb 5>; [INV]

  <bb 4> :
  Status_20 = 1;

  <bb 5> :
  # Status_9 = PHI <Status_11(3), Status_20(4)>
  _22 = Status_9;

  <bb 6> :
<L3>:
  return _22;

}



;; Function Lpspi_Ip_UpdateLsb (Lpspi_Ip_UpdateLsb, funcdef_no=14, decl_uid=5658, cgraph_uid=15, symbol_order=17)

Lpspi_Ip_UpdateLsb (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, boolean Lsb)
{
  Lpspi_Ip_StatusType Status;
  const struct Lpspi_Ip_StateStructureType * State;
  Lpspi_Ip_StatusType D.6105;
  _Bool _1;
  unsigned char _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  struct Lpspi_Ip_DeviceParamsType * _6;
  Lpspi_Ip_StatusType _18;

  <bb 2> :
  Status_9 = 0;
  _1 = ExternalDevice_10(D) != 0B;
  DevAssert (_1);
  _2 = ExternalDevice_10(D)->Instance;
  _3 = (int) _2;
  State_13 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_13 != 0B;
  DevAssert (_4);
  _5 = State_13->Status;
  if (_5 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = ExternalDevice_10(D)->DeviceParams;
  _6->Lsb = Lsb_16(D);
  goto <bb 5>; [INV]

  <bb 4> :
  Status_15 = 1;

  <bb 5> :
  # Status_7 = PHI <Status_9(3), Status_15(4)>
  _18 = Status_7;

  <bb 6> :
<L3>:
  return _18;

}



;; Function Lpspi_Ip_UpdateDefaultTransmitData (Lpspi_Ip_UpdateDefaultTransmitData, funcdef_no=15, decl_uid=5661, cgraph_uid=16, symbol_order=18)

Lpspi_Ip_UpdateDefaultTransmitData (const struct Lpspi_Ip_ExternalDeviceType * ExternalDevice, uint32 DefaultData)
{
  Lpspi_Ip_StatusType Status;
  const struct Lpspi_Ip_StateStructureType * State;
  Lpspi_Ip_StatusType D.6110;
  _Bool _1;
  unsigned char _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  struct Lpspi_Ip_DeviceParamsType * _6;
  Lpspi_Ip_StatusType _18;

  <bb 2> :
  Status_9 = 0;
  _1 = ExternalDevice_10(D) != 0B;
  DevAssert (_1);
  _2 = ExternalDevice_10(D)->Instance;
  _3 = (int) _2;
  State_13 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_13 != 0B;
  DevAssert (_4);
  _5 = State_13->Status;
  if (_5 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = ExternalDevice_10(D)->DeviceParams;
  _6->DefaultData = DefaultData_16(D);
  goto <bb 5>; [INV]

  <bb 4> :
  Status_15 = 1;

  <bb 5> :
  # Status_7 = PHI <Status_9(3), Status_15(4)>
  _18 = Status_7;

  <bb 6> :
<L3>:
  return _18;

}



;; Function Lpspi_Ip_UpdateTransferMode (Lpspi_Ip_UpdateTransferMode, funcdef_no=16, decl_uid=5664, cgraph_uid=17, symbol_order=19)

Lpspi_Ip_UpdateTransferMode (uint8 Instance, Lpspi_Ip_ModeType Mode)
{
  Lpspi_Ip_StatusType Status;
  struct Lpspi_Ip_StateStructureType * State;
  Lpspi_Ip_StatusType D.6115;
  _Bool _1;
  int _2;
  _Bool _3;
  <unnamed type> _4;
  Lpspi_Ip_StatusType _16;

  <bb 2> :
  Status_7 = 0;
  _1 = Instance_8(D) <= 2;
  DevAssert (_1);
  _2 = (int) Instance_8(D);
  State_11 = Lpspi_Ip_apxStateStructureArray[_2];
  _3 = State_11 != 0B;
  DevAssert (_3);
  _4 = State_11->Status;
  if (_4 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  State_11->TransferMode = Mode_14(D);
  goto <bb 5>; [INV]

  <bb 4> :
  Status_13 = 1;

  <bb 5> :
  # Status_5 = PHI <Status_7(3), Status_13(4)>
  _16 = Status_5;

  <bb 6> :
<L3>:
  return _16;

}



;; Function Lpspi_Ip_Cancel (Lpspi_Ip_Cancel, funcdef_no=17, decl_uid=5666, cgraph_uid=18, symbol_order=20)

Lpspi_Ip_Cancel (uint8 Instance)
{
  uint32 Cfgr1;
  struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  _Bool _1;
  int _2;
  int _3;
  _Bool _4;
  <unnamed type> _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  Cfgr1_13 = 0;
  _1 = Instance_14(D) <= 2;
  DevAssert (_1);
  _2 = (int) Instance_14(D);
  Base_17 = Lpspi_Ip_apxBases[_2];
  _3 = (int) Instance_14(D);
  State_18 = Lpspi_Ip_apxStateStructureArray[_3];
  _4 = State_18 != 0B;
  DevAssert (_4);
  SchM_Enter_Spi_SPI_EXCLUSIVE_AREA_10 ();
  _5 = State_18->Status;
  if (_5 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 ={v} Base_17->TCR;
  _7 = _6 | 524288;
  Base_17->TCR ={v} _7;
  Cfgr1_22 ={v} Base_17->CFGR1;
  _8 ={v} Base_17->CR;
  _9 = _8 | 2;
  Base_17->CR ={v} _9;
  _10 ={v} Base_17->CR;
  _11 = _10 & 4294967293;
  Base_17->CR ={v} _11;
  Base_17->CFGR1 ={v} Cfgr1_22;
  State_18->Status = 1;

  <bb 4> :
  SchM_Exit_Spi_SPI_EXCLUSIVE_AREA_10 ();
  return;

}



;; Function Lpspi_Ip_IrqHandler (Lpspi_Ip_IrqHandler, funcdef_no=18, decl_uid=5668, cgraph_uid=19, symbol_order=21)

Lpspi_Ip_IrqHandler (uint8 Instance)
{
  uint32 IrqFlags;
  const struct Lpspi_Ip_StateStructureType * State;
  struct LPSPI_Type * Base;
  long unsigned int D.6121;
  int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _17;

  <bb 2> :
  _1 = (int) Instance_10(D);
  Base_12 = Lpspi_Ip_apxBases[_1];
  _2 = (int) Instance_10(D);
  State_13 = Lpspi_Ip_apxStateStructureArray[_2];
  IrqFlags_14 = 0;
  if (State_13 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _3 ={v} Base_12->SR;
  IrqFlags_16 = _3 & 6147;
  _4 ={v} Base_12->IER;
  _17 = _4 & 6147;
  IrqFlags_18 = _17 & IrqFlags_16;
  if (IrqFlags_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Lpspi_Ip_TransferProcess (Instance_10(D));
  goto <bb 7>; [INV]

  <bb 5> :
  _5 ={v} Base_12->SR;
  _6 = _5 & 16128;
  Base_12->SR ={v} _6;
  goto <bb 7>; [INV]

  <bb 6> :
  _7 ={v} Base_12->SR;
  _8 = _7 & 16128;
  Base_12->SR ={v} _8;

  <bb 7> :
  return;

}



;; Function Lpspi_Ip_GetStatus (Lpspi_Ip_GetStatus, funcdef_no=19, decl_uid=5650, cgraph_uid=20, symbol_order=22)

Lpspi_Ip_GetStatus (uint8 Instance)
{
  Lpspi_Ip_HwStatusType Status;
  const struct Lpspi_Ip_StateStructureType * State;
  Lpspi_Ip_HwStatusType D.6128;
  _Bool _1;
  int _2;
  Lpspi_Ip_HwStatusType _10;

  <bb 2> :
  Status_4 = 0;
  _1 = Instance_5(D) <= 2;
  DevAssert (_1);
  _2 = (int) Instance_5(D);
  State_8 = Lpspi_Ip_apxStateStructureArray[_2];
  if (State_8 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_9 = State_8->Status;

  <bb 4> :
  # Status_3 = PHI <Status_4(2), Status_9(3)>
  _10 = Status_3;

  <bb 5> :
<L2>:
  return _10;

}


