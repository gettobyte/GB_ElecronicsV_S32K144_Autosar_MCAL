
Marking local functions:


Marking externally visible functions: Dio_Ipw_WriteChannelGroup Dio_Ipw_ReadChannelGroup Dio_Ipw_WritePort Dio_Ipw_ReadPort Dio_Ipw_WriteChannel Dio_Ipw_ReadChannel


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Gpio_Dio_Ip_ClearPins/12 (Gpio_Dio_Ip_ClearPins) @068c40e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_WriteChannelGroup/5 
  Calls: 
Gpio_Dio_Ip_SetPins/11 (Gpio_Dio_Ip_SetPins) @068c4000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_WriteChannelGroup/5 
  Calls: 
Gpio_Dio_Ip_WritePins/10 (Gpio_Dio_Ip_WritePins) @067c6ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_WritePort/3 
  Calls: 
Gpio_Dio_Ip_ReadPins/9 (Gpio_Dio_Ip_ReadPins) @067c6d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_ReadChannelGroup/4 Dio_Ipw_ReadPort/2 
  Calls: 
Gpio_Dio_Ip_WritePin/8 (Gpio_Dio_Ip_WritePin) @067c6b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_WriteChannel/1 
  Calls: 
Gpio_Dio_Ip_ReadPin/7 (Gpio_Dio_Ip_ReadPin) @067c69a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Dio_Ipw_ReadChannel/0 
  Calls: 
GpioBaseAdresses/6 (GpioBaseAdresses) @067c1708
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Dio_Ipw_ReadChannel/0 (read)Dio_Ipw_WriteChannel/1 (read)Dio_Ipw_ReadPort/2 (read)Dio_Ipw_WritePort/3 (read)Dio_Ipw_ReadChannelGroup/4 (read)Dio_Ipw_WriteChannelGroup/5 (read)
  Availability: not_available
  Varpool flags:
Dio_Ipw_WriteChannelGroup/5 (Dio_Ipw_WriteChannelGroup) @067c6540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_ClearPins/12 Gpio_Dio_Ip_SetPins/11 
Dio_Ipw_ReadChannelGroup/4 (Dio_Ipw_ReadChannelGroup) @067c62a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_ReadPins/9 
Dio_Ipw_WritePort/3 (Dio_Ipw_WritePort) @067c6000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_WritePins/10 
Dio_Ipw_ReadPort/2 (Dio_Ipw_ReadPort) @067bca80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_ReadPins/9 
Dio_Ipw_WriteChannel/1 (Dio_Ipw_WriteChannel) @067bce00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_WritePin/8 
Dio_Ipw_ReadChannel/0 (Dio_Ipw_ReadChannel) @067bc9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: GpioBaseAdresses/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpio_Dio_Ip_ReadPin/7 
Dio_Ipw_WriteChannelGroup (const struct Dio_ChannelGroupType * pChannelGroupIdPtr, Dio_PortLevelType Level)
{
  struct GPIO_Type * GpioBase;
  Dio_PortLevelType ValueClear;
  Dio_PortLevelType ValueSet;

  <bb 2> :
  _1 = pChannelGroupIdPtr->port;
  _2 = (int) _1;
  _3 = GpioBaseAdresses[_2];
  GpioBase = (struct GPIO_Type *) _3;
  _4 = pChannelGroupIdPtr->u8offset;
  _5 = (int) _4;
  _6 = Level << _5;
  _7 = pChannelGroupIdPtr->mask;
  ValueSet = _6 & _7;
  Gpio_Dio_Ip_SetPins (GpioBase, ValueSet);
  _8 = ~ValueSet;
  _9 = pChannelGroupIdPtr->mask;
  ValueClear = _8 & _9;
  Gpio_Dio_Ip_ClearPins (GpioBase, ValueClear);
  return;

}


Dio_Ipw_ReadChannelGroup (const struct Dio_ChannelGroupType * pChannelGroupIdPtr)
{
  const struct GPIO_Type * GpioBase;
  Dio_PortLevelType pinsValue;
  Dio_PortLevelType PortLevel;
  Dio_PortLevelType D.5625;

  <bb 2> :
  PortLevel = 0;
  _1 = pChannelGroupIdPtr->port;
  _2 = (int) _1;
  _3 = GpioBaseAdresses[_2];
  GpioBase = (const struct GPIO_Type *) _3;
  pinsValue = Gpio_Dio_Ip_ReadPins (GpioBase);
  _4 = pChannelGroupIdPtr->mask;
  _5 = pinsValue & _4;
  _6 = pChannelGroupIdPtr->u8offset;
  _7 = (int) _6;
  PortLevel = _5 >> _7;
  D.5625 = PortLevel;

  <bb 3> :
<L0>:
  return D.5625;

}


Dio_Ipw_WritePort (Dio_PortType PortId, Dio_PortLevelType Level)
{
  struct GPIO_Type * GpioBase;
  Dio_PortLevelType CrtLevel;

  <bb 2> :
  CrtLevel = Level;
  _1 = (int) PortId;
  _2 = GpioBaseAdresses[_1];
  GpioBase = (struct GPIO_Type *) _2;
  Gpio_Dio_Ip_WritePins (GpioBase, CrtLevel);
  return;

}


Dio_Ipw_ReadPort (Dio_PortType PortId)
{
  const struct GPIO_Type * GpioBase;
  Dio_PortLevelType PortLevel;
  Dio_PortLevelType D.5623;

  <bb 2> :
  PortLevel = 0;
  _1 = (int) PortId;
  _2 = GpioBaseAdresses[_1];
  GpioBase = (const struct GPIO_Type *) _2;
  PortLevel = Gpio_Dio_Ip_ReadPins (GpioBase);
  D.5623 = PortLevel;

  <bb 3> :
<L0>:
  return D.5623;

}


Dio_Ipw_WriteChannel (Dio_ChannelType ChannelId, Dio_LevelType Level)
{
  struct GPIO_Type * GpioBase;
  uint32 u32PinIndex;
  uint32 u32GpioInstance;

  <bb 2> :
  _1 = ChannelId >> 5;
  u32GpioInstance = (uint32) _1;
  _2 = (long unsigned int) ChannelId;
  u32PinIndex = _2 & 31;
  _3 = GpioBaseAdresses[u32GpioInstance];
  GpioBase = (struct GPIO_Type *) _3;
  Gpio_Dio_Ip_WritePin (GpioBase, u32PinIndex, Level);
  return;

}


Dio_Ipw_ReadChannel (Dio_ChannelType ChannelId)
{
  const struct GPIO_Type * GpioBase;
  uint32 u32PinIndex;
  uint32 u32GpioInstance;
  Dio_LevelType ChannelLevel;
  Dio_LevelType D.5621;

  <bb 2> :
  ChannelLevel = 0;
  _1 = ChannelId >> 5;
  u32GpioInstance = (uint32) _1;
  _2 = (long unsigned int) ChannelId;
  u32PinIndex = _2 & 31;
  _3 = GpioBaseAdresses[u32GpioInstance];
  GpioBase = (const struct GPIO_Type *) _3;
  ChannelLevel = Gpio_Dio_Ip_ReadPin (GpioBase, u32PinIndex);
  D.5621 = ChannelLevel;

  <bb 3> :
<L0>:
  return D.5621;

}


