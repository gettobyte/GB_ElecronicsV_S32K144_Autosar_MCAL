OsIf_Timer_System_MicrosToTicks (uint32 Micros)
{
  uint32 CoreId;
  uint32 ticks;
  uint64 interim;
  uint32 D.5647;

  <bb 2> :
  ticks = 0;
  CoreId = 0;
  _1 = OsIf_abMdlInit[CoreId];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 4> :
  if (CoreId != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = OsIf_apxInternalCfg[CoreId];
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 7> :
  _4 = (long long unsigned int) Micros;
  _5 = OsIf_au32InternalFrequencies[CoreId];
  _6 = (long long unsigned int) _5;
  interim = _4 * _6;
  interim = interim / 1000000;
  _7 = interim <= 4294967295;
  DevAssert (_7);
  ticks = (uint32) interim;

  <bb 8> :
  D.5647 = ticks;

  <bb 9> :
<L7>:
  return D.5647;

}


OsIf_Timer_System_SetTimerFrequency (uint32 Freq)
{
  uint32 CoreId;

  <bb 2> :
  CoreId = 0;
  _1 = OsIf_abMdlInit[CoreId];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 4> :
  if (CoreId != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = OsIf_apxInternalCfg[CoreId];
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 7> :
  OsIf_au32InternalFrequencies[CoreId] = Freq;

  <bb 8> :
  return;

}


OsIf_Timer_System_GetElapsed (uint32 * const CurrentRef)
{
  uint32 CoreId;
  uint32 Elapsed;
  uint32 D.5626;

  <bb 2> :
  Elapsed = 0;
  CoreId = 0;
  _1 = OsIf_abMdlInit[CoreId];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 4> :
  if (CoreId != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = OsIf_apxInternalCfg[CoreId];
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 7> :
  Elapsed = OsIf_Timer_System_Internal_GetElapsed (CurrentRef);

  <bb 8> :
  D.5626 = Elapsed;

  <bb 9> :
<L7>:
  return D.5626;

}


OsIf_Timer_System_GetCounter ()
{
  uint32 CoreId;
  uint32 Counter;
  uint32 D.5615;

  <bb 2> :
  Counter = 0;
  CoreId = 0;
  _1 = OsIf_abMdlInit[CoreId];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 4> :
  if (CoreId != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = OsIf_apxInternalCfg[CoreId];
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  DevAssert (0);
  goto <bb 8>; [INV]

  <bb 7> :
  Counter = OsIf_Timer_System_Internal_GetCounter ();

  <bb 8> :
  D.5615 = Counter;

  <bb 9> :
<L7>:
  return D.5615;

}


OsIf_Timer_System_Init ()
{
  uint32 CoreId;

  <bb 2> :
  CoreId = 0;
  if (CoreId != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _1 = OsIf_apxPredefinedConfig[CoreId];
  if (_1 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  DevAssert (0);

  <bb 5> :
  OsIf_abMdlInit[CoreId] = 1;
  _2 = OsIf_apxPredefinedConfig[CoreId];
  OsIf_apxInternalCfg[CoreId] = _2;
  _3 = OsIf_apxInternalCfg[CoreId];
  _4 = _3->counterFrequency;
  OsIf_au32InternalFrequencies[CoreId] = _4;
  OsIf_Timer_System_Internal_Init ();
  return;

}


OsIf_Timer_System_Internal_GetElapsed (uint32 * const CurrentRef)
{
  uint32 dif;
  uint32 CurrentVal;
  uint32 D.5631;

  <bb 2> :
  _1 = 3758153744B;
  _2 = _1->CVR;
  CurrentVal = _2 & 16777215;
  dif = 0;
  _3 = *CurrentRef;
  if (CurrentVal > _3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = 3758153744B;
  _5 = _4->RVR;
  _6 = *CurrentRef;
  _7 = _6 - CurrentVal;
  dif = _5 + _7;
  goto <bb 5>; [INV]

  <bb 4> :
  _8 = *CurrentRef;
  dif = _8 - CurrentVal;

  <bb 5> :
  *CurrentRef = CurrentVal;
  D.5631 = dif;

  <bb 6> :
<L3>:
  return D.5631;

}


OsIf_Timer_System_Internal_GetCounter ()
{
  uint32 D.5617;

  <bb 2> :
  _1 = 3758153744B;
  _2 = _1->CVR;
  D.5617 = _2 & 16777215;

  <bb 3> :
<L0>:
  return D.5617;

}


OsIf_Timer_System_Internal_Init ()
{
  <bb 2> :
  _1 = 3758153744B;
  _1->CSRr = 0;
  _2 = 3758153744B;
  _2->RVR = 16777215;
  _3 = 3758153744B;
  _3->CVR = 0;
  _4 = 3758153744B;
  _4->CSRr = 5;
  return;

}


DevAssert (volatile boolean x)
{
  <bb 2> :
  x.0_1 = x;
  if (x.0_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  goto <bb 3>; [INV]

  <bb 4> :
  return;

}


