
Marking local functions:


Marking externally visible functions: Power_Ip_InstallNotificationsCallback Power_Ip_EnableSleepOnExit Power_Ip_DisableSleepOnExit Power_Ip_Init Power_Ip_GetResetRawValue Power_Ip_GetResetReason Power_Ip_SetMode


Marking externally visible variables: Power_Ip_pfReportErrorsCallback


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Power_Ip_CM4_EnableSleepOnExit/20 (Power_Ip_CM4_EnableSleepOnExit) @05d3e2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_EnableSleepOnExit/7 
  Calls: 
Power_Ip_CM4_DisableSleepOnExit/19 (Power_Ip_CM4_DisableSleepOnExit) @05d3e0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_DisableSleepOnExit/6 
  Calls: 
Power_Ip_SMC_AllowedModesConfig/18 (Power_Ip_SMC_AllowedModesConfig) @05d39ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_Init/5 
  Calls: 
Power_Ip_PMC_PowerInit/17 (Power_Ip_PMC_PowerInit) @05d39e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_Init/5 
  Calls: 
Power_Ip_RCM_ResetInit/16 (Power_Ip_RCM_ResetInit) @05d39d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_Init/5 
  Calls: 
Power_Ip_RCM_GetResetRawValue/15 (Power_Ip_RCM_GetResetRawValue) @05d39b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_GetResetRawValue/4 
  Calls: 
Power_Ip_RCM_GetResetReason/14 (Power_Ip_RCM_GetResetReason) @05d399a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_GetResetReason/3 
  Calls: 
ResetReasonArray.5730/13 (ResetReasonArray) @05d31630
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Power_Ip_ConvertIntergeToResetType/2 (read)Power_Ip_ConvertIntergeToResetType/2 (read)Power_Ip_ConvertIntergeToResetType/2 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Power_Ip_ReportPowerErrors/12 (Power_Ip_ReportPowerErrors) @05d39700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
Power_Ip_SMC_ModeConfig/11 (Power_Ip_SMC_ModeConfig) @05d39620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
Power_Ip_SMC_ModeCheckEntry/10 (Power_Ip_SMC_ModeCheckEntry) @05d39540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
Power_Ip_ReportPowerErrorsEmptyCallback/9 (Power_Ip_ReportPowerErrorsEmptyCallback) @05d390e0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: Power_Ip_pfReportErrorsCallback/0 (addr)
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
Power_Ip_InstallNotificationsCallback/8 (Power_Ip_InstallNotificationsCallback) @05d39000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Power_Ip_pfReportErrorsCallback/0 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Power_Ip_EnableSleepOnExit/7 (Power_Ip_EnableSleepOnExit) @05d32a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_CM4_EnableSleepOnExit/20 
Power_Ip_DisableSleepOnExit/6 (Power_Ip_DisableSleepOnExit) @05d32460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_CM4_DisableSleepOnExit/19 
Power_Ip_Init/5 (Power_Ip_Init) @05d32ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_SMC_AllowedModesConfig/18 Power_Ip_PMC_PowerInit/17 Power_Ip_RCM_ResetInit/16 
Power_Ip_GetResetRawValue/4 (Power_Ip_GetResetRawValue) @05d32c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_RCM_GetResetRawValue/15 
Power_Ip_GetResetReason/3 (Power_Ip_GetResetReason) @05d329a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_ConvertIntergeToResetType/2 Power_Ip_RCM_GetResetReason/14 
Power_Ip_ConvertIntergeToResetType/2 (Power_Ip_ConvertIntergeToResetType) @05d32700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: ResetReasonArray.5730/13 (read)ResetReasonArray.5730/13 (read)ResetReasonArray.5730/13 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Power_Ip_GetResetReason/3 
  Calls: 
Power_Ip_SetMode/1 (Power_Ip_SetMode) @05d32380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_ReportPowerErrors/12 Power_Ip_SMC_ModeConfig/11 Power_Ip_SMC_ModeCheckEntry/10 
Power_Ip_pfReportErrorsCallback/0 (Power_Ip_pfReportErrorsCallback) @05d31000
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Power_Ip_ReportPowerErrorsEmptyCallback/9 (addr)
  Referring: Power_Ip_InstallNotificationsCallback/8 (write)
  Availability: available
  Varpool flags: initialized
Power_Ip_InstallNotificationsCallback (void (*Power_Ip_ReportErrorsCallbackType) (Power_Ip_ReportErrorType, uint8) ReportErrorsCallback)
{
  <bb 2> :
  Power_Ip_pfReportErrorsCallback = ReportErrorsCallback;
  return;

}


Power_Ip_EnableSleepOnExit ()
{
  <bb 2> :
  Power_Ip_CM4_EnableSleepOnExit ();
  return;

}


Power_Ip_DisableSleepOnExit ()
{
  <bb 2> :
  Power_Ip_CM4_DisableSleepOnExit ();
  return;

}


Power_Ip_Init (const struct Power_Ip_HwIPsConfigType * HwIPsConfigPtr)
{
  <bb 2> :
  _1 = HwIPsConfigPtr->RCMConfigPtr;
  Power_Ip_RCM_ResetInit (_1);
  _2 = HwIPsConfigPtr->PMCConfigPtr;
  Power_Ip_PMC_PowerInit (_2);
  _3 = HwIPsConfigPtr->SMCConfigPtr;
  Power_Ip_SMC_AllowedModesConfig (_3);
  return;

}


Power_Ip_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;
  Power_Ip_RawResetType D.5770;

  <bb 2> :
  ResetReason = Power_Ip_RCM_GetResetRawValue ();
  D.5770 = ResetReason;

  <bb 3> :
<L0>:
  return D.5770;

}


Power_Ip_GetResetReason ()
{
  uint32 ResetVal;
  Power_Ip_ResetType ResetReason;
  Power_Ip_ResetType D.5768;

  <bb 2> :
  ResetReason = 14;
  ResetVal = Power_Ip_RCM_GetResetReason ();
  ResetReason = Power_Ip_ConvertIntergeToResetType (ResetVal);
  D.5768 = ResetReason;

  <bb 3> :
<L0>:
  return D.5768;

}


Power_Ip_ConvertIntergeToResetType (uint32 ResetReasonIndex)
{
  static const Power_Ip_ResetType ResetReasonArray[15] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
  Power_Ip_ResetType ResetReason;
  Power_Ip_ResetType D.5766;

  <bb 2> :
  ResetReason = 12;
  _1 = ResetReasonArray[ResetReasonIndex];
  if (_1 <= 14)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = ResetReasonArray[ResetReasonIndex];
  if (_2 != 33)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  ResetReason = ResetReasonArray[ResetReasonIndex];
  goto <bb 6>; [INV]

  <bb 5> :
  ResetReason = 12;

  <bb 6> :
  D.5766 = ResetReason;

  <bb 7> :
<L4>:
  return D.5766;

}


Power_Ip_SetMode (const struct Power_Ip_ModeConfigType * ModeConfigPtr)
{
  Power_Ip_PowerModeType PowerMode;
  uint32 PowerSwitchMode;

  <bb 2> :
  PowerMode = ModeConfigPtr->PowerMode;
  _1 = Power_Ip_SMC_ModeCheckEntry (PowerMode);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  PowerSwitchMode = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  PowerSwitchMode = Power_Ip_SMC_ModeConfig (ModeConfigPtr);

  <bb 5> :
  if (PowerSwitchMode == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Power_Ip_ReportPowerErrors (3, 255);

  <bb 7> :
  return;

}


