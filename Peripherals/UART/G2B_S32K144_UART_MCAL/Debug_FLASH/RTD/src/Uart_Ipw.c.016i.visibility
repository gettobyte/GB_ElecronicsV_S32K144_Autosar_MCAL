
Marking local functions:


Marking externally visible functions: Uart_Ipw_GetReceiveStatus Uart_Ipw_GetTransmitStatus Uart_Ipw_AsyncSend Uart_Ipw_AsyncReceive Uart_Ipw_SyncReceive Uart_Ipw_SyncSend Uart_Ipw_SetRxBuffer Uart_Ipw_SetTxBuffer Uart_Ipw_AbortReceivingData Uart_Ipw_AbortSendingData Uart_Ipw_GetBaudrate Uart_Ipw_SetBaudrate Uart_Ipw_Deinit Uart_Ipw_Init


Marking externally visible variables: Uart_Ipw_apChnConfig


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Lpuart_Uart_Ip_GetReceiveStatus/57 (Lpuart_Uart_Ip_GetReceiveStatus) @05e157e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetReceiveStatus/41 
  Calls: 
Lpuart_Uart_Ip_GetTransmitStatus/56 (Lpuart_Uart_Ip_GetTransmitStatus) @05e15620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetTransmitStatus/40 
  Calls: 
Lpuart_Uart_Ip_AsyncSend/55 (Lpuart_Uart_Ip_AsyncSend) @05e15460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AsyncSend/39 
  Calls: 
Lpuart_Uart_Ip_AsyncReceive/54 (Lpuart_Uart_Ip_AsyncReceive) @05e152a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AsyncReceive/38 
  Calls: 
Lpuart_Uart_Ip_SyncReceive/53 (Lpuart_Uart_Ip_SyncReceive) @05e150e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SyncReceive/37 
  Calls: 
Lpuart_Uart_Ip_SyncSend/52 (Lpuart_Uart_Ip_SyncSend) @05db3ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SyncSend/36 
  Calls: 
Lpuart_Uart_Ip_SetRxBuffer/51 (Lpuart_Uart_Ip_SetRxBuffer) @05db3d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetRxBuffer/35 
  Calls: 
Lpuart_Uart_Ip_SetTxBuffer/50 (Lpuart_Uart_Ip_SetTxBuffer) @05db3b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetTxBuffer/34 
  Calls: 
Lpuart_Uart_Ip_AbortReceivingData/49 (Lpuart_Uart_Ip_AbortReceivingData) @05db39a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AbortReceivingData/33 
  Calls: 
Lpuart_Uart_Ip_AbortSendingData/48 (Lpuart_Uart_Ip_AbortSendingData) @05db37e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AbortSendingData/32 
  Calls: 
Lpuart_Uart_Ip_GetBaudRate/47 (Lpuart_Uart_Ip_GetBaudRate) @05db3620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetBaudrate/31 
  Calls: 
Lpuart_Uart_Ip_SetBaudRate/46 (Lpuart_Uart_Ip_SetBaudRate) @05db3460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetBaudrate/30 
  Calls: 
Lpuart_Uart_Ip_Deinit/45 (Lpuart_Uart_Ip_Deinit) @05db32a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_Deinit/29 
  Calls: 
Lpuart_Uart_Ip_Init/44 (Lpuart_Uart_Ip_Init) @05db30e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_Init/28 
  Calls: 
Uart_Ipw_LpuartConvertBaudrateType/43 (Uart_Ipw_LpuartConvertBaudrateType) @05dad620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Uart_Ipw_SetBaudrate/30 
  Calls: 
Uart_Ipw_LpuartConvertStatus/42 (Uart_Ipw_LpuartConvertStatus) @05dad0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Uart_Ipw_GetReceiveStatus/41 Uart_Ipw_GetTransmitStatus/40 
  Calls: 
Uart_Ipw_GetReceiveStatus/41 (Uart_Ipw_GetReceiveStatus) @05dadd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Uart_Ipw_LpuartConvertStatus/42 Lpuart_Uart_Ip_GetReceiveStatus/57 
Uart_Ipw_GetTransmitStatus/40 (Uart_Ipw_GetTransmitStatus) @05dada80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Uart_Ipw_LpuartConvertStatus/42 Lpuart_Uart_Ip_GetTransmitStatus/56 
Uart_Ipw_AsyncSend/39 (Uart_Ipw_AsyncSend) @05dad7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AsyncSend/55 
Uart_Ipw_AsyncReceive/38 (Uart_Ipw_AsyncReceive) @05dad540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AsyncReceive/54 
Uart_Ipw_SyncReceive/37 (Uart_Ipw_SyncReceive) @05dad2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SyncReceive/53 
Uart_Ipw_SyncSend/36 (Uart_Ipw_SyncSend) @05dad000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SyncSend/52 
Uart_Ipw_SetRxBuffer/35 (Uart_Ipw_SetRxBuffer) @05d0ab60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetRxBuffer/51 
Uart_Ipw_SetTxBuffer/34 (Uart_Ipw_SetTxBuffer) @05d0a620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetTxBuffer/50 
Uart_Ipw_AbortReceivingData/33 (Uart_Ipw_AbortReceivingData) @05d0a0e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AbortReceivingData/49 
Uart_Ipw_AbortSendingData/32 (Uart_Ipw_AbortSendingData) @05d0ad20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AbortSendingData/48 
Uart_Ipw_GetBaudrate/31 (Uart_Ipw_GetBaudrate) @05d0aa80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_GetBaudRate/47 
Uart_Ipw_SetBaudrate/30 (Uart_Ipw_SetBaudrate) @05d0a7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetBaudRate/46 Uart_Ipw_LpuartConvertBaudrateType/43 
Uart_Ipw_Deinit/29 (Uart_Ipw_Deinit) @05d0a540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_Deinit/45 
Uart_Ipw_Init/28 (Uart_Ipw_Init) @05d0a2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (write)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_Init/44 
Uart_Ipw_apChnConfig/27 (Uart_Ipw_apChnConfig) @05d04678
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Uart_Ipw_Init/28 (write)Uart_Ipw_Init/28 (read)Uart_Ipw_Deinit/29 (read)Uart_Ipw_Deinit/29 (read)Uart_Ipw_Deinit/29 (write)Uart_Ipw_SetBaudrate/30 (read)Uart_Ipw_SetBaudrate/30 (read)Uart_Ipw_GetBaudrate/31 (read)Uart_Ipw_GetBaudrate/31 (read)Uart_Ipw_AbortSendingData/32 (read)Uart_Ipw_AbortSendingData/32 (read)Uart_Ipw_AbortReceivingData/33 (read)Uart_Ipw_AbortReceivingData/33 (read)Uart_Ipw_SetTxBuffer/34 (read)Uart_Ipw_SetTxBuffer/34 (read)Uart_Ipw_SetRxBuffer/35 (read)Uart_Ipw_SetRxBuffer/35 (read)Uart_Ipw_SyncSend/36 (read)Uart_Ipw_SyncSend/36 (read)Uart_Ipw_SyncReceive/37 (read)Uart_Ipw_SyncReceive/37 (read)Uart_Ipw_AsyncReceive/38 (read)Uart_Ipw_AsyncReceive/38 (read)Uart_Ipw_AsyncSend/39 (read)Uart_Ipw_AsyncSend/39 (read)Uart_Ipw_GetTransmitStatus/40 (read)Uart_Ipw_GetTransmitStatus/40 (read)Uart_Ipw_GetReceiveStatus/41 (read)Uart_Ipw_GetReceiveStatus/41 (read)
  Availability: available
  Varpool flags:
Uart_Ipw_LpuartConvertBaudrateType (Uart_BaudrateType Baudrate)
{
  Lpuart_Uart_Ip_BaudrateType TempBaud;
  Lpuart_Uart_Ip_BaudrateType D.6297;

  <bb 2> :
  TempBaud = 1200;
  switch (Baudrate) <default: <L15> [INV], case 1200: <L0> [INV], case 2400: <L1> [INV], case 4800: <L2> [INV], case 7200: <L3> [INV], case 9600: <L4> [INV], case 14400: <L5> [INV], case 19200: <L6> [INV], case 28800: <L7> [INV], case 38400: <L8> [INV], case 57600: <L9> [INV], case 115200: <L10> [INV], case 230400: <L11> [INV], case 460800: <L12> [INV], case 921600: <L13> [INV], case 1843200: <L14> [INV]>

  <bb 3> :
<L0>:
  TempBaud = 1200;
  goto <bb 19>; [INV]

  <bb 4> :
<L1>:
  TempBaud = 2400;
  goto <bb 19>; [INV]

  <bb 5> :
<L2>:
  TempBaud = 4800;
  goto <bb 19>; [INV]

  <bb 6> :
<L3>:
  TempBaud = 7200;
  goto <bb 19>; [INV]

  <bb 7> :
<L4>:
  TempBaud = 9600;
  goto <bb 19>; [INV]

  <bb 8> :
<L5>:
  TempBaud = 14400;
  goto <bb 19>; [INV]

  <bb 9> :
<L6>:
  TempBaud = 19200;
  goto <bb 19>; [INV]

  <bb 10> :
<L7>:
  TempBaud = 28800;
  goto <bb 19>; [INV]

  <bb 11> :
<L8>:
  TempBaud = 38400;
  goto <bb 19>; [INV]

  <bb 12> :
<L9>:
  TempBaud = 57600;
  goto <bb 19>; [INV]

  <bb 13> :
<L10>:
  TempBaud = 115200;
  goto <bb 19>; [INV]

  <bb 14> :
<L11>:
  TempBaud = 230400;
  goto <bb 19>; [INV]

  <bb 15> :
<L12>:
  TempBaud = 460800;
  goto <bb 19>; [INV]

  <bb 16> :
<L13>:
  TempBaud = 921600;
  goto <bb 19>; [INV]

  <bb 17> :
<L14>:
  TempBaud = 1843200;
  goto <bb 19>; [INV]

  <bb 18> :
<L15>:

  <bb 19> :
  D.6297 = TempBaud;

  <bb 20> :
<L17>:
  return D.6297;

}


Uart_Ipw_LpuartConvertStatus (Lpuart_Uart_Ip_StatusType Status)
{
  Uart_StatusType TempStatus;
  Uart_StatusType D.6295;

  <bb 2> :
  TempStatus = 0;
  switch (Status) <default: <L9> [INV], case 0: <L0> [INV], case 2: <L1> [INV], case 3: <L3> [INV], case 5: <L5> [INV], case 6: <L2> [INV], case 7: <L4> [INV], case 8: <L7> [INV], case 9: <L6> [INV], case 16: <L8> [INV]>

  <bb 3> :
<L0>:
  TempStatus = 0;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  TempStatus = 1;
  goto <bb 13>; [INV]

  <bb 5> :
<L2>:
  TempStatus = 2;
  goto <bb 13>; [INV]

  <bb 6> :
<L3>:
  TempStatus = 6;
  goto <bb 13>; [INV]

  <bb 7> :
<L4>:
  TempStatus = 3;
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  TempStatus = 4;
  goto <bb 13>; [INV]

  <bb 9> :
<L6>:
  TempStatus = 7;
  goto <bb 13>; [INV]

  <bb 10> :
<L7>:
  TempStatus = 5;
  goto <bb 13>; [INV]

  <bb 11> :
<L8>:
  TempStatus = 8;
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  D.6295 = TempStatus;

  <bb 14> :
<L11>:
  return D.6295;

}


Uart_Ipw_GetReceiveStatus (uint8 Channel, uint32 * BytesRemaining)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Uart_StatusType TempStatus;
  Uart_StatusType D.6293;

  <bb 2> :
  TempStatus = 6;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32LpuartIpStatus = Lpuart_Uart_Ip_GetReceiveStatus (HwUnit, BytesRemaining);
  TempStatus = Uart_Ipw_LpuartConvertStatus (u32LpuartIpStatus);

  <bb 4> :
  D.6293 = TempStatus;

  <bb 5> :
<L2>:
  return D.6293;

}


Uart_Ipw_GetTransmitStatus (uint8 Channel, uint32 * BytesRemaining)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Uart_StatusType TempStatus;
  Uart_StatusType D.6289;

  <bb 2> :
  TempStatus = 6;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32LpuartIpStatus = Lpuart_Uart_Ip_GetTransmitStatus (HwUnit, BytesRemaining);
  TempStatus = Uart_Ipw_LpuartConvertStatus (u32LpuartIpStatus);

  <bb 4> :
  D.6289 = TempStatus;

  <bb 5> :
<L2>:
  return D.6289;

}


Uart_Ipw_AsyncSend (uint8 Channel, const uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6285;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AsyncSend (HwUnit, Buffer, BufferSize);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;

  <bb 5> :
  D.6285 = TempStatus;

  <bb 6> :
<L4>:
  return D.6285;

}


Uart_Ipw_AsyncReceive (uint8 Channel, uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6279;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AsyncReceive (HwUnit, Buffer, BufferSize);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;

  <bb 5> :
  D.6279 = TempStatus;

  <bb 6> :
<L4>:
  return D.6279;

}


Uart_Ipw_SyncReceive (uint8 Channel, uint8 * Buffer, uint32 BufferSize, uint32 Timeout)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6273;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  u32LpuartIpStatus = Lpuart_Uart_Ip_SyncReceive (HwUnit, Buffer, BufferSize, Timeout);
  if (u32LpuartIpStatus == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  if (u32LpuartIpStatus == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  TempStatus = 6;
  goto <bb 8>; [INV]

  <bb 7> :
  TempStatus = 1;

  <bb 8> :
  D.6273 = TempStatus;

  <bb 9> :
<L8>:
  return D.6273;

}


Uart_Ipw_SyncSend (uint8 Channel, const uint8 * Buffer, uint32 BufferSize, uint32 Timeout)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6263;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  u32LpuartIpStatus = Lpuart_Uart_Ip_SyncSend (HwUnit, Buffer, BufferSize, Timeout);
  if (u32LpuartIpStatus == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  if (u32LpuartIpStatus == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  TempStatus = 6;
  goto <bb 8>; [INV]

  <bb 7> :
  TempStatus = 1;

  <bb 8> :
  D.6263 = TempStatus;

  <bb 9> :
<L8>:
  return D.6263;

}


Uart_Ipw_SetRxBuffer (uint8 Channel, uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;

  <bb 2> :
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_SetRxBuffer (HwUnit, Buffer, BufferSize);

  <bb 4> :
  return;

}


Uart_Ipw_SetTxBuffer (uint8 Channel, const uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;

  <bb 2> :
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_SetTxBuffer (HwUnit, Buffer, BufferSize);

  <bb 4> :
  return;

}


Uart_Ipw_AbortReceivingData (uint8 Channel)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6249;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AbortReceivingData (HwUnit);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;

  <bb 5> :
  D.6249 = TempStatus;

  <bb 6> :
<L4>:
  return D.6249;

}


Uart_Ipw_AbortSendingData (uint8 Channel)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6243;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AbortSendingData (HwUnit);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;

  <bb 5> :
  D.6243 = TempStatus;

  <bb 6> :
<L4>:
  return D.6243;

}


Uart_Ipw_GetBaudrate (uint8 Channel, uint32 * BaudrateValue)
{
  uint8 HwUnit;

  <bb 2> :
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_GetBaudRate (HwUnit, BaudrateValue);

  <bb 4> :
  return;

}


Uart_Ipw_SetBaudrate (uint8 Channel, Uart_BaudrateType BaudRateValue, uint32 ClockFrequency)
{
  Lpuart_Uart_Ip_BaudrateType LpuartBaud;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6235;

  <bb 2> :
  TempStatus = 1;
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  LpuartBaud = Uart_Ipw_LpuartConvertBaudrateType (BaudRateValue);
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_SetBaudRate (HwUnit, LpuartBaud, ClockFrequency);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus = 0;

  <bb 5> :
  D.6235 = TempStatus;

  <bb 6> :
<L4>:
  return D.6235;

}


Uart_Ipw_Deinit (uint8 Channel)
{
  uint8 HwUnit;

  <bb 2> :
  _1 = (int) Channel;
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit = _2->UartHwChannel;
  _3 = (int) Channel;
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_Deinit (HwUnit);

  <bb 4> :
  _6 = (int) Channel;
  Uart_Ipw_apChnConfig[_6] = 0B;
  return;

}


Uart_Ipw_Init (uint8 Channel, const struct Uart_Ipw_HwConfigType * Config)
{
  uint8 HwUnit;

  <bb 2> :
  HwUnit = Config->UartHwChannel;
  _1 = (int) Channel;
  Uart_Ipw_apChnConfig[_1] = Config;
  _2 = (int) Channel;
  _3 = Uart_Ipw_apChnConfig[_2];
  _4 = _3->UartIpType;
  if (_4 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = Config->UserConfig;
  _6 = _5->LpuartUserConfig;
  Lpuart_Uart_Ip_Init (HwUnit, _6);

  <bb 4> :
  return;

}


