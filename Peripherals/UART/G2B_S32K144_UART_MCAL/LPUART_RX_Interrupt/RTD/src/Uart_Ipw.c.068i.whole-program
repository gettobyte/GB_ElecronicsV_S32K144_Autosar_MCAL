
Marking local functions:


Marking externally visible functions: Uart_Ipw_GetReceiveStatus Uart_Ipw_GetTransmitStatus Uart_Ipw_AsyncSend Uart_Ipw_AsyncReceive Uart_Ipw_SyncReceive Uart_Ipw_SyncSend Uart_Ipw_SetRxBuffer Uart_Ipw_SetTxBuffer Uart_Ipw_AbortReceivingData Uart_Ipw_AbortSendingData Uart_Ipw_GetBaudrate Uart_Ipw_SetBaudrate Uart_Ipw_Deinit Uart_Ipw_Init


Marking externally visible variables: Uart_Ipw_apChnConfig


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Lpuart_Uart_Ip_GetReceiveStatus/57 (Lpuart_Uart_Ip_GetReceiveStatus) @05f267e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetReceiveStatus/41 
  Calls: 
Lpuart_Uart_Ip_GetTransmitStatus/56 (Lpuart_Uart_Ip_GetTransmitStatus) @05f26620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetTransmitStatus/40 
  Calls: 
Lpuart_Uart_Ip_AsyncSend/55 (Lpuart_Uart_Ip_AsyncSend) @05f26460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AsyncSend/39 
  Calls: 
Lpuart_Uart_Ip_AsyncReceive/54 (Lpuart_Uart_Ip_AsyncReceive) @05f262a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AsyncReceive/38 
  Calls: 
Lpuart_Uart_Ip_SyncReceive/53 (Lpuart_Uart_Ip_SyncReceive) @05f260e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SyncReceive/37 
  Calls: 
Lpuart_Uart_Ip_SyncSend/52 (Lpuart_Uart_Ip_SyncSend) @05ec0ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SyncSend/36 
  Calls: 
Lpuart_Uart_Ip_SetRxBuffer/51 (Lpuart_Uart_Ip_SetRxBuffer) @05ec0d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetRxBuffer/35 
  Calls: 
Lpuart_Uart_Ip_SetTxBuffer/50 (Lpuart_Uart_Ip_SetTxBuffer) @05ec0b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetTxBuffer/34 
  Calls: 
Lpuart_Uart_Ip_AbortReceivingData/49 (Lpuart_Uart_Ip_AbortReceivingData) @05ec09a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AbortReceivingData/33 
  Calls: 
Lpuart_Uart_Ip_AbortSendingData/48 (Lpuart_Uart_Ip_AbortSendingData) @05ec07e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_AbortSendingData/32 
  Calls: 
Lpuart_Uart_Ip_GetBaudRate/47 (Lpuart_Uart_Ip_GetBaudRate) @05ec0620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_GetBaudrate/31 
  Calls: 
Lpuart_Uart_Ip_SetBaudRate/46 (Lpuart_Uart_Ip_SetBaudRate) @05ec0460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_SetBaudrate/30 
  Calls: 
Lpuart_Uart_Ip_Deinit/45 (Lpuart_Uart_Ip_Deinit) @05ec02a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_Deinit/29 
  Calls: 
Lpuart_Uart_Ip_Init/44 (Lpuart_Uart_Ip_Init) @05ec00e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Uart_Ipw_Init/28 
  Calls: 
Uart_Ipw_LpuartConvertBaudrateType/43 (Uart_Ipw_LpuartConvertBaudrateType) @05eba620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Uart_Ipw_SetBaudrate/30 
  Calls: 
Uart_Ipw_LpuartConvertStatus/42 (Uart_Ipw_LpuartConvertStatus) @05eba0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Uart_Ipw_GetReceiveStatus/41 Uart_Ipw_GetTransmitStatus/40 
  Calls: 
Uart_Ipw_GetReceiveStatus/41 (Uart_Ipw_GetReceiveStatus) @05ebad20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Uart_Ipw_LpuartConvertStatus/42 Lpuart_Uart_Ip_GetReceiveStatus/57 
Uart_Ipw_GetTransmitStatus/40 (Uart_Ipw_GetTransmitStatus) @05ebaa80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Uart_Ipw_LpuartConvertStatus/42 Lpuart_Uart_Ip_GetTransmitStatus/56 
Uart_Ipw_AsyncSend/39 (Uart_Ipw_AsyncSend) @05eba7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AsyncSend/55 
Uart_Ipw_AsyncReceive/38 (Uart_Ipw_AsyncReceive) @05eba540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AsyncReceive/54 
Uart_Ipw_SyncReceive/37 (Uart_Ipw_SyncReceive) @05eba2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SyncReceive/53 
Uart_Ipw_SyncSend/36 (Uart_Ipw_SyncSend) @05eba000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SyncSend/52 
Uart_Ipw_SetRxBuffer/35 (Uart_Ipw_SetRxBuffer) @05e17b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetRxBuffer/51 
Uart_Ipw_SetTxBuffer/34 (Uart_Ipw_SetTxBuffer) @05e17620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetTxBuffer/50 
Uart_Ipw_AbortReceivingData/33 (Uart_Ipw_AbortReceivingData) @05e170e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AbortReceivingData/49 
Uart_Ipw_AbortSendingData/32 (Uart_Ipw_AbortSendingData) @05e17d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_AbortSendingData/48 
Uart_Ipw_GetBaudrate/31 (Uart_Ipw_GetBaudrate) @05e17a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_GetBaudRate/47 
Uart_Ipw_SetBaudrate/30 (Uart_Ipw_SetBaudrate) @05e177e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_SetBaudRate/46 Uart_Ipw_LpuartConvertBaudrateType/43 
Uart_Ipw_Deinit/29 (Uart_Ipw_Deinit) @05e17540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (read)Uart_Ipw_apChnConfig/27 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_Deinit/45 
Uart_Ipw_Init/28 (Uart_Ipw_Init) @05e172a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Uart_Ipw_apChnConfig/27 (write)Uart_Ipw_apChnConfig/27 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpuart_Uart_Ip_Init/44 
Uart_Ipw_apChnConfig/27 (Uart_Ipw_apChnConfig) @05e11678
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Uart_Ipw_AsyncSend/39 (read)Uart_Ipw_AsyncSend/39 (read)Uart_Ipw_AsyncReceive/38 (read)Uart_Ipw_GetReceiveStatus/41 (read)Uart_Ipw_GetReceiveStatus/41 (read)Uart_Ipw_GetTransmitStatus/40 (read)Uart_Ipw_GetTransmitStatus/40 (read)Uart_Ipw_Init/28 (write)Uart_Ipw_Init/28 (read)Uart_Ipw_Deinit/29 (read)Uart_Ipw_Deinit/29 (write)Uart_Ipw_GetBaudrate/31 (read)Uart_Ipw_GetBaudrate/31 (read)Uart_Ipw_AbortSendingData/32 (read)Uart_Ipw_AbortSendingData/32 (read)Uart_Ipw_AbortReceivingData/33 (read)Uart_Ipw_AbortReceivingData/33 (read)Uart_Ipw_SetTxBuffer/34 (read)Uart_Ipw_SetTxBuffer/34 (read)Uart_Ipw_SetRxBuffer/35 (read)Uart_Ipw_SetRxBuffer/35 (read)Uart_Ipw_SyncSend/36 (read)Uart_Ipw_SyncSend/36 (read)Uart_Ipw_SyncReceive/37 (read)Uart_Ipw_SyncReceive/37 (read)Uart_Ipw_AsyncReceive/38 (read)Uart_Ipw_Deinit/29 (read)Uart_Ipw_SetBaudrate/30 (read)Uart_Ipw_SetBaudrate/30 (read)
  Availability: available
  Varpool flags:
Uart_Ipw_LpuartConvertBaudrateType (Uart_BaudrateType Baudrate)
{
  Lpuart_Uart_Ip_BaudrateType TempBaud;
  Lpuart_Uart_Ip_BaudrateType D.6297;
  Lpuart_Uart_Ip_BaudrateType _19;

  <bb 2> :
  TempBaud_2 = 1200;
  switch (Baudrate_3(D)) <default: <L15> [INV], case 1200: <L0> [INV], case 2400: <L1> [INV], case 4800: <L2> [INV], case 7200: <L3> [INV], case 9600: <L4> [INV], case 14400: <L5> [INV], case 19200: <L6> [INV], case 28800: <L7> [INV], case 38400: <L8> [INV], case 57600: <L9> [INV], case 115200: <L10> [INV], case 230400: <L11> [INV], case 460800: <L12> [INV], case 921600: <L13> [INV], case 1843200: <L14> [INV]>

  <bb 3> :
<L0>:
  TempBaud_18 = 1200;
  goto <bb 19>; [INV]

  <bb 4> :
<L1>:
  TempBaud_17 = 2400;
  goto <bb 19>; [INV]

  <bb 5> :
<L2>:
  TempBaud_16 = 4800;
  goto <bb 19>; [INV]

  <bb 6> :
<L3>:
  TempBaud_15 = 7200;
  goto <bb 19>; [INV]

  <bb 7> :
<L4>:
  TempBaud_14 = 9600;
  goto <bb 19>; [INV]

  <bb 8> :
<L5>:
  TempBaud_13 = 14400;
  goto <bb 19>; [INV]

  <bb 9> :
<L6>:
  TempBaud_12 = 19200;
  goto <bb 19>; [INV]

  <bb 10> :
<L7>:
  TempBaud_11 = 28800;
  goto <bb 19>; [INV]

  <bb 11> :
<L8>:
  TempBaud_10 = 38400;
  goto <bb 19>; [INV]

  <bb 12> :
<L9>:
  TempBaud_9 = 57600;
  goto <bb 19>; [INV]

  <bb 13> :
<L10>:
  TempBaud_8 = 115200;
  goto <bb 19>; [INV]

  <bb 14> :
<L11>:
  TempBaud_7 = 230400;
  goto <bb 19>; [INV]

  <bb 15> :
<L12>:
  TempBaud_6 = 460800;
  goto <bb 19>; [INV]

  <bb 16> :
<L13>:
  TempBaud_5 = 921600;
  goto <bb 19>; [INV]

  <bb 17> :
<L14>:
  TempBaud_4 = 1843200;
  goto <bb 19>; [INV]

  <bb 18> :
<L15>:

  <bb 19> :
  # TempBaud_1 = PHI <TempBaud_18(3), TempBaud_17(4), TempBaud_16(5), TempBaud_15(6), TempBaud_14(7), TempBaud_13(8), TempBaud_12(9), TempBaud_11(10), TempBaud_10(11), TempBaud_9(12), TempBaud_8(13), TempBaud_7(14), TempBaud_6(15), TempBaud_5(16), TempBaud_4(17), TempBaud_2(18)>
  _19 = TempBaud_1;

  <bb 20> :
<L17>:
  return _19;

}


Uart_Ipw_LpuartConvertStatus (Lpuart_Uart_Ip_StatusType Status)
{
  Uart_StatusType TempStatus;
  Uart_StatusType D.6295;
  Uart_StatusType _13;

  <bb 2> :
  TempStatus_2 = 0;
  switch (Status_3(D)) <default: <L9> [INV], case 0: <L0> [INV], case 2: <L1> [INV], case 3: <L3> [INV], case 5: <L5> [INV], case 6: <L2> [INV], case 7: <L4> [INV], case 8: <L7> [INV], case 9: <L6> [INV], case 16: <L8> [INV]>

  <bb 3> :
<L0>:
  TempStatus_12 = 0;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  TempStatus_11 = 1;
  goto <bb 13>; [INV]

  <bb 5> :
<L2>:
  TempStatus_8 = 2;
  goto <bb 13>; [INV]

  <bb 6> :
<L3>:
  TempStatus_10 = 6;
  goto <bb 13>; [INV]

  <bb 7> :
<L4>:
  TempStatus_7 = 3;
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  TempStatus_9 = 4;
  goto <bb 13>; [INV]

  <bb 9> :
<L6>:
  TempStatus_5 = 7;
  goto <bb 13>; [INV]

  <bb 10> :
<L7>:
  TempStatus_6 = 5;
  goto <bb 13>; [INV]

  <bb 11> :
<L8>:
  TempStatus_4 = 8;
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  # TempStatus_1 = PHI <TempStatus_12(3), TempStatus_11(4), TempStatus_8(5), TempStatus_10(6), TempStatus_7(7), TempStatus_9(8), TempStatus_5(9), TempStatus_6(10), TempStatus_4(11), TempStatus_2(12)>
  _13 = TempStatus_1;

  <bb 14> :
<L11>:
  return _13;

}


Uart_Ipw_GetReceiveStatus (uint8 Channel, uint32 * BytesRemaining)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Uart_StatusType TempStatus;
  Uart_StatusType D.6293;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  Uart_StatusType _17;

  <bb 2> :
  TempStatus_8 = 6;
  _1 = (int) Channel_9(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_11 = _2->UartHwChannel;
  _3 = (int) Channel_9(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32LpuartIpStatus_14 = Lpuart_Uart_Ip_GetReceiveStatus (HwUnit_11, BytesRemaining_12(D));
  TempStatus_16 = Uart_Ipw_LpuartConvertStatus (u32LpuartIpStatus_14);

  <bb 4> :
  # TempStatus_6 = PHI <TempStatus_8(2), TempStatus_16(3)>
  _17 = TempStatus_6;

  <bb 5> :
<L2>:
  return _17;

}


Uart_Ipw_GetTransmitStatus (uint8 Channel, uint32 * BytesRemaining)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Uart_StatusType TempStatus;
  Uart_StatusType D.6289;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  Uart_StatusType _17;

  <bb 2> :
  TempStatus_8 = 6;
  _1 = (int) Channel_9(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_11 = _2->UartHwChannel;
  _3 = (int) Channel_9(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32LpuartIpStatus_14 = Lpuart_Uart_Ip_GetTransmitStatus (HwUnit_11, BytesRemaining_12(D));
  TempStatus_16 = Uart_Ipw_LpuartConvertStatus (u32LpuartIpStatus_14);

  <bb 4> :
  # TempStatus_6 = PHI <TempStatus_8(2), TempStatus_16(3)>
  _17 = TempStatus_6;

  <bb 5> :
<L2>:
  return _17;

}


Uart_Ipw_AsyncSend (uint8 Channel, const uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6285;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _17;

  <bb 2> :
  TempStatus_9 = 1;
  _1 = (int) Channel_10(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_12 = _2->UartHwChannel;
  _3 = (int) Channel_10(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AsyncSend (HwUnit_12, Buffer_13(D), BufferSize_14(D));
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_16 = 0;

  <bb 5> :
  # TempStatus_7 = PHI <TempStatus_9(2), TempStatus_9(3), TempStatus_16(4)>
  _17 = TempStatus_7;

  <bb 6> :
<L4>:
  return _17;

}


Uart_Ipw_AsyncReceive (uint8 Channel, uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6279;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _17;

  <bb 2> :
  TempStatus_9 = 1;
  _1 = (int) Channel_10(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_12 = _2->UartHwChannel;
  _3 = (int) Channel_10(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AsyncReceive (HwUnit_12, Buffer_13(D), BufferSize_14(D));
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_16 = 0;

  <bb 5> :
  # TempStatus_7 = PHI <TempStatus_9(2), TempStatus_9(3), TempStatus_16(4)>
  _17 = TempStatus_7;

  <bb 6> :
<L4>:
  return _17;

}


Uart_Ipw_SyncReceive (uint8 Channel, uint8 * Buffer, uint32 BufferSize, uint32 Timeout)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6273;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  Std_ReturnType _20;

  <bb 2> :
  TempStatus_8 = 1;
  _1 = (int) Channel_9(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_11 = _2->UartHwChannel;
  _3 = (int) Channel_9(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  u32LpuartIpStatus_16 = Lpuart_Uart_Ip_SyncReceive (HwUnit_11, Buffer_12(D), BufferSize_13(D), Timeout_14(D));
  if (u32LpuartIpStatus_16 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_19 = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  if (u32LpuartIpStatus_16 == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  TempStatus_18 = 6;
  goto <bb 8>; [INV]

  <bb 7> :
  TempStatus_17 = 1;

  <bb 8> :
  # TempStatus_6 = PHI <TempStatus_8(2), TempStatus_19(4), TempStatus_18(6), TempStatus_17(7)>
  _20 = TempStatus_6;

  <bb 9> :
<L8>:
  return _20;

}


Uart_Ipw_SyncSend (uint8 Channel, const uint8 * Buffer, uint32 BufferSize, uint32 Timeout)
{
  Lpuart_Uart_Ip_StatusType u32LpuartIpStatus;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6263;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  Std_ReturnType _20;

  <bb 2> :
  TempStatus_8 = 1;
  _1 = (int) Channel_9(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_11 = _2->UartHwChannel;
  _3 = (int) Channel_9(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  u32LpuartIpStatus_16 = Lpuart_Uart_Ip_SyncSend (HwUnit_11, Buffer_12(D), BufferSize_13(D), Timeout_14(D));
  if (u32LpuartIpStatus_16 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_19 = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  if (u32LpuartIpStatus_16 == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  TempStatus_18 = 6;
  goto <bb 8>; [INV]

  <bb 7> :
  TempStatus_17 = 1;

  <bb 8> :
  # TempStatus_6 = PHI <TempStatus_8(2), TempStatus_19(4), TempStatus_18(6), TempStatus_17(7)>
  _20 = TempStatus_6;

  <bb 9> :
<L8>:
  return _20;

}


Uart_Ipw_SetRxBuffer (uint8 Channel, uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;

  <bb 2> :
  _1 = (int) Channel_7(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_9 = _2->UartHwChannel;
  _3 = (int) Channel_7(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_SetRxBuffer (HwUnit_9, Buffer_10(D), BufferSize_11(D));

  <bb 4> :
  return;

}


Uart_Ipw_SetTxBuffer (uint8 Channel, const uint8 * Buffer, uint32 BufferSize)
{
  uint8 HwUnit;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;

  <bb 2> :
  _1 = (int) Channel_7(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_9 = _2->UartHwChannel;
  _3 = (int) Channel_7(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_SetTxBuffer (HwUnit_9, Buffer_10(D), BufferSize_11(D));

  <bb 4> :
  return;

}


Uart_Ipw_AbortReceivingData (uint8 Channel)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6249;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _15;

  <bb 2> :
  TempStatus_9 = 1;
  _1 = (int) Channel_10(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_12 = _2->UartHwChannel;
  _3 = (int) Channel_10(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AbortReceivingData (HwUnit_12);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_14 = 0;

  <bb 5> :
  # TempStatus_7 = PHI <TempStatus_9(2), TempStatus_9(3), TempStatus_14(4)>
  _15 = TempStatus_7;

  <bb 6> :
<L4>:
  return _15;

}


Uart_Ipw_AbortSendingData (uint8 Channel)
{
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6243;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _15;

  <bb 2> :
  TempStatus_9 = 1;
  _1 = (int) Channel_10(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_12 = _2->UartHwChannel;
  _3 = (int) Channel_10(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_AbortSendingData (HwUnit_12);
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_14 = 0;

  <bb 5> :
  # TempStatus_7 = PHI <TempStatus_9(2), TempStatus_9(3), TempStatus_14(4)>
  _15 = TempStatus_7;

  <bb 6> :
<L4>:
  return _15;

}


Uart_Ipw_GetBaudrate (uint8 Channel, uint32 * BaudrateValue)
{
  uint8 HwUnit;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;

  <bb 2> :
  _1 = (int) Channel_7(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_9 = _2->UartHwChannel;
  _3 = (int) Channel_7(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_GetBaudRate (HwUnit_9, BaudrateValue_10(D));

  <bb 4> :
  return;

}


Uart_Ipw_SetBaudrate (uint8 Channel, Uart_BaudrateType BaudRateValue, uint32 ClockFrequency)
{
  Lpuart_Uart_Ip_BaudrateType LpuartBaud;
  uint8 HwUnit;
  Std_ReturnType TempStatus;
  Std_ReturnType D.6235;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _19;

  <bb 2> :
  TempStatus_9 = 1;
  _1 = (int) Channel_10(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_12 = _2->UartHwChannel;
  LpuartBaud_15 = Uart_Ipw_LpuartConvertBaudrateType (BaudRateValue_13(D));
  _3 = (int) Channel_10(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _6 = Lpuart_Uart_Ip_SetBaudRate (HwUnit_12, LpuartBaud_15, ClockFrequency_16(D));
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TempStatus_18 = 0;

  <bb 5> :
  # TempStatus_7 = PHI <TempStatus_9(2), TempStatus_9(3), TempStatus_18(4)>
  _19 = TempStatus_7;

  <bb 6> :
<L4>:
  return _19;

}


Uart_Ipw_Deinit (uint8 Channel)
{
  uint8 HwUnit;
  int _1;
  const struct Uart_Ipw_HwConfigType * _2;
  int _3;
  const struct Uart_Ipw_HwConfigType * _4;
  <unnamed type> _5;
  int _6;

  <bb 2> :
  _1 = (int) Channel_8(D);
  _2 = Uart_Ipw_apChnConfig[_1];
  HwUnit_10 = _2->UartHwChannel;
  _3 = (int) Channel_8(D);
  _4 = Uart_Ipw_apChnConfig[_3];
  _5 = _4->UartIpType;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Lpuart_Uart_Ip_Deinit (HwUnit_10);

  <bb 4> :
  _6 = (int) Channel_8(D);
  Uart_Ipw_apChnConfig[_6] = 0B;
  return;

}


Uart_Ipw_Init (uint8 Channel, const struct Uart_Ipw_HwConfigType * Config)
{
  uint8 HwUnit;
  int _1;
  int _2;
  const struct Uart_Ipw_HwConfigType * _3;
  <unnamed type> _4;
  const struct Uart_Ipw_IpConfigType * _5;
  const struct Lpuart_Uart_Ip_UserConfigType * _6;

  <bb 2> :
  HwUnit_10 = Config_9(D)->UartHwChannel;
  _1 = (int) Channel_11(D);
  Uart_Ipw_apChnConfig[_1] = Config_9(D);
  _2 = (int) Channel_11(D);
  _3 = Uart_Ipw_apChnConfig[_2];
  _4 = _3->UartIpType;
  if (_4 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = Config_9(D)->UserConfig;
  _6 = _5->LpuartUserConfig;
  Lpuart_Uart_Ip_Init (HwUnit_10, _6);

  <bb 4> :
  return;

}


