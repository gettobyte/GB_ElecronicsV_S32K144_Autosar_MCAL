Trgmux_Ip_SetLock (const uint32 LogicTrigger)
{
  Trgmux_Ip_StatusType Status;
  struct TRGMUX_Type * LocTrgmuxBase;
  uint32 LocOutput;
  uint32 LocHwInst;
  const struct Trgmux_Ip_InitType * g_pxTrgmuxInit.2_1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  unsigned char _3;
  const struct Trgmux_Ip_InitType * g_pxTrgmuxInit.3_4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  _Bool _7;
  Trgmux_Ip_StatusType _21;

  <bb 2> :
  # DEBUG BEGIN_STMT
  g_pxTrgmuxInit.2_1 = g_pxTrgmuxInit;
  _2 = g_pxTrgmuxInit.2_1->paxLogicTrigger[LogicTrigger_11(D)];
  _3 = _2->HwInstId;
  LocHwInst_12 = (uint32) _3;
  # DEBUG LocHwInst => LocHwInst_12
  # DEBUG BEGIN_STMT
  g_pxTrgmuxInit.3_4 = g_pxTrgmuxInit;
  _5 = g_pxTrgmuxInit.3_4->paxLogicTrigger[LogicTrigger_11(D)];
  _6 = _5->Output;
  LocOutput_13 = (uint32) _6;
  # DEBUG LocOutput => LocOutput_13
  # DEBUG BEGIN_STMT
  LocTrgmuxBase_14 = 1074147328B;
  # DEBUG LocTrgmuxBase => LocTrgmuxBase_14
  # DEBUG BEGIN_STMT
  Status_15 = 0;
  # DEBUG Status => Status_15
  # DEBUG BEGIN_STMT
  _7 = hwAcc_GetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_17 = 1;
  # DEBUG Status => Status_17

  <bb 4> :
  # Status_8 = PHI <Status_15(2), Status_17(3)>
  # DEBUG Status => Status_8
  # DEBUG BEGIN_STMT
  if (Status_8 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_21 ();
  # DEBUG BEGIN_STMT
  hwAcc_SetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  # DEBUG BEGIN_STMT
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_21 ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _21 = Status_8;
  return _21;

}


Trgmux_Ip_SetInput (const uint32 LogicTrigger, const uint32 Input)
{
  Trgmux_Ip_StatusType Status;
  struct TRGMUX_Type * LocTrgmuxBase;
  uint32 LocOutput;
  uint32 LocHwInst;
  const struct Trgmux_Ip_InitType * g_pxTrgmuxInit.0_1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  unsigned char _3;
  const struct Trgmux_Ip_InitType * g_pxTrgmuxInit.1_4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  _Bool _7;
  Trgmux_Ip_StatusType _22;

  <bb 2> :
  # DEBUG BEGIN_STMT
  g_pxTrgmuxInit.0_1 = g_pxTrgmuxInit;
  _2 = g_pxTrgmuxInit.0_1->paxLogicTrigger[LogicTrigger_11(D)];
  _3 = _2->HwInstId;
  LocHwInst_12 = (uint32) _3;
  # DEBUG LocHwInst => LocHwInst_12
  # DEBUG BEGIN_STMT
  g_pxTrgmuxInit.1_4 = g_pxTrgmuxInit;
  _5 = g_pxTrgmuxInit.1_4->paxLogicTrigger[LogicTrigger_11(D)];
  _6 = _5->Output;
  LocOutput_13 = (uint32) _6;
  # DEBUG LocOutput => LocOutput_13
  # DEBUG BEGIN_STMT
  LocTrgmuxBase_14 = 1074147328B;
  # DEBUG LocTrgmuxBase => LocTrgmuxBase_14
  # DEBUG BEGIN_STMT
  Status_15 = 0;
  # DEBUG Status => Status_15
  # DEBUG BEGIN_STMT
  _7 = hwAcc_GetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_17 = 1;
  # DEBUG Status => Status_17

  <bb 4> :
  # Status_8 = PHI <Status_15(2), Status_17(3)>
  # DEBUG Status => Status_8
  # DEBUG BEGIN_STMT
  if (Status_8 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_20 ();
  # DEBUG BEGIN_STMT
  hwAcc_SetInputForOutput (LocTrgmuxBase_14, Input_19(D), LocOutput_13);
  # DEBUG BEGIN_STMT
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_20 ();

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _22 = Status_8;
  return _22;

}


Trgmux_Ip_Init (const struct Trgmux_Ip_InitType * const pxTrgmuxInit)
{
  Trgmux_Ip_StatusType Status;
  boolean LocLock;
  uint8 LocInst;
  uint32 LocOutput;
  uint32 LocInput;
  uint32 LocTriggerIdx;
  struct TRGMUX_Type * LocTrgmuxBase;
  <unnamed type> _1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  const struct Trgmux_Ip_LogicTriggerType * _3;
  unsigned char _4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  int _7;
  const struct Trgmux_Ip_LogicTriggerType * _8;
  const struct Trgmux_Ip_LogicTriggerType * _9;
  unsigned char _10;
  Trgmux_Ip_StatusType _40;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_19 = 0;
  # DEBUG Status => Status_19
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  LocTrgmuxBase_20 = 1074147328B;
  # DEBUG LocTrgmuxBase => LocTrgmuxBase_20
  # DEBUG BEGIN_STMT
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_19 ();
  # DEBUG BEGIN_STMT
  _1 = hwAcc_Init (LocTrgmuxBase_20);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_24 = 1;
  # DEBUG Status => Status_24

  <bb 4> :
  # Status_14 = PHI <Status_19(2), Status_24(3)>
  # DEBUG Status => Status_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Status_14 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  LocTriggerIdx_25 = 0;
  # DEBUG LocTriggerIdx => LocTriggerIdx_25
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  LocInst_34 = _2->HwInstId;
  # DEBUG LocInst => LocInst_34
  # DEBUG BEGIN_STMT
  _3 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  _4 = _3->Output;
  LocOutput_35 = (uint32) _4;
  # DEBUG LocOutput => LocOutput_35
  # DEBUG BEGIN_STMT
  _5 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  _6 = _5->Input;
  LocInput_36 = (uint32) _6;
  # DEBUG LocInput => LocInput_36
  # DEBUG BEGIN_STMT
  _7 = (int) LocInst_34;
  LocTrgmuxBase_37 = 1074147328B;
  # DEBUG LocTrgmuxBase => LocTrgmuxBase_37
  # DEBUG BEGIN_STMT
  hwAcc_SetInputForOutput (LocTrgmuxBase_37, LocInput_36, LocOutput_35);
  # DEBUG BEGIN_STMT
  LocTriggerIdx_39 = LocTriggerIdx_12 + 1;
  # DEBUG LocTriggerIdx => LocTriggerIdx_39

  <bb 7> :
  # LocTrgmuxBase_11 = PHI <LocTrgmuxBase_20(5), LocTrgmuxBase_37(6)>
  # LocTriggerIdx_12 = PHI <LocTriggerIdx_25(5), LocTriggerIdx_39(6)>
  # DEBUG LocTriggerIdx => LocTriggerIdx_12
  # DEBUG LocTrgmuxBase => LocTrgmuxBase_11
  # DEBUG BEGIN_STMT
  if (LocTriggerIdx_12 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  LocTriggerIdx_26 = 0;
  # DEBUG LocTriggerIdx => LocTriggerIdx_26
  goto <bb 12>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _8 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_13];
  LocLock_30 = _8->Lock;
  # DEBUG LocLock => LocLock_30
  # DEBUG BEGIN_STMT
  if (LocLock_30 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  _9 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_13];
  _10 = _9->Output;
  LocOutput_31 = (uint32) _10;
  # DEBUG LocOutput => LocOutput_31
  # DEBUG BEGIN_STMT
  hwAcc_SetLockForOutput (LocTrgmuxBase_11, LocOutput_31);

  <bb 11> :
  # DEBUG BEGIN_STMT
  LocTriggerIdx_33 = LocTriggerIdx_13 + 1;
  # DEBUG LocTriggerIdx => LocTriggerIdx_33

  <bb 12> :
  # LocTriggerIdx_13 = PHI <LocTriggerIdx_26(8), LocTriggerIdx_33(11)>
  # DEBUG LocTriggerIdx => LocTriggerIdx_13
  # DEBUG BEGIN_STMT
  if (LocTriggerIdx_13 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_19 ();
  # DEBUG BEGIN_STMT
  g_pxTrgmuxInit = pxTrgmuxInit_28(D);

  <bb 14> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _40 = Status_14;
  return _40;

}


hwAcc_GetLockForOutput (const struct TRGMUX_Type * const pTrgmux, const uint32 Output)
{
  boolean Status;
  unsigned char _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  boolean _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) Output_8(D);
  _2 = _1 / 4;
  _3 = (int) _2;
  _4 ={v} pTrgmux_10(D)->TRGMUXn[_3];
  _5 = _4 >> 31;
  _6 = _5 & 1;
  if (_6 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Status_12 = 1;
  # DEBUG Status => Status_12
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Status_11 = 0;
  # DEBUG Status => Status_11

  <bb 5> :
  # Status_7 = PHI <Status_12(3), Status_11(4)>
  # DEBUG Status => Status_7
  # DEBUG BEGIN_STMT
  _13 = Status_7;
  return _13;

}


hwAcc_SetLockForOutput (struct TRGMUX_Type * const pTrgmux, const uint32 Output)
{
  unsigned char _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  long unsigned int _8;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) Output_9(D);
  _2 = _1 / 4;
  _3 = (int) _2;
  _4 ={v} pTrgmux_11(D)->TRGMUXn[_3];
  _5 = (unsigned char) Output_9(D);
  _6 = _5 / 4;
  _7 = (int) _6;
  _8 = _4 | 2147483648;
  pTrgmux_11(D)->TRGMUXn[_7] ={v} _8;
  return;

}


hwAcc_SetInputForOutput (struct TRGMUX_Type * const pTrgmux, const uint32 Input, const uint32 Output)
{
  uint32 regValue;
  unsigned char _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char _10;
  unsigned char _11;
  unsigned char _12;
  int _13;
  long unsigned int _14;
  unsigned char _15;
  unsigned char _16;
  int _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = (unsigned char) Output_18(D);
  _2 = _1 / 4;
  _3 = (int) _2;
  regValue_21 ={v} pTrgmux_20(D)->TRGMUXn[_3];
  # DEBUG regValue => regValue_21
  # DEBUG BEGIN_STMT
  _4 = (unsigned char) Output_18(D);
  _5 = (unsigned int) _4;
  _6 = _5 & 3;
  _7 = _6 * 8;
  _8 = 63 << _7;
  _9 = ~_8;
  regValue_22 = regValue_21 & _9;
  # DEBUG regValue => regValue_22
  # DEBUG BEGIN_STMT
  _10 = (unsigned char) Output_18(D);
  _11 = _10 & 3;
  _12 = _11 * 8;
  _13 = (int) _12;
  _14 = Input_23(D) << _13;
  regValue_24 = regValue_22 | _14;
  # DEBUG regValue => regValue_24
  # DEBUG BEGIN_STMT
  _15 = (unsigned char) Output_18(D);
  _16 = _15 / 4;
  _17 = (int) _16;
  pTrgmux_20(D)->TRGMUXn[_17] ={v} regValue_24;
  return;

}


hwAcc_Init (struct TRGMUX_Type * const pTrgmux)
{
  Trgmux_Ip_StatusType Status;
  uint32 regValue;
  uint32 regIdx;
  long unsigned int _1;
  long unsigned int _2;
  Trgmux_Ip_StatusType _11;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Status_8 = 0;
  # DEBUG Status => Status_8
  # DEBUG BEGIN_STMT
  regIdx_9 = 0;
  # DEBUG regIdx => regIdx_9
  goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (Status_5 != 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _1 ={v} pTrgmux_12(D)->TRGMUXn[regIdx_3];
  regValue_13 = _1 & 2147483648;
  # DEBUG regValue => regValue_13
  # DEBUG BEGIN_STMT
  if (regValue_13 == 2147483648)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Status_15 = 1;
  # DEBUG Status => Status_15
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _2 ={v} pTrgmux_12(D)->TRGMUXn[regIdx_3];
  pTrgmux_12(D)->TRGMUXn[regIdx_3] ={v} _2;

  <bb 7> :
  # Status_4 = PHI <Status_5(3), Status_5(6), Status_15(5)>
  # DEBUG Status => Status_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  regIdx_16 = regIdx_3 + 1;
  # DEBUG regIdx => regIdx_16

  <bb 8> :
  # regIdx_3 = PHI <regIdx_9(2), regIdx_16(7)>
  # Status_5 = PHI <Status_8(2), Status_4(7)>
  # DEBUG Status => Status_5
  # DEBUG regIdx => regIdx_3
  # DEBUG BEGIN_STMT
  if (regIdx_3 <= 25)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _11 = Status_5;
  return _11;

}


