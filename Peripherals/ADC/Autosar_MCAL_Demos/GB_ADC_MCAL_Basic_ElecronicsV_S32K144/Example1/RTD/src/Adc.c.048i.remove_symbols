
Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Adc_Ipw_SetClockMode/52 (Adc_Ipw_SetClockMode) @07115460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_SetClockMode/37 
  Calls: 
Adc_Ipw_Calibrate/51 (Adc_Ipw_Calibrate) @071152a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Calibrate/36 
  Calls: 
Adc_Ipw_GetConvData/50 (Adc_Ipw_GetConvData) @071150e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_ReadRawData/35 
  Calls: 
Adc_Ipw_ReadGroup/49 (Adc_Ipw_ReadGroup) @070fa460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_ReadGroup/29 
  Calls: 
Adc_Ipw_StopCurrentConversion/48 (Adc_Ipw_StopCurrentConversion) @070fa2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_StopSwGroupConversion/17 
  Calls: 
Adc_Ipw_StartNormalConversion/47 (Adc_Ipw_StartNormalConversion) @070d4d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_UpdateSwQueueIndexNoInt/21 Adc_UpdateStatusStopConversion/18 Adc_UpdateStatusStartConversion/16 
  Calls: 
SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01/46 (SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01) @070d4c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_UpdateStatusStartConversion/16 Adc_UpdateStatusStartConversion/16 
  Calls: 
SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_01/45 (SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_01) @070d4a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_UpdateStatusStartConversion/16 
  Calls: 
Adc_Ipw_DeInit/44 (Adc_Ipw_DeInit) @070d4380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_DeInit/26 
  Calls: 
Det_ReportRuntimeError/43 (Det_ReportRuntimeError) @070d4000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_ReportDetRuntimeError/4 
  Calls: 
Adc_Ipw_Init/42 (Adc_Ipw_Init) @0703ed20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Init/24 
  Calls: 
Adc_GetCoreID/41 (Adc_GetCoreID) @0703ec40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_SetChannel/38 Adc_SetClockMode/37 Adc_Calibrate/36 Adc_ReadRawData/35 Adc_GetStreamLastPointer/33 Adc_ReadGroup/29 Adc_StopGroupConversion/28 Adc_StartGroupConversion/27 Adc_DeInit/26 Adc_SetupResultBuffer/25 Adc_Init/24 
  Calls: 
SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_00/40 (SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_00) @0703ea80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_RemoveFromQueue/15 
  Calls: 
SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_00/39 (SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_00) @0703e8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_RemoveFromQueue/15 
  Calls: 
Adc_SetChannel/38 (Adc_SetChannel) @0703e460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_GetCoreID/41 
Adc_SetClockMode/37 (Adc_SetClockMode) @0703e1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_SetClockMode/52 Adc_ValidateCheckGroupNotConversion/7 Adc_ValidateNotBusyNoQueue/5 Adc_GetCoreID/41 
Adc_Calibrate/36 (Adc_Calibrate) @07030d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_ReportDetRuntimeError/4 Adc_Ipw_Calibrate/51 Adc_ValidateCheckGroupNotConversion/7 Adc_ValidateNotBusyNoQueue/5 Adc_GetCoreID/41 
Adc_ReadRawData/35 (Adc_ReadRawData) @070307e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_GetConvData/50 Adc_GetCoreID/41 
Adc_GetVersionInfo/34 (Adc_GetVersionInfo) @070302a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Adc_GetStreamLastPointer/33 (Adc_GetStreamLastPointer) @07030ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (read)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_UpdateStatusAfterGetStream/23 Adc_ValidateStateNotIdle/11 Adc_GetCoreID/41 
Adc_GetGroupStatus/32 (Adc_GetGroupStatus) @07030c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aGroupStatus/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Adc_DisableGroupNotification/31 (Adc_DisableGroupNotification) @070309a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aGroupStatus/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Adc_EnableGroupNotification/30 (Adc_EnableGroupNotification) @07030700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aGroupStatus/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Adc_ReadGroup/29 (Adc_ReadGroup) @07030460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_UpdateStatusReadGroup/19 Adc_Ipw_ReadGroup/49 Adc_ValidateStateNotIdle/11 Adc_GetCoreID/41 
Adc_StopGroupConversion/28 (Adc_StopGroupConversion) @070301c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_UpdateStatusStopConversion/18 Adc_ValidateStateNotIdle/11 Adc_GetCoreID/41 
Adc_StartGroupConversion/27 (Adc_StartGroupConversion) @0701dd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_UpdateStatusStartConversion/16 Adc_ValidateStateStartGroupConvNotBusy/10 Adc_GetCoreID/41 
Adc_DeInit/26 (Adc_DeInit) @0701d7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aUnitStatus/2 (write)Adc_pCfgPtr/0 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_ReportDetRuntimeError/4 Adc_Ipw_DeInit/44 Adc_ValidateDeInitNotBusy/8 Adc_CheckCurrentCoreId/14 Adc_GetCoreID/41 
Adc_SetupResultBuffer/25 (Adc_SetupResultBuffer) @0701d2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_ValidateSetupBufferNotBusy/9 Adc_GetCoreID/41 
Adc_Init/24 (Adc_Init) @0701dee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/0 (write)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_ReportDetRuntimeError/4 Adc_Ipw_Init/42 Adc_InitGroupsStatus/12 Adc_InitUnitStatus/13 Adc_CheckCurrentCoreId/14 Adc_GetCoreID/41 
Adc_UpdateStatusAfterGetStream/23 (Adc_UpdateStatusAfterGetStream) @0701dc40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_GetStreamLastPointer/33 
  Calls: 
Adc_UpdateStatusReadGroupInt/22 (Adc_UpdateStatusReadGroupInt) @0701d9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_UpdateStatusReadGroup/19 
  Calls: 
Adc_UpdateSwQueueIndexNoInt/21 (Adc_UpdateSwQueueIndexNoInt) @0701d700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_UpdateStatusReadGroupNoInt/20 
  Calls: Adc_Ipw_StartNormalConversion/47 Adc_RemoveFromQueue/15 
Adc_UpdateStatusReadGroupNoInt/20 (Adc_UpdateStatusReadGroupNoInt) @0701d460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_UpdateStatusReadGroup/19 
  Calls: Adc_UpdateSwQueueIndexNoInt/21 
Adc_UpdateStatusReadGroup/19 (Adc_UpdateStatusReadGroup) @0701d1c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_ReadGroup/29 
  Calls: Adc_UpdateStatusReadGroupInt/22 Adc_UpdateStatusReadGroupNoInt/20 
Adc_UpdateStatusStopConversion/18 (Adc_UpdateStatusStopConversion) @06917d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aUnitStatus/2 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_StopGroupConversion/28 
  Calls: Adc_ReportDetRuntimeError/4 Adc_Ipw_StartNormalConversion/47 Adc_StopSwGroupConversion/17 
Adc_StopSwGroupConversion/17 (Adc_StopSwGroupConversion) @069177e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_UpdateStatusStopConversion/18 
  Calls: Adc_RemoveFromQueue/15 Adc_Ipw_StopCurrentConversion/48 
Adc_UpdateStatusStartConversion/16 (Adc_UpdateStatusStartConversion) @069172a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (write)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_StartGroupConversion/27 
  Calls: SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01/46 Adc_Ipw_StartNormalConversion/47 SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01/46 SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_01/45 
Adc_RemoveFromQueue/15 (Adc_RemoveFromQueue) @06917ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (write)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (write)Adc_aUnitStatus/2 (read)Adc_aUnitStatus/2 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_UpdateSwQueueIndexNoInt/21 Adc_StopSwGroupConversion/17 
  Calls: SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_00/40 SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_00/39 
Adc_CheckCurrentCoreId/14 (Adc_CheckCurrentCoreId) @06917c40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_DeInit/26 Adc_Init/24 
  Calls: 
Adc_InitUnitStatus/13 (Adc_InitUnitStatus) @069179a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aUnitStatus/2 (write)Adc_aUnitStatus/2 (write)Adc_aUnitStatus/2 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Init/24 
  Calls: 
Adc_InitGroupsStatus/12 (Adc_InitGroupsStatus) @06917700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_aGroupStatus/1 (write)Adc_pCfgPtr/0 (read)Adc_aRuntimeGroupChannel/3 (write)Adc_pCfgPtr/0 (read)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_pCfgPtr/0 (read)Adc_aRuntimeGroupChannel/3 (write)Adc_aRuntimeGroupChannel/3 (write)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Init/24 
  Calls: 
Adc_ValidateStateNotIdle/11 (Adc_ValidateStateNotIdle) @06917460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (read)Adc_aGroupStatus/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_GetStreamLastPointer/33 Adc_ReadGroup/29 Adc_StopGroupConversion/28 
  Calls: Adc_ReportDetRuntimeError/4 Adc_ReportDetRuntimeError/4 Adc_ReportDetRuntimeError/4 
Adc_ValidateStateStartGroupConvNotBusy/10 (Adc_ValidateStateStartGroupConvNotBusy) @069171c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_StartGroupConversion/27 
  Calls: Adc_ValidateNotBusyNoPrio/6 Adc_ReportDetRuntimeError/4 
Adc_ValidateSetupBufferNotBusy/9 (Adc_ValidateSetupBufferNotBusy) @0690fd20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aGroupStatus/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_SetupResultBuffer/25 
  Calls: Adc_ReportDetRuntimeError/4 
Adc_ValidateDeInitNotBusy/8 (Adc_ValidateDeInitNotBusy) @0690f7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_DeInit/26 
  Calls: Adc_ValidateCheckGroupNotConversion/7 Adc_ValidateNotBusyNoQueue/5 
Adc_ValidateCheckGroupNotConversion/7 (Adc_ValidateCheckGroupNotConversion) @0690fee0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/0 (read)Adc_aGroupStatus/1 (read)Adc_pCfgPtr/0 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_SetClockMode/37 Adc_Calibrate/36 Adc_ValidateDeInitNotBusy/8 
  Calls: Adc_ReportDetRuntimeError/4 
Adc_ValidateNotBusyNoPrio/6 (Adc_ValidateNotBusyNoPrio) @0690fc40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aGroupStatus/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_ValidateStateStartGroupConvNotBusy/10 
  Calls: Adc_ReportDetRuntimeError/4 Adc_ReportDetRuntimeError/4 
Adc_ValidateNotBusyNoQueue/5 (Adc_ValidateNotBusyNoQueue) @0690f9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aUnitStatus/2 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_SetClockMode/37 Adc_Calibrate/36 Adc_ValidateDeInitNotBusy/8 
  Calls: Adc_ReportDetRuntimeError/4 
Adc_ReportDetRuntimeError/4 (Adc_ReportDetRuntimeError) @0690f700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Calibrate/36 Adc_DeInit/26 Adc_Init/24 Adc_UpdateStatusStopConversion/18 Adc_ValidateStateNotIdle/11 Adc_ValidateStateNotIdle/11 Adc_ValidateStateNotIdle/11 Adc_ValidateStateStartGroupConvNotBusy/10 Adc_ValidateNotBusyNoPrio/6 Adc_ValidateNotBusyNoPrio/6 Adc_ValidateCheckGroupNotConversion/7 Adc_ValidateNotBusyNoQueue/5 Adc_ValidateSetupBufferNotBusy/9 
  Calls: Det_ReportRuntimeError/43 
Adc_aRuntimeGroupChannel/3 (Adc_aRuntimeGroupChannel) @06902a20
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_UpdateStatusStopConversion/18 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)Adc_SetChannel/38 (write)
  Availability: available
  Varpool flags:
Adc_aUnitStatus/2 (Adc_aUnitStatus) @069029d8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Adc_UpdateStatusStartConversion/16 (read)Adc_UpdateStatusStartConversion/16 (read)Adc_RemoveFromQueue/15 (read)Adc_InitUnitStatus/13 (write)Adc_InitUnitStatus/13 (write)Adc_ValidateNotBusyNoQueue/5 (read)Adc_RemoveFromQueue/15 (write)Adc_RemoveFromQueue/15 (read)Adc_StopSwGroupConversion/17 (read)Adc_UpdateStatusStopConversion/18 (read)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_UpdateStatusStartConversion/16 (read)Adc_UpdateStatusStartConversion/16 (write)Adc_UpdateStatusStartConversion/16 (read)Adc_StopSwGroupConversion/17 (read)Adc_StopSwGroupConversion/17 (read)Adc_InitUnitStatus/13 (write)Adc_RemoveFromQueue/15 (write)Adc_UpdateStatusStartConversion/16 (write)Adc_RemoveFromQueue/15 (read)Adc_RemoveFromQueue/15 (write)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_DeInit/26 (write)
  Availability: available
  Varpool flags:
Adc_aGroupStatus/1 (Adc_aGroupStatus) @06902990
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Adc_DisableGroupNotification/31 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_InitGroupsStatus/12 (write)Adc_UpdateStatusReadGroupInt/22 (write)Adc_UpdateStatusAfterGetStream/23 (write)Adc_ValidateSetupBufferNotBusy/9 (read)Adc_UpdateStatusAfterGetStream/23 (write)Adc_ValidateNotBusyNoPrio/6 (read)Adc_UpdateStatusReadGroupInt/22 (write)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusReadGroupInt/22 (write)Adc_ValidateCheckGroupNotConversion/7 (read)Adc_InitGroupsStatus/12 (write)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusAfterGetStream/23 (write)Adc_UpdateStatusAfterGetStream/23 (read)Adc_ValidateStateNotIdle/11 (read)Adc_ValidateStateNotIdle/11 (read)Adc_ValidateStateNotIdle/11 (read)Adc_ValidateStateNotIdle/11 (read)Adc_UpdateStatusStartConversion/16 (write)Adc_UpdateStatusStartConversion/16 (write)Adc_UpdateStatusStopConversion/18 (read)Adc_UpdateStatusReadGroupNoInt/20 (write)Adc_UpdateStatusReadGroupNoInt/20 (write)Adc_UpdateStatusReadGroupNoInt/20 (write)Adc_GetGroupStatus/32 (read)Adc_UpdateStatusStopConversion/18 (write)Adc_UpdateStatusReadGroupNoInt/20 (write)Adc_EnableGroupNotification/30 (write)Adc_UpdateStatusAfterGetStream/23 (read)Adc_UpdateStatusStopConversion/18 (write)Adc_UpdateStatusStopConversion/18 (write)Adc_UpdateStatusStopConversion/18 (write)Adc_UpdateStatusStopConversion/18 (write)Adc_GetStreamLastPointer/33 (read)Adc_GetStreamLastPointer/33 (read)Adc_GetStreamLastPointer/33 (read)Adc_GetStreamLastPointer/33 (read)Adc_GetStreamLastPointer/33 (read)
  Availability: available
  Varpool flags:
Adc_pCfgPtr/0 (Adc_pCfgPtr) @06902900
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Adc_UpdateStatusReadGroupNoInt/20 (read)Adc_UpdateStatusReadGroupNoInt/20 (read)Adc_SetClockMode/37 (read)Adc_InitUnitStatus/13 (read)Adc_StopGroupConversion/28 (read)Adc_DeInit/26 (read)Adc_StopGroupConversion/28 (read)Adc_GetStreamLastPointer/33 (read)Adc_UpdateStatusReadGroup/19 (read)Adc_UpdateStatusReadGroup/19 (read)Adc_UpdateStatusStopConversion/18 (read)Adc_Init/24 (write)Adc_Init/24 (read)Adc_UpdateStatusAfterGetStream/23 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_SetupResultBuffer/25 (read)Adc_SetupResultBuffer/25 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_UpdateStatusAfterGetStream/23 (read)Adc_ValidateCheckGroupNotConversion/7 (read)Adc_DeInit/26 (read)Adc_DeInit/26 (write)Adc_UpdateStatusAfterGetStream/23 (read)Adc_UpdateStatusAfterGetStream/23 (read)Adc_ValidateCheckGroupNotConversion/7 (read)Adc_ValidateDeInitNotBusy/8 (read)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_UpdateSwQueueIndexNoInt/21 (read)Adc_ValidateStateStartGroupConvNotBusy/10 (read)Adc_ValidateStateStartGroupConvNotBusy/10 (read)Adc_UpdateStatusStopConversion/18 (read)Adc_UpdateStatusStopConversion/18 (read)Adc_ValidateStateStartGroupConvNotBusy/10 (read)Adc_ValidateStateStartGroupConvNotBusy/10 (read)Adc_InitGroupsStatus/12 (read)Adc_UpdateStatusAfterGetStream/23 (read)Adc_UpdateStatusReadGroupNoInt/20 (read)Adc_GetStreamLastPointer/33 (read)Adc_GetStreamLastPointer/33 (read)Adc_InitGroupsStatus/12 (read)Adc_UpdateStatusStopConversion/18 (read)Adc_UpdateStatusReadGroupNoInt/20 (read)Adc_StartGroupConversion/27 (read)Adc_StartGroupConversion/27 (read)Adc_UpdateStatusReadGroupInt/22 (read)Adc_InitGroupsStatus/12 (read)Adc_InitGroupsStatus/12 (read)Adc_InitGroupsStatus/12 (read)Adc_UpdateStatusAfterGetStream/23 (read)Adc_ValidateStateStartGroupConvNotBusy/10 (read)Adc_GetStreamLastPointer/33 (read)Adc_SetChannel/38 (read)Adc_SetChannel/38 (read)Adc_SetChannel/38 (read)
  Availability: available
  Varpool flags:
Adc_SetChannel (const Adc_GroupType Group, const Adc_GroupDefType * Channel, const uint16 * Delays, const uint32 ChannelUpdateMask, const Adc_ChannelIndexType NumberOfChannel)
{
  Adc_GroupType GroupIndex;
  Adc_HwUnitType LogicalHwUnitId;
  volatile uint32 u32CoreId;
  long unsigned int _1;
  int _2;
  int _3;
  int _4;
  long unsigned int u32CoreId.50_5;
  const struct Adc_ConfigType * _6;
  const uint16 * _7;
  unsigned int _8;
  unsigned int _9;
  const uint16 * _10;
  long unsigned int u32CoreId.51_11;
  const struct Adc_ConfigType * _12;
  const struct Adc_GroupConfigurationType * _13;
  unsigned int _14;
  unsigned int _15;
  const struct Adc_GroupConfigurationType * _16;
  long unsigned int u32CoreId.52_17;
  const struct Adc_ConfigType * _18;
  const struct Adc_Ipw_Config * _19;
  int _20;
  const struct Adc_ChannelLimitCheckingType * _21;
  short unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  const struct Adc_ChannelLimitCheckingType * _25;
  int _26;
  _Bool _27;
  int _28;
  int _29;
  int _30;

  <bb 2> :
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  LogicalHwUnitId_35 = 0;
  GroupIndex_36 = 0;
  _2 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_2].pChannel = Channel_38(D);
  _3 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_3].ChannelCount = NumberOfChannel_40(D);
  _4 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_4].bRuntimeUpdated = 1;
  u32CoreId.50_5 ={v} u32CoreId;
  _6 = Adc_pCfgPtr[u32CoreId.50_5];
  _7 = _6->pGroupIdToIndexMap;
  _8 = (unsigned int) Group_37(D);
  _9 = _8 * 2;
  _10 = _7 + _9;
  GroupIndex_43 = *_10;
  u32CoreId.51_11 ={v} u32CoreId;
  _12 = Adc_pCfgPtr[u32CoreId.51_11];
  _13 = _12->pGroups;
  _14 = (unsigned int) GroupIndex_43;
  _15 = _14 * 60;
  _16 = _13 + _15;
  LogicalHwUnitId_44 = _16->AdcLogicalUnitId;
  u32CoreId.52_17 ={v} u32CoreId;
  _18 = Adc_pCfgPtr[u32CoreId.52_17];
  _19 = _18->pAdcIpwConfig;
  _20 = (int) LogicalHwUnitId_44;
  _21 = _19->ChannelLimitCheckingConfigs[_20];
  _22 = *Channel_38(D);
  _23 = (unsigned int) _22;
  _24 = _23 * 12;
  _25 = _21 + _24;
  _26 = (int) Group_37(D);
  _27 = _25->bChannelLimitCheckEnabled;
  Adc_aRuntimeGroupChannel[_26].bAdcRuntimeGroupLimitcheck = _27;
  _28 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_28].pu16Delays = Delays_46(D);
  if (NumberOfChannel_40(D) <= 16)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _29 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_29].u32Mask = ChannelUpdateMask_49(D);
  goto <bb 5>; [INV]

  <bb 4> :
  _30 = (int) Group_37(D);
  Adc_aRuntimeGroupChannel[_30].u32Mask = 4294967295;

  <bb 5> :
  return;

}


Adc_SetClockMode (Adc_SelectPrescalerType Prescaler)
{
  Std_ReturnType ErrorFound;
  Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType Ret;
  volatile uint32 u32CoreId;
  Std_ReturnType D.7005;
  long unsigned int _1;
  long unsigned int u32CoreId.46_2;
  const struct Adc_ConfigType * _3;
  const struct Adc_Ipw_Config * _4;
  int _5;
  unsigned char _6;
  unsigned char LogicalHwUnitId.47_7;
  long unsigned int u32CoreId.48_8;
  unsigned char _9;
  long unsigned int u32CoreId.49_10;
  Std_ReturnType _33;

  <bb 2> :
  Ret_20 = 1;
  ErrorFound_21 = 0;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  LogicalHwUnitId_25 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  u32CoreId.46_2 ={v} u32CoreId;
  _3 = Adc_pCfgPtr[u32CoreId.46_2];
  _4 = _3->pAdcIpwConfig;
  _5 = (int) LogicalHwUnitId_12;
  _6 = _4->Mapping.au8Adc_HwUnit[_5];
  if (_6 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  ErrorFound_27 = Adc_ValidateNotBusyNoQueue (LogicalHwUnitId_12, 37);
  if (ErrorFound_27 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
  # ErrorFound_13 = PHI <ErrorFound_14(3), ErrorFound_27(4)>
  LogicalHwUnitId.47_7 = LogicalHwUnitId_12;
  LogicalHwUnitId_28 = LogicalHwUnitId.47_7 + 1;

  <bb 7> :
  # LogicalHwUnitId_12 = PHI <LogicalHwUnitId_25(2), LogicalHwUnitId_28(6)>
  # ErrorFound_14 = PHI <ErrorFound_21(2), ErrorFound_13(6)>
  if (LogicalHwUnitId_12 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # ErrorFound_15 = PHI <ErrorFound_27(5), ErrorFound_14(7)>
  if (ErrorFound_15 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  u32CoreId.48_8 ={v} u32CoreId;
  _9 = Adc_ValidateCheckGroupNotConversion (37, u32CoreId.48_8);
  if (_9 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  u32CoreId.49_10 ={v} u32CoreId;
  Ret_32 = Adc_Ipw_SetClockMode (Prescaler_30(D), u32CoreId.49_10);

  <bb 11> :
  # Ret_11 = PHI <Ret_20(8), Ret_20(9), Ret_32(10)>
  _33 = Ret_11;

  <bb 12> :
<L11>:
  return _33;

}


Adc_Calibrate (Adc_HwUnitType Unit, struct Adc_CalibrationStatusType * pStatus)
{
  boolean isCalibrateCalled;
  volatile uint32 u32CoreId;
  long unsigned int _1;
  unsigned char _2;
  long unsigned int u32CoreId.44_3;
  unsigned char _4;
  long unsigned int u32CoreId.45_5;
  unsigned char _6;

  <bb 2> :
  isCalibrateCalled_10 = 0;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  pStatus_14(D)->Adc_UnitSelfTestStatus = 1;
  _2 = Adc_ValidateNotBusyNoQueue (Unit_16(D), 41);
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  u32CoreId.44_3 ={v} u32CoreId;
  _4 = Adc_ValidateCheckGroupNotConversion (41, u32CoreId.44_3);
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  u32CoreId.45_5 ={v} u32CoreId;
  Adc_Ipw_Calibrate (Unit_16(D), pStatus_14(D), u32CoreId.45_5);
  isCalibrateCalled_20 = 1;

  <bb 5> :
  # isCalibrateCalled_7 = PHI <isCalibrateCalled_10(2), isCalibrateCalled_10(3), isCalibrateCalled_20(4)>
  if (isCalibrateCalled_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _6 = pStatus_14(D)->Adc_UnitSelfTestStatus;
  if (_6 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Adc_ReportDetRuntimeError (41, 43);

  <bb 8> :
  return;

}


Adc_ReadRawData (Adc_HwUnitType Unit, const Adc_ChannelType * const ChansArray, uint8 NumItems, Adc_ValueGroupType * const DataBufferPtr)
{
  Std_ReturnType Status;
  const uint32 u32CoreId;
  uint8 i;
  long unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  const Adc_ChannelType * _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  const Adc_ChannelType * _8;
  short unsigned int _9;
  long unsigned int u32CoreId.42_10;
  unsigned int _11;
  unsigned int _12;
  Adc_ValueGroupType * _13;
  unsigned char i.43_14;

  <bb 2> :
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  i_21 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  Status_23 = 0;
  _2 = (unsigned int) i_15;
  _3 = _2 * 2;
  _4 = ChansArray_24(D) + _3;
  _5 = *_4;
  if (_5 <= 29)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _6 = (unsigned int) i_15;
  _7 = _6 * 2;
  _8 = ChansArray_24(D) + _7;
  _9 = *_8;
  u32CoreId.42_10 ={v} u32CoreId;
  _11 = (unsigned int) i_15;
  _12 = _11 * 2;
  _13 = DataBufferPtr_25(D) + _12;
  Status_28 = Adc_Ipw_GetConvData (Unit_26(D), _9, u32CoreId.42_10, _13);

  <bb 5> :
  i.43_14 = i_15;
  i_29 = i.43_14 + 1;

  <bb 6> :
  # i_15 = PHI <i_21(2), i_29(5)>
  if (i_15 < NumItems_22(D))
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Adc_GetVersionInfo (struct Std_VersionInfoType * versioninfo)
{
  <bb 2> :
  versioninfo_2(D)->vendorID = 43;
  versioninfo_2(D)->moduleID = 123;
  versioninfo_2(D)->sw_major_version = 1;
  versioninfo_2(D)->sw_minor_version = 0;
  versioninfo_2(D)->sw_patch_version = 0;
  return;

}


Adc_GetStreamLastPointer (Adc_GroupType Group, Adc_ValueGroupType * * PtrToSamplePtr)
{
  Adc_StreamNumSampleType ResultIndex;
  Adc_StreamNumSampleType NumberOfResults;
  const struct Adc_GroupConfigurationType * pGroupPtr;
  Adc_GroupType GroupIndex;
  volatile uint32 u32CoreId;
  Adc_StreamNumSampleType D.6973;
  long unsigned int _1;
  long unsigned int u32CoreId.36_2;
  const struct Adc_ConfigType * _3;
  const struct Adc_GroupConfigurationType * _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int u32CoreId.37_7;
  unsigned char _8;
  int _9;
  <unnamed type> _10;
  int _11;
  <unnamed type> _12;
  long unsigned int u32CoreId.38_13;
  const struct Adc_ConfigType * _14;
  const uint16 * _15;
  unsigned int _16;
  unsigned int _17;
  const uint16 * _18;
  int _19;
  short unsigned int _20;
  long unsigned int u32CoreId.39_21;
  const struct Adc_ConfigType * _22;
  const struct Adc_GroupConfigurationType * _23;
  unsigned int _24;
  unsigned int _25;
  const struct Adc_GroupConfigurationType * _26;
  short unsigned int _27;
  long unsigned int u32CoreId.40_28;
  const struct Adc_ConfigType * _29;
  const struct Adc_GroupConfigurationType * _30;
  unsigned int _31;
  unsigned int _32;
  const struct Adc_GroupConfigurationType * _33;
  int _34;
  short unsigned int _35;
  int _36;
  Adc_ValueGroupType * * _37;
  unsigned int _38;
  unsigned int _39;
  Adc_ValueGroupType * * _40;
  Adc_ValueGroupType * _41;
  unsigned int _42;
  unsigned int _43;
  Adc_ValueGroupType * _44;
  long unsigned int u32CoreId.41_45;
  Adc_StreamNumSampleType _69;

  <bb 2> :
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  GroupIndex_53 = 0;
  NumberOfResults_54 = 0;
  ResultIndex_55 = 0;
  u32CoreId.36_2 ={v} u32CoreId;
  _3 = Adc_pCfgPtr[u32CoreId.36_2];
  _4 = _3->pGroups;
  _5 = (unsigned int) GroupIndex_53;
  _6 = _5 * 60;
  pGroupPtr_56 = _4 + _6;
  u32CoreId.37_7 ={v} u32CoreId;
  _8 = Adc_ValidateStateNotIdle (11, Group_57(D), u32CoreId.37_7);
  if (_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  *PtrToSamplePtr_59(D) = 0B;
  _9 = (int) Group_57(D);
  _10 ={v} Adc_aGroupStatus[_9].eConversion;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  _11 = (int) Group_57(D);
  _12 ={v} Adc_aGroupStatus[_11].eConversion;
  if (_12 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  u32CoreId.38_13 ={v} u32CoreId;
  _14 = Adc_pCfgPtr[u32CoreId.38_13];
  _15 = _14->pGroupIdToIndexMap;
  _16 = (unsigned int) Group_57(D);
  _17 = _16 * 2;
  _18 = _15 + _17;
  GroupIndex_62 = *_18;
  _19 = (int) Group_57(D);
  _20 ={v} Adc_aGroupStatus[_19].ResultIndex;
  if (_20 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  u32CoreId.39_21 ={v} u32CoreId;
  _22 = Adc_pCfgPtr[u32CoreId.39_21];
  _23 = _22->pGroups;
  _24 = (unsigned int) GroupIndex_62;
  _25 = _24 * 60;
  _26 = _23 + _25;
  _27 = _26->NumSamples;
  ResultIndex_65 = _27 + 65535;
  u32CoreId.40_28 ={v} u32CoreId;
  _29 = Adc_pCfgPtr[u32CoreId.40_28];
  _30 = _29->pGroups;
  _31 = (unsigned int) GroupIndex_62;
  _32 = _31 * 60;
  _33 = _30 + _32;
  NumberOfResults_66 = _33->NumSamples;
  goto <bb 8>; [INV]

  <bb 7> :
  _34 = (int) Group_57(D);
  _35 ={v} Adc_aGroupStatus[_34].ResultIndex;
  ResultIndex_63 = _35 + 65535;
  _36 = (int) Group_57(D);
  NumberOfResults_64 ={v} Adc_aGroupStatus[_36].ResultIndex;

  <bb 8> :
  # NumberOfResults_46 = PHI <NumberOfResults_66(6), NumberOfResults_64(7)>
  # ResultIndex_48 = PHI <ResultIndex_65(6), ResultIndex_63(7)>
  _37 = pGroupPtr_56->pResultsBufferPtr;
  _38 = (unsigned int) Group_57(D);
  _39 = _38 * 4;
  _40 = _37 + _39;
  _41 = *_40;
  _42 = (unsigned int) ResultIndex_48;
  _43 = _42 * 2;
  _44 = _41 + _43;
  *PtrToSamplePtr_59(D) = _44;
  u32CoreId.41_45 ={v} u32CoreId;
  Adc_UpdateStatusAfterGetStream (Group_57(D), u32CoreId.41_45);
  goto <bb 10>; [INV]

  <bb 9> :
  *PtrToSamplePtr_59(D) = 0B;

  <bb 10> :
  # NumberOfResults_47 = PHI <NumberOfResults_54(4), NumberOfResults_54(9), NumberOfResults_54(3), NumberOfResults_46(8)>
  _69 = NumberOfResults_47;

  <bb 11> :
<L10>:
  return _69;

}


Adc_GetGroupStatus (Adc_GroupType Group)
{
  Adc_StatusType eTempReturn;
  Adc_StatusType D.6961;
  int _1;
  Adc_StatusType _6;

  <bb 2> :
  eTempReturn_2 = 0;
  _1 = (int) Group_3(D);
  eTempReturn_5 ={v} Adc_aGroupStatus[_1].eConversion;
  _6 = eTempReturn_5;

  <bb 3> :
<L0>:
  return _6;

}


Adc_DisableGroupNotification (Adc_GroupType Group)
{
  int _1;

  <bb 2> :
  _1 = (int) Group_2(D);
  Adc_aGroupStatus[_1].eNotification = 0;
  return;

}


Adc_EnableGroupNotification (Adc_GroupType Group)
{
  int _1;

  <bb 2> :
  _1 = (int) Group_2(D);
  Adc_aGroupStatus[_1].eNotification = 1;
  return;

}


Adc_ReadGroup (Adc_GroupType Group, Adc_ValueGroupType * DataBufferPtr)
{
  boolean bFlag;
  Std_ReturnType GroupRet;
  volatile uint32 u32CoreId;
  Std_ReturnType D.6923;
  long unsigned int _1;
  long unsigned int u32CoreId.30_2;
  unsigned char _3;
  long unsigned int u32CoreId.31_4;
  _Bool bFlag.32_5;
  _Bool _6;
  _Bool bFlag.33_7;
  long unsigned int u32CoreId.34_8;
  Std_ReturnType _22;

  <bb 2> :
  GroupRet_11 = 1;
  bFlag = 1;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreId.30_2 ={v} u32CoreId;
  _3 = Adc_ValidateStateNotIdle (4, Group_16(D), u32CoreId.30_2);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  u32CoreId.31_4 ={v} u32CoreId;
  GroupRet_20 = Adc_Ipw_ReadGroup (Group_16(D), DataBufferPtr_18(D), &bFlag, u32CoreId.31_4);
  if (GroupRet_20 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  bFlag.32_5 = bFlag;
  _6 = ~bFlag.32_5;
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  bFlag.33_7 = bFlag;
  u32CoreId.34_8 ={v} u32CoreId;
  Adc_UpdateStatusReadGroup (Group_16(D), bFlag.33_7, u32CoreId.34_8);

  <bb 6> :
  # GroupRet_9 = PHI <GroupRet_11(2), GroupRet_20(4), GroupRet_20(5)>
  _22 = GroupRet_9;
  bFlag ={v} {CLOBBER};

  <bb 7> :
<L6>:
  return _22;

}


Adc_StopGroupConversion (Adc_GroupType Group)
{
  Adc_GroupType GroupIndex;
  volatile uint32 u32CoreId;
  Adc_HwUnitType LogicalHwUnitId;
  long unsigned int _1;
  long unsigned int u32CoreId.24_2;
  unsigned char _3;
  long unsigned int u32CoreId.25_4;
  const struct Adc_ConfigType * _5;
  const uint16 * _6;
  unsigned int _7;
  unsigned int _8;
  const uint16 * _9;
  long unsigned int u32CoreId.26_10;
  const struct Adc_ConfigType * _11;
  const struct Adc_GroupConfigurationType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Adc_GroupConfigurationType * _15;
  long unsigned int u32CoreId.27_16;

  <bb 2> :
  LogicalHwUnitId_18 = 0;
  GroupIndex_19 = 0;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreId.24_2 ={v} u32CoreId;
  _3 = Adc_ValidateStateNotIdle (3, Group_23(D), u32CoreId.24_2);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32CoreId.25_4 ={v} u32CoreId;
  _5 = Adc_pCfgPtr[u32CoreId.25_4];
  _6 = _5->pGroupIdToIndexMap;
  _7 = (unsigned int) Group_23(D);
  _8 = _7 * 2;
  _9 = _6 + _8;
  GroupIndex_25 = *_9;
  u32CoreId.26_10 ={v} u32CoreId;
  _11 = Adc_pCfgPtr[u32CoreId.26_10];
  _12 = _11->pGroups;
  _13 = (unsigned int) GroupIndex_25;
  _14 = _13 * 60;
  _15 = _12 + _14;
  LogicalHwUnitId_26 = _15->AdcLogicalUnitId;
  u32CoreId.27_16 ={v} u32CoreId;
  Adc_UpdateStatusStopConversion (Group_23(D), LogicalHwUnitId_26, u32CoreId.27_16);

  <bb 4> :
  return;

}


Adc_StartGroupConversion (Adc_GroupType Group)
{
  Adc_HwUnitType LogicalHwUnitId;
  Adc_GroupType GroupIndex;
  volatile uint32 u32CoreId;
  long unsigned int _1;
  long unsigned int u32CoreId.20_2;
  const struct Adc_ConfigType * _3;
  const uint16 * _4;
  unsigned int _5;
  unsigned int _6;
  const uint16 * _7;
  long unsigned int u32CoreId.21_8;
  unsigned char _9;
  long unsigned int u32CoreId.22_10;
  const struct Adc_ConfigType * _11;
  const struct Adc_GroupConfigurationType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Adc_GroupConfigurationType * _15;
  long unsigned int u32CoreId.23_16;

  <bb 2> :
  GroupIndex_18 = 0;
  LogicalHwUnitId_19 = 0;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreId.20_2 ={v} u32CoreId;
  _3 = Adc_pCfgPtr[u32CoreId.20_2];
  _4 = _3->pGroupIdToIndexMap;
  _5 = (unsigned int) Group_23(D);
  _6 = _5 * 2;
  _7 = _4 + _6;
  GroupIndex_24 = *_7;
  u32CoreId.21_8 ={v} u32CoreId;
  _9 = Adc_ValidateStateStartGroupConvNotBusy (Group_23(D), u32CoreId.21_8);
  if (_9 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32CoreId.22_10 ={v} u32CoreId;
  _11 = Adc_pCfgPtr[u32CoreId.22_10];
  _12 = _11->pGroups;
  _13 = (unsigned int) GroupIndex_24;
  _14 = _13 * 60;
  _15 = _12 + _14;
  LogicalHwUnitId_26 = _15->AdcLogicalUnitId;
  u32CoreId.23_16 ={v} u32CoreId;
  Adc_UpdateStatusStartConversion (Group_23(D), LogicalHwUnitId_26, u32CoreId.23_16);

  <bb 4> :
  return;

}


Adc_DeInit ()
{
  Std_ReturnType ValidStatus;
  Std_ReturnType TempReturn;
  uint32 u32CoreIdTemp;
  Std_ReturnType ValidCoreId;
  Adc_HwUnitType LogicalHwUnitId;
  volatile uint32 u32CoreId;
  long unsigned int _1;
  long unsigned int u32CoreId.12_2;
  const struct Adc_ConfigType * _3;
  long unsigned int u32CoreId.13_4;
  long unsigned int u32CoreId.14_5;
  long unsigned int u32CoreId.15_6;
  const struct Adc_ConfigType * _7;
  const struct Adc_Ipw_Config * _8;
  int _9;
  unsigned char _10;
  int _11;
  unsigned char LogicalHwUnitId.16_12;
  long unsigned int u32CoreId.17_13;

  <bb 2> :
  LogicalHwUnitId_19 = 0;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreIdTemp_23 ={v} u32CoreId;
  u32CoreId.12_2 ={v} u32CoreId;
  _3 = Adc_pCfgPtr[u32CoreId.12_2];
  ValidCoreId_25 = Adc_CheckCurrentCoreId (_3, u32CoreIdTemp_23);
  if (ValidCoreId_25 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  u32CoreId.13_4 ={v} u32CoreId;
  ValidStatus_27 = Adc_ValidateDeInitNotBusy (u32CoreId.13_4);
  if (ValidStatus_27 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  u32CoreId.14_5 ={v} u32CoreId;
  TempReturn_29 = Adc_Ipw_DeInit (u32CoreId.14_5);
  if (TempReturn_29 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Adc_ReportDetRuntimeError (1, 43);

  <bb 6> :
  LogicalHwUnitId_31 = 0;
  goto <bb 10>; [INV]

  <bb 7> :
  u32CoreId.15_6 ={v} u32CoreId;
  _7 = Adc_pCfgPtr[u32CoreId.15_6];
  _8 = _7->pAdcIpwConfig;
  _9 = (int) LogicalHwUnitId_14;
  _10 = _8->Mapping.au8Adc_HwUnit[_9];
  if (_10 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _11 = (int) LogicalHwUnitId_14;
  Adc_aUnitStatus[_11].u8Sc1Used = 0;

  <bb 9> :
  LogicalHwUnitId.16_12 = LogicalHwUnitId_14;
  LogicalHwUnitId_34 = LogicalHwUnitId.16_12 + 1;

  <bb 10> :
  # LogicalHwUnitId_14 = PHI <LogicalHwUnitId_31(6), LogicalHwUnitId_34(9)>
  if (LogicalHwUnitId_14 <= 1)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  u32CoreId.17_13 ={v} u32CoreId;
  Adc_pCfgPtr[u32CoreId.17_13] = 0B;

  <bb 12> :
  return;

}


Adc_SetupResultBuffer (Adc_GroupType Group, Adc_ValueGroupType * const DataBufferPtr)
{
  const struct Adc_GroupConfigurationType * pGroupPtr;
  Std_ReturnType TempReturn;
  Adc_GroupType GroupIndex;
  volatile uint32 u32CoreId;
  Std_ReturnType D.6823;
  long unsigned int _1;
  long unsigned int u32CoreId.10_2;
  const struct Adc_ConfigType * _3;
  const uint16 * _4;
  unsigned int _5;
  unsigned int _6;
  const uint16 * _7;
  unsigned char _8;
  long unsigned int u32CoreId.11_9;
  const struct Adc_ConfigType * _10;
  const struct Adc_GroupConfigurationType * _11;
  unsigned int _12;
  unsigned int _13;
  Adc_ValueGroupType * * _14;
  unsigned int _15;
  unsigned int _16;
  Adc_ValueGroupType * * _17;
  Std_ReturnType _32;

  <bb 2> :
  TempReturn_20 = 1;
  pGroupPtr_21 = 0B;
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreId.10_2 ={v} u32CoreId;
  _3 = Adc_pCfgPtr[u32CoreId.10_2];
  _4 = _3->pGroupIdToIndexMap;
  _5 = (unsigned int) Group_25(D);
  _6 = _5 * 2;
  _7 = _4 + _6;
  GroupIndex_26 = *_7;
  _8 = Adc_ValidateSetupBufferNotBusy (Group_25(D));
  if (_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  u32CoreId.11_9 ={v} u32CoreId;
  _10 = Adc_pCfgPtr[u32CoreId.11_9];
  _11 = _10->pGroups;
  _12 = (unsigned int) GroupIndex_26;
  _13 = _12 * 60;
  pGroupPtr_28 = _11 + _13;
  _14 = pGroupPtr_28->pResultsBufferPtr;
  _15 = (unsigned int) Group_25(D);
  _16 = _15 * 4;
  _17 = _14 + _16;
  *_17 = DataBufferPtr_29(D);
  TempReturn_31 = 0;

  <bb 4> :
  # TempReturn_18 = PHI <TempReturn_20(2), TempReturn_31(3)>
  _32 = TempReturn_18;

  <bb 5> :
<L2>:
  return _32;

}


Adc_Init (const struct Adc_ConfigType * ConfigPtr)
{
  Std_ReturnType TimeOutStatus;
  Std_ReturnType ValidCoreId;
  uint32 u32CoreIdTemp;
  volatile uint32 u32CoreId;
  long unsigned int _1;
  long unsigned int u32CoreId.1_2;
  long unsigned int u32CoreId.2_3;
  long unsigned int u32CoreId.3_4;
  long unsigned int u32CoreId.4_5;
  long unsigned int u32CoreId.5_6;
  const struct Adc_ConfigType * _7;
  const struct Adc_Ipw_Config * _8;

  <bb 2> :
  _1 = Adc_GetCoreID ();
  u32CoreId ={v} _1;
  u32CoreIdTemp_13 ={v} u32CoreId;
  u32CoreId.1_2 ={v} u32CoreId;
  ValidCoreId_16 = Adc_CheckCurrentCoreId (ConfigPtr_14(D), u32CoreId.1_2);
  if (ValidCoreId_16 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  u32CoreId.2_3 ={v} u32CoreId;
  Adc_pCfgPtr[u32CoreId.2_3] = ConfigPtr_14(D);
  u32CoreId.3_4 ={v} u32CoreId;
  Adc_InitUnitStatus (u32CoreId.3_4);
  u32CoreId.4_5 ={v} u32CoreId;
  Adc_InitGroupsStatus (u32CoreId.4_5);
  u32CoreId.5_6 ={v} u32CoreId;
  _7 = Adc_pCfgPtr[u32CoreId.5_6];
  _8 = _7->pAdcIpwConfig;
  TimeOutStatus_21 = Adc_Ipw_Init (_8, u32CoreIdTemp_13);
  if (TimeOutStatus_21 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Adc_ReportDetRuntimeError (0, 43);

  <bb 5> :
  return;

}


Adc_UpdateStatusAfterGetStream (Adc_GroupType Group, uint32 u32CoreId)
{
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  int _6;
  <unnamed type> _7;
  int _8;
  int _9;
  <unnamed type> _10;
  const struct Adc_ConfigType * _11;
  const struct Adc_GroupConfigurationType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Adc_GroupConfigurationType * _15;
  <unnamed type> _16;
  const struct Adc_ConfigType * _17;
  const struct Adc_GroupConfigurationType * _18;
  unsigned int _19;
  unsigned int _20;
  const struct Adc_GroupConfigurationType * _21;
  <unnamed type> _22;
  const struct Adc_ConfigType * _23;
  const struct Adc_GroupConfigurationType * _24;
  unsigned int _25;
  unsigned int _26;
  const struct Adc_GroupConfigurationType * _27;
  <unnamed type> _28;
  const struct Adc_ConfigType * _29;
  const struct Adc_GroupConfigurationType * _30;
  unsigned int _31;
  unsigned int _32;
  const struct Adc_GroupConfigurationType * _33;
  <unnamed type> _34;
  const struct Adc_ConfigType * _35;
  const struct Adc_GroupConfigurationType * _36;
  unsigned int _37;
  unsigned int _38;
  const struct Adc_GroupConfigurationType * _39;
  <unnamed type> _40;
  int _41;
  int _42;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_46(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_47(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_48 = *_5;
  _6 = (int) Group_47(D);
  _7 ={v} Adc_aGroupStatus[_6].eConversion;
  if (_7 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = (int) Group_47(D);
  Adc_aGroupStatus[_8].eConversion ={v} 1;

  <bb 4> :
  _9 = (int) Group_47(D);
  _10 ={v} Adc_aGroupStatus[_9].eConversion;
  if (_10 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  _11 = Adc_pCfgPtr[u32CoreId_46(D)];
  _12 = _11->pGroups;
  _13 = (unsigned int) GroupIndex_48;
  _14 = _13 * 60;
  _15 = _12 + _14;
  _16 = _15->eTriggerSource;
  if (_16 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  _17 = Adc_pCfgPtr[u32CoreId_46(D)];
  _18 = _17->pGroups;
  _19 = (unsigned int) GroupIndex_48;
  _20 = _19 * 60;
  _21 = _18 + _20;
  _22 = _21->eMode;
  if (_22 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _23 = Adc_pCfgPtr[u32CoreId_46(D)];
  _24 = _23->pGroups;
  _25 = (unsigned int) GroupIndex_48;
  _26 = _25 * 60;
  _27 = _24 + _26;
  _28 = _27->eMode;
  if (_28 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _29 = Adc_pCfgPtr[u32CoreId_46(D)];
  _30 = _29->pGroups;
  _31 = (unsigned int) GroupIndex_48;
  _32 = _31 * 60;
  _33 = _30 + _32;
  _34 = _33->eAccessMode;
  if (_34 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _35 = Adc_pCfgPtr[u32CoreId_46(D)];
  _36 = _35->pGroups;
  _37 = (unsigned int) GroupIndex_48;
  _38 = _37 * 60;
  _39 = _36 + _38;
  _40 = _39->eBufferMode;
  if (_40 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _41 = (int) Group_47(D);
  Adc_aGroupStatus[_41].eConversion ={v} 0;
  goto <bb 12>; [INV]

  <bb 11> :
  _42 = (int) Group_47(D);
  Adc_aGroupStatus[_42].eConversion ={v} 1;

  <bb 12> :
  return;

}


Adc_UpdateStatusReadGroupInt (const Adc_GroupType Group, uint32 u32CoreId)
{
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  int _6;
  <unnamed type> _7;
  int _8;
  int _9;
  <unnamed type> _10;
  const struct Adc_ConfigType * _11;
  const struct Adc_GroupConfigurationType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Adc_GroupConfigurationType * _15;
  <unnamed type> _16;
  const struct Adc_ConfigType * _17;
  const struct Adc_GroupConfigurationType * _18;
  unsigned int _19;
  unsigned int _20;
  const struct Adc_GroupConfigurationType * _21;
  <unnamed type> _22;
  const struct Adc_ConfigType * _23;
  const struct Adc_GroupConfigurationType * _24;
  unsigned int _25;
  unsigned int _26;
  const struct Adc_GroupConfigurationType * _27;
  <unnamed type> _28;
  const struct Adc_ConfigType * _29;
  const struct Adc_GroupConfigurationType * _30;
  unsigned int _31;
  unsigned int _32;
  const struct Adc_GroupConfigurationType * _33;
  <unnamed type> _34;
  const struct Adc_ConfigType * _35;
  const struct Adc_GroupConfigurationType * _36;
  unsigned int _37;
  unsigned int _38;
  const struct Adc_GroupConfigurationType * _39;
  <unnamed type> _40;
  int _41;
  int _42;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_46(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_47(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_48 = *_5;
  _6 = (int) Group_47(D);
  _7 ={v} Adc_aGroupStatus[_6].eConversion;
  if (_7 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = (int) Group_47(D);
  Adc_aGroupStatus[_8].eConversion ={v} 1;
  goto <bb 13>; [INV]

  <bb 4> :
  _9 = (int) Group_47(D);
  _10 ={v} Adc_aGroupStatus[_9].eConversion;
  if (_10 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 5> :
  _11 = Adc_pCfgPtr[u32CoreId_46(D)];
  _12 = _11->pGroups;
  _13 = (unsigned int) GroupIndex_48;
  _14 = _13 * 60;
  _15 = _12 + _14;
  _16 = _15->eTriggerSource;
  if (_16 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  _17 = Adc_pCfgPtr[u32CoreId_46(D)];
  _18 = _17->pGroups;
  _19 = (unsigned int) GroupIndex_48;
  _20 = _19 * 60;
  _21 = _18 + _20;
  _22 = _21->eMode;
  if (_22 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _23 = Adc_pCfgPtr[u32CoreId_46(D)];
  _24 = _23->pGroups;
  _25 = (unsigned int) GroupIndex_48;
  _26 = _25 * 60;
  _27 = _24 + _26;
  _28 = _27->eMode;
  if (_28 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _29 = Adc_pCfgPtr[u32CoreId_46(D)];
  _30 = _29->pGroups;
  _31 = (unsigned int) GroupIndex_48;
  _32 = _31 * 60;
  _33 = _30 + _32;
  _34 = _33->eAccessMode;
  if (_34 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _35 = Adc_pCfgPtr[u32CoreId_46(D)];
  _36 = _35->pGroups;
  _37 = (unsigned int) GroupIndex_48;
  _38 = _37 * 60;
  _39 = _36 + _38;
  _40 = _39->eBufferMode;
  if (_40 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _41 = (int) Group_47(D);
  Adc_aGroupStatus[_41].eConversion ={v} 0;
  goto <bb 12>; [INV]

  <bb 11> :
  _42 = (int) Group_47(D);
  Adc_aGroupStatus[_42].eConversion ={v} 1;

  <bb 12> :

  <bb 13> :
  return;

}


Adc_UpdateSwQueueIndexNoInt (const Adc_GroupType Group, uint32 u32CoreId)
{
  Adc_QueueIndexType NumOfSwNormalQueue;
  Adc_QueueIndexType SwNormalQueueIndex;
  Adc_HwUnitType LogicalHwUnitId;
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  const struct Adc_GroupConfigurationType * _10;
  int _11;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _16;
  short unsigned int SwNormalQueueIndex.35_17;
  int _18;
  short unsigned int _19;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_24(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_25(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_26 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_24(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_26;
  _9 = _8 * 60;
  _10 = _7 + _9;
  LogicalHwUnitId_27 = _10->AdcLogicalUnitId;
  _11 = (int) LogicalHwUnitId_27;
  _12 ={v} Adc_aUnitStatus[_11].SwNormalQueueIndex;
  if (_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  _13 = (int) LogicalHwUnitId_27;
  NumOfSwNormalQueue_28 ={v} Adc_aUnitStatus[_13].SwNormalQueueIndex;
  SwNormalQueueIndex_29 = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  _14 = (int) LogicalHwUnitId_27;
  _15 = (int) SwNormalQueueIndex_20;
  _16 ={v} Adc_aUnitStatus[_14].SwNormalQueue[_15];
  if (Group_25(D) == _16)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Adc_RemoveFromQueue (LogicalHwUnitId_27, SwNormalQueueIndex_20);
  goto <bb 8>; [INV]

  <bb 6> :
  SwNormalQueueIndex.35_17 = SwNormalQueueIndex_20;
  SwNormalQueueIndex_30 = SwNormalQueueIndex.35_17 + 1;

  <bb 7> :
  # SwNormalQueueIndex_20 = PHI <SwNormalQueueIndex_29(3), SwNormalQueueIndex_30(6)>
  if (SwNormalQueueIndex_20 < NumOfSwNormalQueue_28)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (SwNormalQueueIndex_20 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _18 = (int) LogicalHwUnitId_27;
  _19 ={v} Adc_aUnitStatus[_18].SwNormalQueueIndex;
  if (_19 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Adc_Ipw_StartNormalConversion (LogicalHwUnitId_27, u32CoreId_24(D));

  <bb 11> :
  return;

}


Adc_UpdateStatusReadGroupNoInt (const Adc_GroupType Group, const boolean bFlag, uint32 u32CoreId)
{
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  int _6;
  const struct Adc_ConfigType * _7;
  const struct Adc_GroupConfigurationType * _8;
  unsigned int _9;
  unsigned int _10;
  const struct Adc_GroupConfigurationType * _11;
  <unnamed type> _12;
  int _13;
  const struct Adc_ConfigType * _14;
  const struct Adc_GroupConfigurationType * _15;
  unsigned int _16;
  unsigned int _17;
  const struct Adc_GroupConfigurationType * _18;
  <unnamed type> _19;
  int _20;
  const struct Adc_ConfigType * _21;
  const struct Adc_GroupConfigurationType * _22;
  unsigned int _23;
  unsigned int _24;
  const struct Adc_GroupConfigurationType * _25;
  <unnamed type> _26;
  int _27;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_30(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_31(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_32 = *_5;
  _6 = (int) Group_31(D);
  Adc_aGroupStatus[_6].eAlreadyConverted ={v} 1;
  if (bFlag_34(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _7 = Adc_pCfgPtr[u32CoreId_30(D)];
  _8 = _7->pGroups;
  _9 = (unsigned int) GroupIndex_32;
  _10 = _9 * 60;
  _11 = _8 + _10;
  _12 = _11->eMode;
  if (_12 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = (int) Group_31(D);
  Adc_aGroupStatus[_13].eConversion ={v} 1;
  goto <bb 9>; [INV]

  <bb 5> :
  _14 = Adc_pCfgPtr[u32CoreId_30(D)];
  _15 = _14->pGroups;
  _16 = (unsigned int) GroupIndex_32;
  _17 = _16 * 60;
  _18 = _15 + _17;
  _19 = _18->eTriggerSource;
  if (_19 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _20 = (int) Group_31(D);
  Adc_aGroupStatus[_20].eConversion ={v} 0;
  Adc_UpdateSwQueueIndexNoInt (Group_31(D), u32CoreId_30(D));
  goto <bb 9>; [INV]

  <bb 7> :
  _21 = Adc_pCfgPtr[u32CoreId_30(D)];
  _22 = _21->pGroups;
  _23 = (unsigned int) GroupIndex_32;
  _24 = _23 * 60;
  _25 = _22 + _24;
  _26 = _25->eMode;
  if (_26 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _27 = (int) Group_31(D);
  Adc_aGroupStatus[_27].eConversion ={v} 1;

  <bb 9> :
  return;

}


Adc_UpdateStatusReadGroup (const Adc_GroupType Group, const boolean bFlag, uint32 u32CoreId)
{
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  const struct Adc_GroupConfigurationType * _10;
  unsigned char _11;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_14(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_15(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_16 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_14(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_16;
  _9 = _8 * 60;
  _10 = _7 + _9;
  _11 = _10->u8AdcWithoutInterrupt;
  if (_11 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Adc_UpdateStatusReadGroupNoInt (Group_15(D), bFlag_18(D), u32CoreId_14(D));
  goto <bb 5>; [INV]

  <bb 4> :
  Adc_UpdateStatusReadGroupInt (Group_15(D), u32CoreId_14(D));

  <bb 5> :
  return;

}


Adc_UpdateStatusStopConversion (Adc_GroupType Group, Adc_HwUnitType Unit, uint32 u32CoreId)
{
  Adc_StatusType eConversion;
  Adc_StreamBufferModeType eBufferMode;
  Adc_GroupAccessModeType eAccessMode;
  Adc_GroupConvModeType eMode;
  Std_ReturnType TimeOutStatus;
  Adc_QueueIndexType RemovedPos;
  Adc_GroupType GroupIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  int _6;
  const struct Adc_ConfigType * _7;
  const struct Adc_GroupConfigurationType * _8;
  unsigned int _9;
  unsigned int _10;
  const struct Adc_GroupConfigurationType * _11;
  const struct Adc_ConfigType * _12;
  const struct Adc_GroupConfigurationType * _13;
  unsigned int _14;
  unsigned int _15;
  const struct Adc_GroupConfigurationType * _16;
  const struct Adc_ConfigType * _17;
  const struct Adc_GroupConfigurationType * _18;
  unsigned int _19;
  unsigned int _20;
  const struct Adc_GroupConfigurationType * _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  int _27;
  short unsigned int RemovedPos.28_28;
  int _29;
  short unsigned int _30;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_34(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_35(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_36 = *_5;
  RemovedPos = 0;
  TimeOutStatus_38 = 0;
  _6 = (int) Group_35(D);
  Adc_aGroupStatus[_6].bLimitCheckFailed ={v} 0;
  _7 = Adc_pCfgPtr[u32CoreId_34(D)];
  _8 = _7->pGroups;
  _9 = (unsigned int) GroupIndex_36;
  _10 = _9 * 60;
  _11 = _8 + _10;
  eMode_40 = _11->eMode;
  _12 = Adc_pCfgPtr[u32CoreId_34(D)];
  _13 = _12->pGroups;
  _14 = (unsigned int) GroupIndex_36;
  _15 = _14 * 60;
  _16 = _13 + _15;
  eAccessMode_41 = _16->eAccessMode;
  _17 = Adc_pCfgPtr[u32CoreId_34(D)];
  _18 = _17->pGroups;
  _19 = (unsigned int) GroupIndex_36;
  _20 = _19 * 60;
  _21 = _18 + _20;
  eBufferMode_42 = _21->eBufferMode;
  _22 = (int) Group_35(D);
  eConversion_43 ={v} Adc_aGroupStatus[_22].eConversion;
  _23 = (int) Group_35(D);
  Adc_aGroupStatus[_23].ResultIndex ={v} 0;
  _24 = (int) Group_35(D);
  Adc_aGroupStatus[_24].eNotification = 0;
  _25 = (int) Group_35(D);
  Adc_aRuntimeGroupChannel[_25].u32Mask = 4294967295;
  if (eMode_40 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (eAccessMode_41 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  if (eBufferMode_42 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  if (eConversion_43 == 3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _26 = (int) Group_35(D);
  Adc_aGroupStatus[_26].eConversion ={v} 0;
  goto <bb 12>; [INV]

  <bb 7> :
  TimeOutStatus_50 = Adc_StopSwGroupConversion (&RemovedPos, Group_35(D), Unit_48(D), u32CoreId_34(D));
  _27 = (int) Group_35(D);
  Adc_aGroupStatus[_27].eConversion ={v} 0;
  RemovedPos.28_28 = RemovedPos;
  if (RemovedPos.28_28 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _29 = (int) Unit_48(D);
  _30 ={v} Adc_aUnitStatus[_29].SwNormalQueueIndex;
  if (_30 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  Adc_Ipw_StartNormalConversion (Unit_48(D), u32CoreId_34(D));

  <bb 10> :
  if (TimeOutStatus_50 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Adc_ReportDetRuntimeError (3, 43);

  <bb 12> :
  RemovedPos ={v} {CLOBBER};
  return;

}


Adc_StopSwGroupConversion (Adc_QueueIndexType * RemovedPos, Adc_GroupType Group, Adc_HwUnitType Unit, uint32 u32CoreId)
{
  Adc_QueueIndexType NumOfSwNormalQueue;
  Adc_QueueIndexType SwNormalQueueIndex;
  Std_ReturnType TimeOutStatus;
  Std_ReturnType D.6916;
  int _1;
  short unsigned int _2;
  int _3;
  int _4;
  int _5;
  short unsigned int _6;
  short unsigned int SwNormalQueueIndex.29_7;
  Std_ReturnType _22;

  <bb 2> :
  TimeOutStatus_15 = 0;
  _1 = (int) Unit_16(D);
  _2 ={v} Adc_aUnitStatus[_1].SwNormalQueueIndex;
  *RemovedPos_18(D) = _2;
  _3 = (int) Unit_16(D);
  NumOfSwNormalQueue_20 ={v} Adc_aUnitStatus[_3].SwNormalQueueIndex;
  SwNormalQueueIndex_21 = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _4 = (int) Unit_16(D);
  _5 = (int) SwNormalQueueIndex_11;
  _6 ={v} Adc_aUnitStatus[_4].SwNormalQueue[_5];
  if (Group_23(D) == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  *RemovedPos_18(D) = SwNormalQueueIndex_11;
  if (SwNormalQueueIndex_11 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  TimeOutStatus_27 = Adc_Ipw_StopCurrentConversion (Unit_16(D), Group_23(D), u32CoreId_25(D));

  <bb 6> :
  # TimeOutStatus_8 = PHI <TimeOutStatus_10(4), TimeOutStatus_27(5)>
  Adc_RemoveFromQueue (Unit_16(D), SwNormalQueueIndex_11);

  <bb 7> :
  # TimeOutStatus_9 = PHI <TimeOutStatus_10(3), TimeOutStatus_8(6)>
  SwNormalQueueIndex.29_7 = SwNormalQueueIndex_11;
  SwNormalQueueIndex_29 = SwNormalQueueIndex.29_7 + 1;

  <bb 8> :
  # TimeOutStatus_10 = PHI <TimeOutStatus_15(2), TimeOutStatus_9(7)>
  # SwNormalQueueIndex_11 = PHI <SwNormalQueueIndex_21(2), SwNormalQueueIndex_29(7)>
  if (SwNormalQueueIndex_11 < NumOfSwNormalQueue_20)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _22 = TimeOutStatus_10;

  <bb 10> :
<L7>:
  return _22;

}


Adc_UpdateStatusStartConversion (const Adc_GroupType Group, const Adc_HwUnitType Unit, uint32 u32CoreId)
{
  Std_ReturnType TimeOutStatus;
  Adc_QueueIndexType SwNormalQueueIndex;
  int _1;
  int _2;
  int _3;
  int _4;
  short unsigned int _5;
  int _6;
  short unsigned int _7;
  int _8;
  int _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;

  <bb 2> :
  TimeOutStatus_15 = 0;
  _1 = (int) Group_16(D);
  Adc_aGroupStatus[_1].eConversion ={v} 1;
  _2 = (int) Group_16(D);
  Adc_aGroupStatus[_2].ResultIndex ={v} 0;
  SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_01 ();
  _3 = (int) Unit_21(D);
  SwNormalQueueIndex_22 ={v} Adc_aUnitStatus[_3].SwNormalQueueIndex;
  _4 = (int) Unit_21(D);
  _5 ={v} Adc_aUnitStatus[_4].SwNormalQueue[0];
  if (Group_16(D) == _5)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (SwNormalQueueIndex_22 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _6 = (int) Unit_21(D);
  _7 ={v} Adc_aUnitStatus[_6].SwNormalQueueIndex;
  if (_7 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = (int) Unit_21(D);
  Adc_aUnitStatus[_8].SwNormalQueue[0] ={v} Group_16(D);
  _9 = (int) Unit_21(D);
  _10 ={v} Adc_aUnitStatus[_9].SwNormalQueueIndex;
  _11 = _10;
  _12 = _11 + 1;
  Adc_aUnitStatus[_9].SwNormalQueueIndex ={v} _12;

  <bb 6> :
  SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01 ();
  Adc_Ipw_StartNormalConversion (Unit_21(D), u32CoreId_27(D));
  goto <bb 8>; [INV]

  <bb 7> :
  SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_01 ();

  <bb 8> :
  return;

}


Adc_RemoveFromQueue (const Adc_HwUnitType Unit, const Adc_QueueIndexType CurQueueIndex)
{
  Adc_QueueIndexType CurrentIndex;
  Adc_QueueIndexType PositionIndex;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  unsigned int _6;
  unsigned int _7;
  short unsigned int _8;
  short unsigned int PositionIndex.0_9;
  int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;

  <bb 2> :
  PositionIndex_17 = 0;
  CurrentIndex_18 = 0;
  SchM_Enter_Adc_ADC_EXCLUSIVE_AREA_00 ();
  _1 = (int) Unit_21(D);
  CurrentIndex_22 ={v} Adc_aUnitStatus[_1].SwNormalQueueIndex;
  if (CurrentIndex_22 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (int) Unit_21(D);
  Adc_aUnitStatus[_2].SwNormalQueueIndex ={v} 0;
  goto <bb 8>; [INV]

  <bb 4> :
  PositionIndex_24 = CurQueueIndex_23(D) + 1;
  goto <bb 6>; [INV]

  <bb 5> :
  _3 = (int) Unit_21(D);
  _4 = (int) PositionIndex_14;
  _5 = (int) Unit_21(D);
  _6 = (unsigned int) PositionIndex_14;
  _7 = _6 + 4294967295;
  _8 ={v} Adc_aUnitStatus[_3].SwNormalQueue[_4];
  Adc_aUnitStatus[_5].SwNormalQueue[_7] ={v} _8;
  PositionIndex.0_9 = PositionIndex_14;
  PositionIndex_27 = PositionIndex.0_9 + 1;

  <bb 6> :
  # PositionIndex_14 = PHI <PositionIndex_24(4), PositionIndex_27(5)>
  if (PositionIndex_14 < CurrentIndex_22)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _10 = (int) Unit_21(D);
  _11 ={v} Adc_aUnitStatus[_10].SwNormalQueueIndex;
  _12 = _11;
  _13 = _12 + 65535;
  Adc_aUnitStatus[_10].SwNormalQueueIndex ={v} _13;

  <bb 8> :
  SchM_Exit_Adc_ADC_EXCLUSIVE_AREA_00 ();
  return;

}


Adc_CheckCurrentCoreId (const struct Adc_ConfigType * pCfgPtr, uint32 u32CoreId)
{
  Std_ReturnType ValidCoreId;
  uint8 Index;
  Std_ReturnType D.6817;
  long unsigned int _1;
  const uint8 * _2;
  sizetype _3;
  const uint8 * _4;
  unsigned char _5;
  long unsigned int _6;
  unsigned char Index.6_7;
  unsigned char _8;
  Std_ReturnType _19;

  <bb 2> :
  Index_11 = 0;
  ValidCoreId_12 = 1;
  _1 = pCfgPtr_14(D)->u32CoreId;
  if (u32CoreId_15(D) == _1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Index_16 = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = pCfgPtr_14(D)->pAssignmentPartition;
  _3 = (sizetype) Index_9;
  _4 = _2 + _3;
  _5 = *_4;
  _6 = (long unsigned int) _5;
  if (u32CoreId_15(D) == _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  ValidCoreId_18 = 0;
  goto <bb 8>; [INV]

  <bb 6> :
  Index.6_7 = Index_9;
  Index_17 = Index.6_7 + 1;

  <bb 7> :
  # Index_9 = PHI <Index_16(3), Index_17(6)>
  _8 = pCfgPtr_14(D)->AssignedPartitionCount;
  if (Index_9 < _8)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # ValidCoreId_10 = PHI <ValidCoreId_12(2), ValidCoreId_18(5), ValidCoreId_12(7)>
  _19 = ValidCoreId_10;

  <bb 9> :
<L7>:
  return _19;

}


Adc_InitUnitStatus (uint32 u32CoreId)
{
  Adc_QueueIndexType QueueIdx;
  Adc_HwUnitType LogicalHwUnitId;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  short unsigned int QueueIdx.7_8;
  int _9;
  unsigned char LogicalHwUnitId.8_10;

  <bb 2> :
  LogicalHwUnitId_16 = 0;
  QueueIdx_17 = 0;
  LogicalHwUnitId_18 = 0;
  goto <bb 9>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_20(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_11;
  _4 = _2->Mapping.au8Adc_HwUnit[_3];
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _5 = (int) LogicalHwUnitId_11;
  Adc_aUnitStatus[_5].SwNormalQueueIndex ={v} 0;
  QueueIdx_22 = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _6 = (int) LogicalHwUnitId_11;
  _7 = (int) QueueIdx_12;
  Adc_aUnitStatus[_6].SwNormalQueue[_7] ={v} 0;
  QueueIdx.7_8 = QueueIdx_12;
  QueueIdx_25 = QueueIdx.7_8 + 1;

  <bb 6> :
  # QueueIdx_12 = PHI <QueueIdx_22(4), QueueIdx_25(5)>
  if (QueueIdx_12 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _9 = (int) LogicalHwUnitId_11;
  Adc_aUnitStatus[_9].u8Sc1Used = 0;

  <bb 8> :
  LogicalHwUnitId.8_10 = LogicalHwUnitId_11;
  LogicalHwUnitId_26 = LogicalHwUnitId.8_10 + 1;

  <bb 9> :
  # LogicalHwUnitId_11 = PHI <LogicalHwUnitId_18(2), LogicalHwUnitId_26(8)>
  if (LogicalHwUnitId_11 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  return;

}


Adc_InitGroupsStatus (uint32 u32CoreId)
{
  Adc_GroupType GroupId;
  Adc_GroupType u16GroupCnt;
  const struct Adc_ConfigType * _1;
  const struct Adc_GroupConfigurationType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Adc_GroupConfigurationType * _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  const struct Adc_ConfigType * _12;
  const struct Adc_GroupConfigurationType * _13;
  unsigned int _14;
  unsigned int _15;
  const struct Adc_GroupConfigurationType * _16;
  int _17;
  const Adc_GroupDefType * _18;
  const struct Adc_ConfigType * _19;
  const struct Adc_GroupConfigurationType * _20;
  unsigned int _21;
  unsigned int _22;
  const struct Adc_GroupConfigurationType * _23;
  int _24;
  unsigned char _25;
  int _26;
  int _27;
  const struct Adc_ConfigType * _28;
  const struct Adc_GroupConfigurationType * _29;
  unsigned int _30;
  unsigned int _31;
  const struct Adc_GroupConfigurationType * _32;
  const struct Adc_Ipw_GroupConfig * _33;
  int _34;
  const uint16 * _35;
  int _36;
  short unsigned int u16GroupCnt.9_37;
  const struct Adc_ConfigType * _38;
  short unsigned int _39;

  <bb 2> :
  u16GroupCnt_42 = 0;
  GroupId_43 = 0;
  u16GroupCnt_44 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_46(D)];
  _2 = _1->pGroups;
  _3 = (unsigned int) u16GroupCnt_40;
  _4 = _3 * 60;
  _5 = _2 + _4;
  GroupId_47 = _5->GroupId;
  _6 = (int) GroupId_47;
  Adc_aGroupStatus[_6].eConversion ={v} 0;
  _7 = (int) GroupId_47;
  Adc_aGroupStatus[_7].eAlreadyConverted ={v} 0;
  _8 = (int) GroupId_47;
  Adc_aGroupStatus[_8].ResultIndex ={v} 0;
  _9 = (int) GroupId_47;
  Adc_aGroupStatus[_9].CurrentChannel = 0;
  _10 = (int) GroupId_47;
  Adc_aGroupStatus[_10].bLimitCheckFailed ={v} 0;
  _11 = (int) GroupId_47;
  Adc_aGroupStatus[_11].eNotification = 0;
  _12 = Adc_pCfgPtr[u32CoreId_46(D)];
  _13 = _12->pGroups;
  _14 = (unsigned int) u16GroupCnt_40;
  _15 = _14 * 60;
  _16 = _13 + _15;
  _17 = (int) GroupId_47;
  _18 = _16->pAssignment;
  Adc_aRuntimeGroupChannel[_17].pChannel = _18;
  _19 = Adc_pCfgPtr[u32CoreId_46(D)];
  _20 = _19->pGroups;
  _21 = (unsigned int) u16GroupCnt_40;
  _22 = _21 * 60;
  _23 = _20 + _22;
  _24 = (int) GroupId_47;
  _25 = _23->AssignedChannelCount;
  Adc_aRuntimeGroupChannel[_24].ChannelCount = _25;
  _26 = (int) GroupId_47;
  Adc_aRuntimeGroupChannel[_26].bRuntimeUpdated = 0;
  _27 = (int) GroupId_47;
  Adc_aRuntimeGroupChannel[_27].bAdcRuntimeGroupLimitcheck = 0;
  _28 = Adc_pCfgPtr[u32CoreId_46(D)];
  _29 = _28->pGroups;
  _30 = (unsigned int) u16GroupCnt_40;
  _31 = _30 * 60;
  _32 = _29 + _31;
  _33 = _32->pAdcIpwGroupConfig;
  _34 = (int) GroupId_47;
  _35 = _33->pDelay;
  Adc_aRuntimeGroupChannel[_34].pu16Delays = _35;
  _36 = (int) GroupId_47;
  Adc_aRuntimeGroupChannel[_36].u32Mask = 4294967295;
  u16GroupCnt.9_37 = u16GroupCnt_40;
  u16GroupCnt_60 = u16GroupCnt.9_37 + 1;

  <bb 4> :
  # u16GroupCnt_40 = PHI <u16GroupCnt_44(2), u16GroupCnt_60(3)>
  _38 = Adc_pCfgPtr[u32CoreId_46(D)];
  _39 = _38->GroupCount;
  if (u16GroupCnt_40 < _39)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Adc_ValidateStateNotIdle (uint8 u8ServiceId, Adc_GroupType Group, uint32 u32CoreId)
{
  Std_ReturnType ValidState;
  Std_ReturnType D.6898;
  int _1;
  int _2;
  <unnamed type> _3;
  int _4;
  <unnamed type> _5;
  int _6;
  <unnamed type> _7;
  int _8;
  <unnamed type> _9;
  Std_ReturnType _28;

  <bb 2> :
  ValidState_18 = 0;
  _1 = (int) u8ServiceId_19(D);
  switch (_1) <default: <L12> [INV], case 3: <L5> [INV], case 4: <L0> [INV], case 11: <L9> [INV]>

  <bb 3> :
<L0>:
  _2 = (int) Group_20(D);
  _3 ={v} Adc_aGroupStatus[_2].eConversion;
  if (_3 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _4 = (int) Group_20(D);
  _5 ={v} Adc_aGroupStatus[_4].eAlreadyConverted;
  if (_5 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Adc_ReportDetRuntimeError (u8ServiceId_19(D), 12);
  ValidState_25 = 1;

  <bb 6> :
  # ValidState_10 = PHI <ValidState_18(3), ValidState_18(4), ValidState_25(5)>
  goto <bb 14>; [INV]

  <bb 7> :
<L5>:
  _6 = (int) Group_20(D);
  _7 ={v} Adc_aGroupStatus[_6].eConversion;
  if (_7 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Adc_ReportDetRuntimeError (u8ServiceId_19(D), 12);
  ValidState_27 = 1;

  <bb 9> :
  # ValidState_11 = PHI <ValidState_18(7), ValidState_27(8)>
  goto <bb 14>; [INV]

  <bb 10> :
<L9>:
  _8 = (int) Group_20(D);
  _9 ={v} Adc_aGroupStatus[_8].eConversion;
  if (_9 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  Adc_ReportDetRuntimeError (u8ServiceId_19(D), 12);
  ValidState_23 = 1;

  <bb 12> :
  # ValidState_12 = PHI <ValidState_18(10), ValidState_23(11)>
  goto <bb 14>; [INV]

  <bb 13> :
<L12>:

  <bb 14> :
  # ValidState_13 = PHI <ValidState_10(6), ValidState_11(9), ValidState_12(12), ValidState_18(13)>
  _28 = ValidState_13;

  <bb 15> :
<L14>:
  return _28;

}


Adc_ValidateStateStartGroupConvNotBusy (Adc_GroupType Group, uint32 u32CoreId)
{
  boolean bImplicitly;
  Std_ReturnType ValidState;
  Adc_GroupType GroupIndex;
  Std_ReturnType D.6868;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  const struct Adc_GroupConfigurationType * _10;
  <unnamed type> _11;
  const struct Adc_ConfigType * _12;
  const struct Adc_GroupConfigurationType * _13;
  unsigned int _14;
  unsigned int _15;
  const struct Adc_GroupConfigurationType * _16;
  <unnamed type> _17;
  const struct Adc_ConfigType * _18;
  const struct Adc_GroupConfigurationType * _19;
  unsigned int _20;
  unsigned int _21;
  const struct Adc_GroupConfigurationType * _22;
  <unnamed type> _23;
  const struct Adc_ConfigType * _24;
  const struct Adc_GroupConfigurationType * _25;
  unsigned int _26;
  unsigned int _27;
  const struct Adc_GroupConfigurationType * _28;
  <unnamed type> _29;
  Std_ReturnType _43;

  <bb 2> :
  ValidState_33 = 0;
  bImplicitly_34 = 0;
  _1 = Adc_pCfgPtr[u32CoreId_36(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_37(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_38 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_36(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_38;
  _9 = _8 * 60;
  _10 = _7 + _9;
  _11 = _10->eMode;
  if (_11 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _12 = Adc_pCfgPtr[u32CoreId_36(D)];
  _13 = _12->pGroups;
  _14 = (unsigned int) GroupIndex_38;
  _15 = _14 * 60;
  _16 = _13 + _15;
  _17 = _16->eMode;
  if (_17 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _18 = Adc_pCfgPtr[u32CoreId_36(D)];
  _19 = _18->pGroups;
  _20 = (unsigned int) GroupIndex_38;
  _21 = _20 * 60;
  _22 = _19 + _21;
  _23 = _22->eAccessMode;
  if (_23 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _24 = Adc_pCfgPtr[u32CoreId_36(D)];
  _25 = _24->pGroups;
  _26 = (unsigned int) GroupIndex_38;
  _27 = _26 * 60;
  _28 = _25 + _27;
  _29 = _28->eBufferMode;
  if (_29 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  bImplicitly_39 = 1;

  <bb 7> :
  # bImplicitly_31 = PHI <bImplicitly_34(3), bImplicitly_34(4), bImplicitly_34(5), bImplicitly_39(6)>
  if (ValidState_33 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Adc_ReportDetRuntimeError (2, 11);
  goto <bb 10>; [INV]

  <bb 9> :
  ValidState_41 = Adc_ValidateNotBusyNoPrio (Group_37(D), bImplicitly_31, u32CoreId_36(D));

  <bb 10> :
  # ValidState_30 = PHI <ValidState_33(8), ValidState_41(9)>
  _43 = ValidState_30;

  <bb 11> :
<L8>:
  return _43;

}


Adc_ValidateSetupBufferNotBusy (Adc_GroupType Group)
{
  Std_ReturnType ValidState;
  Std_ReturnType D.6828;
  int _1;
  <unnamed type> _2;
  Std_ReturnType _10;

  <bb 2> :
  ValidState_5 = 1;
  _1 = (int) Group_6(D);
  _2 ={v} Adc_aGroupStatus[_1].eConversion;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Adc_ReportDetRuntimeError (12, 11);
  goto <bb 5>; [INV]

  <bb 4> :
  ValidState_8 = 0;

  <bb 5> :
  # ValidState_3 = PHI <ValidState_5(3), ValidState_8(4)>
  _10 = ValidState_3;

  <bb 6> :
<L3>:
  return _10;

}


Adc_ValidateDeInitNotBusy (uint32 u32CoreId)
{
  Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType ValidState;
  Std_ReturnType ErrorFound;
  Std_ReturnType D.6846;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  unsigned char _4;
  unsigned char LogicalHwUnitId.18_5;
  unsigned char _6;
  Std_ReturnType _27;

  <bb 2> :
  ErrorFound_16 = 0;
  ValidState_17 = 1;
  LogicalHwUnitId_18 = 0;
  LogicalHwUnitId_19 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_21(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_11;
  _4 = _2->Mapping.au8Adc_HwUnit[_3];
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  ErrorFound_23 = Adc_ValidateNotBusyNoQueue (LogicalHwUnitId_11, 1);
  if (ErrorFound_23 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
  # ErrorFound_7 = PHI <ErrorFound_8(3), ErrorFound_23(4)>
  LogicalHwUnitId.18_5 = LogicalHwUnitId_11;
  LogicalHwUnitId_24 = LogicalHwUnitId.18_5 + 1;

  <bb 7> :
  # ErrorFound_8 = PHI <ErrorFound_16(2), ErrorFound_7(6)>
  # LogicalHwUnitId_11 = PHI <LogicalHwUnitId_19(2), LogicalHwUnitId_24(6)>
  if (LogicalHwUnitId_11 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # ErrorFound_9 = PHI <ErrorFound_23(5), ErrorFound_8(7)>
  if (ErrorFound_9 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _6 = Adc_ValidateCheckGroupNotConversion (1, u32CoreId_21(D));
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  ValidState_26 = 0;

  <bb 11> :
  # ValidState_10 = PHI <ValidState_17(8), ValidState_17(9), ValidState_26(10)>
  _27 = ValidState_10;

  <bb 12> :
<L11>:
  return _27;

}


Adc_ValidateCheckGroupNotConversion (uint8 u8ServiceId, uint32 u32CoreId)
{
  Std_ReturnType ErrorFound;
  Adc_GroupType GroupId;
  Adc_GroupType GroupIter;
  Adc_StatusType eConversion;
  Std_ReturnType D.6856;
  const struct Adc_ConfigType * _1;
  const struct Adc_GroupConfigurationType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Adc_GroupConfigurationType * _5;
  int _6;
  short unsigned int GroupIter.19_7;
  const struct Adc_ConfigType * _8;
  short unsigned int _9;
  Std_ReturnType _19;

  <bb 2> :
  ErrorFound_15 = 0;
  GroupIter_16 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_18(D)];
  _2 = _1->pGroups;
  _3 = (unsigned int) GroupIter_10;
  _4 = _3 * 60;
  _5 = _2 + _4;
  GroupId_20 = _5->GroupId;
  _6 = (int) GroupId_20;
  eConversion_21 ={v} Adc_aGroupStatus[_6].eConversion;
  if (eConversion_21 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  if (eConversion_21 != 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Adc_ReportDetRuntimeError (u8ServiceId_22(D), 11);
  ErrorFound_24 = 1;

  <bb 6> :
  # ErrorFound_11 = PHI <ErrorFound_12(3), ErrorFound_12(4), ErrorFound_24(5)>
  GroupIter.19_7 = GroupIter_10;
  GroupIter_25 = GroupIter.19_7 + 1;

  <bb 7> :
  # GroupIter_10 = PHI <GroupIter_16(2), GroupIter_25(6)>
  # ErrorFound_12 = PHI <ErrorFound_15(2), ErrorFound_11(6)>
  _8 = Adc_pCfgPtr[u32CoreId_18(D)];
  _9 = _8->GroupCount;
  if (GroupIter_10 < _9)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _19 = ErrorFound_12;

  <bb 9> :
<L7>:
  return _19;

}


Adc_ValidateNotBusyNoPrio (Adc_GroupType Group, boolean bImplicitly, uint32 u32CoreId)
{
  Adc_StatusType eConversion;
  Std_ReturnType ValidState;
  Std_ReturnType D.6879;
  int _1;
  _Bool _2;
  Std_ReturnType _13;

  <bb 2> :
  ValidState_5 = 1;
  _1 = (int) Group_6(D);
  eConversion_8 ={v} Adc_aGroupStatus[_1].eConversion;
  _2 = ~bImplicitly_9(D);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (eConversion_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Adc_ReportDetRuntimeError (2, 11);
  goto <bb 10>; [INV]

  <bb 5> :
  if (bImplicitly_9(D) != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (eConversion_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (eConversion_8 != 3)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Adc_ReportDetRuntimeError (2, 11);
  goto <bb 10>; [INV]

  <bb 9> :
  ValidState_12 = 0;

  <bb 10> :
  # ValidState_3 = PHI <ValidState_5(4), ValidState_5(8), ValidState_12(9)>
  _13 = ValidState_3;

  <bb 11> :
<L9>:
  return _13;

}


Adc_ValidateNotBusyNoQueue (Adc_HwUnitType Unit, uint8 u8ServiceId)
{
  Adc_GroupType NoGroupsInSwNormalQueue;
  Std_ReturnType ErrorFound;
  Std_ReturnType D.6850;
  int _1;
  Std_ReturnType _11;

  <bb 2> :
  ErrorFound_4 = 0;
  _1 = (int) Unit_5(D);
  NoGroupsInSwNormalQueue_7 ={v} Adc_aUnitStatus[_1].SwNormalQueueIndex;
  if (NoGroupsInSwNormalQueue_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Adc_ReportDetRuntimeError (u8ServiceId_8(D), 11);
  ErrorFound_10 = 1;

  <bb 4> :
  # ErrorFound_2 = PHI <ErrorFound_4(2), ErrorFound_10(3)>
  _11 = ErrorFound_2;

  <bb 5> :
<L2>:
  return _11;

}


Adc_ReportDetRuntimeError (uint8 u8ServiceId, uint8 u8ErrorId)
{
  <bb 2> :
  Det_ReportRuntimeError (123, 0, u8ServiceId_2(D), u8ErrorId_3(D));
  return;

}


