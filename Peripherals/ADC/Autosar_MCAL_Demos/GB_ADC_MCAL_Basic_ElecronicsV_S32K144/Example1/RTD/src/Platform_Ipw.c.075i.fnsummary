Symbol table:

IntCtrl_Ip_InstallHandler/12 (IntCtrl_Ip_InstallHandler) @06cde1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Platform_Ipw_InitNonCore/7 
  Calls: 
IntCtrl_Ip_ClearPending/11 (IntCtrl_Ip_ClearPending) @06cde0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Platform_Ipw_InitNonCore/7 
  Calls: 
IntCtrl_Ip_DisableIrq/10 (IntCtrl_Ip_DisableIrq) @06833460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Platform_Ipw_InitIntCtrl/5 
  Calls: 
IntCtrl_Ip_EnableIrq/9 (IntCtrl_Ip_EnableIrq) @06833ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Platform_Ipw_InitIntCtrl/5 
  Calls: 
IntCtrl_Ip_SetPriority/8 (IntCtrl_Ip_SetPriority) @06833e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Platform_Ipw_InitIntCtrl/5 
  Calls: 
Platform_Ipw_InitNonCore/7 (Platform_Ipw_InitNonCore) @068338c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: IntCtrl_Ip_InstallHandler/12 IntCtrl_Ip_ClearPending/11 
Platform_Ipw_Init/6 (Platform_Ipw_Init) @06833620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Platform_Ipw_InitIntCtrl/5 
Platform_Ipw_InitIntCtrl/5 (Platform_Ipw_InitIntCtrl) @06833380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Platform_Ipw_Init/6 
  Calls: IntCtrl_Ip_DisableIrq/10 IntCtrl_Ip_EnableIrq/9 IntCtrl_Ip_SetPriority/8 
Platform_Ipw_InitNonCore (const struct Platform_Ipw_NonCoreConfigType * pConfig)
{
  uint32 irqIdx;
  const struct IntCtrl_Ip_GlobalRouteConfigType * _1;
  const struct IntCtrl_Ip_GlobalRouteConfigType * _2;
  const struct IntCtrl_Ip_IrqRouteConfigType * _3;
  long unsigned int _4;
  const struct IntCtrl_Ip_IrqRouteConfigType * _5;
  <unnamed type> _6;
  const struct IntCtrl_Ip_GlobalRouteConfigType * _7;
  const struct IntCtrl_Ip_IrqRouteConfigType * _8;
  long unsigned int _9;
  const struct IntCtrl_Ip_IrqRouteConfigType * _10;
  <unnamed type> _11;
  const struct IntCtrl_Ip_GlobalRouteConfigType * _12;
  const struct IntCtrl_Ip_IrqRouteConfigType * _13;
  long unsigned int _14;
  const struct IntCtrl_Ip_IrqRouteConfigType * _15;
  void (*<T5ec>) (void) _16;
  const struct IntCtrl_Ip_GlobalRouteConfigType * _17;
  long unsigned int _18;

  <bb 2> :
  _1 = pConfig_23(D)->pIntRouteConfig;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  irqIdx_24 = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = pConfig_23(D)->pIntRouteConfig;
  _3 = _2->aIrqConfig;
  _4 = irqIdx_19 * 12;
  _5 = _3 + _4;
  _6 = _5->eIrqNumber;
  IntCtrl_Ip_ClearPending (_6);
  _7 = pConfig_23(D)->pIntRouteConfig;
  _8 = _7->aIrqConfig;
  _9 = irqIdx_19 * 12;
  _10 = _8 + _9;
  _11 = _10->eIrqNumber;
  _12 = pConfig_23(D)->pIntRouteConfig;
  _13 = _12->aIrqConfig;
  _14 = irqIdx_19 * 12;
  _15 = _13 + _14;
  _16 = _15->pfHandler;
  IntCtrl_Ip_InstallHandler (_11, _16, 0B);
  irqIdx_27 = irqIdx_19 + 1;

  <bb 5> :
  # irqIdx_19 = PHI <irqIdx_24(3), irqIdx_27(4)>
  _17 = pConfig_23(D)->pIntRouteConfig;
  _18 = _17->u32ConfigIrqCount;
  if (irqIdx_19 < _18)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

}


Platform_Ipw_Init (const struct Platform_Ipw_ConfigType * pConfig)
{
  Std_ReturnType ret;
  const struct IntCtrl_Ip_CtrlConfigType * _1;
  const struct IntCtrl_Ip_CtrlConfigType * _2;
  const struct Platform_SystemConfigType * _3;

  <bb 2> :
  ret_6 = 0;
  _1 = pConfig_8(D)->pIntCtrlConfig;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = pConfig_8(D)->pIntCtrlConfig;
  ret_10 = Platform_Ipw_InitIntCtrl (_2);

  <bb 4> :
  # ret_4 = PHI <ret_6(2), ret_10(3)>
  if (ret_4 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = pConfig_8(D)->aSystemConfig;

  <bb 6> :
  return;

}


Platform_Ipw_InitIntCtrl (const struct IntCtrl_Ip_CtrlConfigType * pIntCtrlCtrlConfig)
{
  uint32 irqIdx;
  Std_ReturnType D.6350;
  const struct IntCtrl_Ip_IrqConfigType * _1;
  long unsigned int _2;
  const struct IntCtrl_Ip_IrqConfigType * _3;
  <unnamed type> _4;
  const struct IntCtrl_Ip_IrqConfigType * _5;
  long unsigned int _6;
  const struct IntCtrl_Ip_IrqConfigType * _7;
  unsigned char _8;
  const struct IntCtrl_Ip_IrqConfigType * _9;
  long unsigned int _10;
  const struct IntCtrl_Ip_IrqConfigType * _11;
  _Bool _12;
  const struct IntCtrl_Ip_IrqConfigType * _13;
  long unsigned int _14;
  const struct IntCtrl_Ip_IrqConfigType * _15;
  <unnamed type> _16;
  const struct IntCtrl_Ip_IrqConfigType * _17;
  long unsigned int _18;
  const struct IntCtrl_Ip_IrqConfigType * _19;
  <unnamed type> _20;
  long unsigned int _21;
  Std_ReturnType _28;

  <bb 2> :
  irqIdx_25 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = pIntCtrlCtrlConfig_27(D)->aIrqConfig;
  _2 = irqIdx_22 * 8;
  _3 = _1 + _2;
  _4 = _3->eIrqNumber;
  _5 = pIntCtrlCtrlConfig_27(D)->aIrqConfig;
  _6 = irqIdx_22 * 8;
  _7 = _5 + _6;
  _8 = _7->u8IrqPriority;
  IntCtrl_Ip_SetPriority (_4, _8);
  _9 = pIntCtrlCtrlConfig_27(D)->aIrqConfig;
  _10 = irqIdx_22 * 8;
  _11 = _9 + _10;
  _12 = _11->bIrqEnabled;
  if (_12 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = pIntCtrlCtrlConfig_27(D)->aIrqConfig;
  _14 = irqIdx_22 * 8;
  _15 = _13 + _14;
  _16 = _15->eIrqNumber;
  IntCtrl_Ip_EnableIrq (_16);
  goto <bb 6>; [INV]

  <bb 5> :
  _17 = pIntCtrlCtrlConfig_27(D)->aIrqConfig;
  _18 = irqIdx_22 * 8;
  _19 = _17 + _18;
  _20 = _19->eIrqNumber;
  IntCtrl_Ip_DisableIrq (_20);

  <bb 6> :
  irqIdx_32 = irqIdx_22 + 1;

  <bb 7> :
  # irqIdx_22 = PHI <irqIdx_25(2), irqIdx_32(6)>
  _21 = pIntCtrlCtrlConfig_27(D)->u32ConfigIrqCount;
  if (irqIdx_22 < _21)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _28 = 0;

  <bb 9> :
<L6>:
  return _28;

}


