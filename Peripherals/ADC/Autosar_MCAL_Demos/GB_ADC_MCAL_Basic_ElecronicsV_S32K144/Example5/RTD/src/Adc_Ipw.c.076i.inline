IPA summary for Adc_GetCoreID/21 is missing.
IPA summary for Adc_Ipw_Calibrate/20 is missing.
IPA summary for Adc_Ipw_SetClockMode/19 is missing.
IPA summary for Adc_Ipw_CheckConversionValuesInRange/18 is missing.
IPA summary for Adc_Ipw_GetConvData/17 is missing.
IPA summary for Adc_Ipw_ReadGroup/16 is missing.
IPA summary for Adc_Ipw_CheckValidConversion/15 is missing.
IPA summary for Adc_Ipw_DisableHardwareTrigger/14 is missing.
IPA summary for Adc_Ipw_EnableHardwareTrigger/13 is missing.
IPA summary for Adc_Ipw_StopCurrentConversion/12 is missing.
IPA summary for Adc_Ipw_StartNormalConversion/11 is missing.
IPA summary for Adc_Ipw_DeInit/10 is missing.
IPA summary for Adc_Ipw_Init/9 is missing.
IPA summary for Adc_Ipw_StartHwTrigConversion/8 is missing.
IPA summary for Adc_Ipw_ConfigureConversion/7 is missing.
IPA summary for Adc_Ipw_CalculateNumsBitShift/6 is missing.
IPA summary for Adc_Ipw_StopConversionCheckTimeout/5 is missing.
IPA summary for Adc_Ipw_ConfigurePdbConversion/4 is missing.
IPA summary for Adc_Ipw_ConfigurePdbChannels/3 is missing.
IPA summary for Adc_Ipw_WriteDataBuffer/2 is missing.
IPA summary for Adc_Ipw_ReadGroupNoInt/1 is missing.
IPA summary for Adc_Ipw_ReadGroupConvData/0 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       12 calls, 12.000000 freq, 0 count
function body not available                       :       37 calls, 37.000000 freq, 0 count
IPA summary for Adc_GetCoreID/21 is missing.
IPA summary for Adc_Ipw_Calibrate/20 is missing.
IPA summary for Adc_Ipw_SetClockMode/19 is missing.
IPA summary for Adc_Ipw_CheckConversionValuesInRange/18 is missing.
IPA summary for Adc_Ipw_GetConvData/17 is missing.
IPA summary for Adc_Ipw_ReadGroup/16 is missing.
IPA summary for Adc_Ipw_CheckValidConversion/15 is missing.
IPA summary for Adc_Ipw_DisableHardwareTrigger/14 is missing.
IPA summary for Adc_Ipw_EnableHardwareTrigger/13 is missing.
IPA summary for Adc_Ipw_StopCurrentConversion/12 is missing.
IPA summary for Adc_Ipw_StartNormalConversion/11 is missing.
IPA summary for Adc_Ipw_DeInit/10 is missing.
IPA summary for Adc_Ipw_Init/9 is missing.
IPA summary for Adc_Ipw_StartHwTrigConversion/8 is missing.
IPA summary for Adc_Ipw_ConfigureConversion/7 is missing.
IPA summary for Adc_Ipw_CalculateNumsBitShift/6 is missing.
IPA summary for Adc_Ipw_StopConversionCheckTimeout/5 is missing.
IPA summary for Adc_Ipw_ConfigurePdbConversion/4 is missing.
IPA summary for Adc_Ipw_ConfigurePdbChannels/3 is missing.
IPA summary for Adc_Ipw_WriteDataBuffer/2 is missing.
IPA summary for Adc_Ipw_ReadGroupNoInt/1 is missing.
IPA summary for Adc_Ipw_ReadGroupConvData/0 is missing.
Symbol table:

Adc_Ip_DoCalibration/47 (Adc_Ip_DoCalibration) @070cf8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_Calibrate/20 
  Calls: 
Adc_Ip_SetClockMode/46 (Adc_Ip_SetClockMode) @070cf700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_SetClockMode/19 Adc_Ipw_SetClockMode/19 
  Calls: 
Adc_Ip_GetChanData/45 (Adc_Ip_GetChanData) @070cf2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_GetConvData/17 
  Calls: 
Adc_Ip_GetConvCompleteFlag/44 (Adc_Ip_GetConvCompleteFlag) @070b6e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_CheckValidConversion/15 
  Calls: 
Adc_Ip_SetContinuousMode/43 (Adc_Ip_SetContinuousMode) @070b6a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_StopConversionCheckTimeout/5 
  Calls: 
Pdb_Adc_Ip_DisableAndClearPdb/42 (Pdb_Adc_Ip_DisableAndClearPdb) @070b69a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_DisableHardwareTrigger/14 Adc_Ipw_StopConversionCheckTimeout/5 
  Calls: 
Adc_Ip_SetDisabledChannel/41 (Adc_Ip_SetDisabledChannel) @070b67e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_StopCurrentConversion/12 Adc_Ipw_StopConversionCheckTimeout/5 
  Calls: 
Adc_Ip_SetTriggerMode/40 (Adc_Ip_SetTriggerMode) @070b6620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_StartNormalConversion/11 
  Calls: 
Adc_Ip_GetConvData/39 (Adc_Ip_GetConvData) @070b6540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ReadGroupConvData/0 Adc_Ipw_EnableHardwareTrigger/13 Adc_Ipw_StopCurrentConversion/12 Adc_Ipw_StartNormalConversion/11 
  Calls: 
Pdb_Adc_Ip_SetContinuousMode/38 (Pdb_Adc_Ip_SetContinuousMode) @070b6460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_StartNormalConversion/11 
  Calls: 
Pdb_Adc_Ip_DeInit/37 (Pdb_Adc_Ip_DeInit) @070b60e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_DeInit/10 
  Calls: 
Adc_Ip_DeInit/36 (Adc_Ip_DeInit) @070b6000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_DeInit/10 
  Calls: 
Pdb_Adc_Ip_Init/35 (Pdb_Adc_Ip_Init) @06a969a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_Init/9 
  Calls: 
Adc_Ip_Init/34 (Adc_Ip_Init) @06a960e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_Init/9 
  Calls: 
Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 (Pdb_Adc_Ip_SetAdcPretriggerDelayValue) @06a96c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbChannels/3 Adc_Ipw_ConfigurePdbChannels/3 Adc_Ipw_ConfigurePdbChannels/3 Adc_Ipw_ConfigurePdbChannels/3 Adc_Ipw_ConfigurePdbChannels/3 
  Calls: 
Pdb_Adc_Ip_SwTrigger/32 (Pdb_Adc_Ip_SwTrigger) @06a968c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 
  Calls: 
Pdb_Adc_Ip_ConfigAdcPretriggers/31 (Pdb_Adc_Ip_ConfigAdcPretriggers) @06a967e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 Adc_Ipw_ConfigurePdbChannels/3 
  Calls: 
Pdb_Adc_Ip_LoadRegValues/30 (Pdb_Adc_Ip_LoadRegValues) @06a96700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 Adc_Ipw_ConfigurePdbChannels/3 
  Calls: 
Pdb_Adc_Ip_SetModulus/29 (Pdb_Adc_Ip_SetModulus) @06a96620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 
  Calls: 
Pdb_Adc_Ip_SetTriggerInput/28 (Pdb_Adc_Ip_SetTriggerInput) @06a96540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 
  Calls: 
Pdb_Adc_Ip_Enable/27 (Pdb_Adc_Ip_Enable) @06a96460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_ConfigurePdbConversion/4 
  Calls: 
Adc_aUnitStatus/26 (Adc_aUnitStatus) @06a9b678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Adc_Ipw_DisableHardwareTrigger/14 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_StopConversionCheckTimeout/5 (read)Adc_Ipw_EnableHardwareTrigger/13 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_StopCurrentConversion/12 (read)Adc_Ipw_StartNormalConversion/11 (write)Adc_Ipw_ConfigureConversion/7 (write)Adc_Ipw_StartHwTrigConversion/8 (write)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_ReadGroup/16 (read)Adc_Ipw_ReadGroup/16 (read)
  Availability: not_available
  Varpool flags:
Adc_Ip_ConfigChannel/25 (Adc_Ip_ConfigChannel) @06a962a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Adc_Ipw_DisableHardwareTrigger/14 Adc_Ipw_ConfigureConversion/7 Adc_Ipw_ConfigureConversion/7 Adc_Ipw_ConfigureConversion/7 
  Calls: 
Adc_aRuntimeGroupChannel/24 (Adc_aRuntimeGroupChannel) @06a9b558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_ConfigurePdbChannels/3 (read)Adc_Ipw_WriteDataBuffer/2 (read)Adc_Ipw_DeInit/10 (write)Adc_Ipw_ReadGroupConvData/0 (read)Adc_Ipw_DeInit/10 (write)Adc_Ipw_DeInit/10 (write)Adc_Ipw_ConfigurePdbChannels/3 (read)Adc_Ipw_ConfigurePdbConversion/4 (read)Adc_Ipw_DeInit/10 (write)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_StartHwTrigConversion/8 (write)Adc_Ipw_StartNormalConversion/11 (write)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_ReadGroupConvData/0 (read)Adc_Ipw_ReadGroupConvData/0 (read)Adc_Ipw_ReadGroupNoInt/1 (read)
  Availability: not_available
  Varpool flags:
Adc_aGroupStatus/23 (Adc_aGroupStatus) @06a9b510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Adc_Ipw_ConfigurePdbChannels/3 (read)Adc_Ipw_StopCurrentConversion/12 (write)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_WriteDataBuffer/2 (read)Adc_Ipw_ReadGroupConvData/0 (write)Adc_Ipw_WriteDataBuffer/2 (read)Adc_Ipw_ConfigurePdbConversion/4 (write)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_ConfigurePdbConversion/4 (read)Adc_Ipw_StartHwTrigConversion/8 (write)Adc_Ipw_DeInit/10 (write)Adc_Ipw_StartNormalConversion/11 (write)Adc_Ipw_EnableHardwareTrigger/13 (write)Adc_Ipw_StartHwTrigConversion/8 (write)Adc_Ipw_ConfigurePdbConversion/4 (read)Adc_Ipw_ReadGroupConvData/0 (write)Adc_Ipw_ReadGroup/16 (read)
  Availability: not_available
  Varpool flags:
Adc_pCfgPtr/22 (Adc_pCfgPtr) @06a9b4c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_DeInit/10 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_WriteDataBuffer/2 (read)Adc_Ipw_ConfigurePdbConversion/4 (read)Adc_Ipw_WriteDataBuffer/2 (read)Adc_Ipw_SetClockMode/19 (read)Adc_Ipw_StopConversionCheckTimeout/5 (read)Adc_Ipw_StopConversionCheckTimeout/5 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_StopConversionCheckTimeout/5 (read)Adc_Ipw_StopConversionCheckTimeout/5 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_ConfigureConversion/7 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_StartHwTrigConversion/8 (read)Adc_Ipw_DeInit/10 (read)Adc_Ipw_DeInit/10 (read)Adc_Ipw_ReadGroupConvData/0 (read)Adc_Ipw_ReadGroup/16 (read)Adc_Ipw_ConfigurePdbChannels/3 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_StopCurrentConversion/12 (read)Adc_Ipw_StartNormalConversion/11 (read)Adc_Ipw_ReadGroupConvData/0 (read)Adc_Ipw_CheckConversionValuesInRange/18 (read)Adc_Ipw_DeInit/10 (read)Adc_Ipw_GetConvData/17 (read)Adc_Ipw_ReadGroupNoInt/1 (read)Adc_Ipw_ReadGroup/16 (read)Adc_Ipw_EnableHardwareTrigger/13 (read)Adc_Ipw_DisableHardwareTrigger/14 (read)Adc_Ipw_DeInit/10 (read)Adc_Ipw_SetClockMode/19 (read)Adc_Ipw_SetClockMode/19 (read)Adc_Ipw_SetClockMode/19 (read)Adc_Ipw_Calibrate/20 (read)
  Availability: not_available
  Varpool flags:
Adc_GetCoreID/21 (Adc_GetCoreID) @06a8b620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Adc_Ipw_Calibrate/20 (Adc_Ipw_Calibrate) @06a8b0e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ip_DoCalibration/47 
Adc_Ipw_SetClockMode/19 (Adc_Ipw_SetClockMode) @06a8bd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ip_SetClockMode/46 Adc_Ip_SetClockMode/46 
Adc_Ipw_CheckConversionValuesInRange/18 (Adc_Ipw_CheckConversionValuesInRange) @06a8ba80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_Ipw_ReadGroupConvData/0 
  Calls: 
Adc_Ipw_GetConvData/17 (Adc_Ipw_GetConvData) @06a8b7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ip_GetChanData/45 
Adc_Ipw_ReadGroup/16 (Adc_Ipw_ReadGroup) @06a8b540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (read)Adc_aUnitStatus/26 (read)Adc_aGroupStatus/23 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_WriteDataBuffer/2 Adc_Ipw_ReadGroupNoInt/1 
Adc_Ipw_CheckValidConversion/15 (Adc_Ipw_CheckValidConversion) @06a8b2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_Ipw_ReadGroupNoInt/1 
  Calls: Adc_Ip_GetConvCompleteFlag/44 
Adc_Ipw_DisableHardwareTrigger/14 (Adc_Ipw_DisableHardwareTrigger) @06a8b000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ip_ConfigChannel/25 Pdb_Adc_Ip_DisableAndClearPdb/42 
Adc_Ipw_EnableHardwareTrigger/13 (Adc_Ipw_EnableHardwareTrigger) @06a44b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_aGroupStatus/23 (write)Adc_aUnitStatus/26 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_StartHwTrigConversion/8 Adc_Ip_GetConvData/39 
Adc_Ipw_StopCurrentConversion/12 (Adc_Ipw_StopCurrentConversion) @06a44620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (read)Adc_aGroupStatus/23 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_StopConversionCheckTimeout/5 Adc_Ip_GetConvData/39 Adc_Ip_SetDisabledChannel/41 
Adc_Ipw_StartNormalConversion/11 (Adc_Ipw_StartNormalConversion) @06a440e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_aUnitStatus/26 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (read)Adc_aGroupStatus/23 (read)Adc_aGroupStatus/23 (write)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aUnitStatus/26 (read)Adc_aUnitStatus/26 (write)Adc_aUnitStatus/26 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Adc_Ipw_ConfigureConversion/7 Adc_Ip_SetTriggerMode/40 Adc_Ip_GetConvData/39 Pdb_Adc_Ip_SetContinuousMode/38 
Adc_Ipw_DeInit/10 (Adc_Ipw_DeInit) @06a44d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (write)Adc_aRuntimeGroupChannel/24 (write)Adc_aRuntimeGroupChannel/24 (write)Adc_aRuntimeGroupChannel/24 (write)Adc_aGroupStatus/23 (write)Adc_pCfgPtr/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pdb_Adc_Ip_DeInit/37 Adc_Ip_DeInit/36 
Adc_Ipw_Init/9 (Adc_Ipw_Init) @06a44a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pdb_Adc_Ip_Init/35 Adc_Ip_Init/34 
Adc_Ipw_StartHwTrigConversion/8 (Adc_Ipw_StartHwTrigConversion) @06a447e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aUnitStatus/26 (read)Adc_aUnitStatus/26 (write)Adc_aGroupStatus/23 (write)Adc_aRuntimeGroupChannel/24 (read)Adc_aGroupStatus/23 (write)Adc_aRuntimeGroupChannel/24 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_Ipw_EnableHardwareTrigger/13 
  Calls: Adc_Ipw_ConfigureConversion/7 
Adc_Ipw_ConfigureConversion/7 (Adc_Ipw_ConfigureConversion) @06a44540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aGroupStatus/23 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_Ipw_StartNormalConversion/11 Adc_Ipw_StartHwTrigConversion/8 
  Calls: Adc_Ipw_ConfigurePdbConversion/4 Adc_Ip_ConfigChannel/25 Adc_Ip_ConfigChannel/25 Adc_Ip_ConfigChannel/25 
Adc_Ipw_CalculateNumsBitShift/6 (Adc_Ipw_CalculateNumsBitShift) @06a442a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Adc_Ipw_ReadGroupConvData/0 
  Calls: 
Adc_Ipw_StopConversionCheckTimeout/5 (Adc_Ipw_StopConversionCheckTimeout) @06a44000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aUnitStatus/26 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_StopCurrentConversion/12 
  Calls: Adc_Ip_SetDisabledChannel/41 Adc_Ip_SetContinuousMode/43 Pdb_Adc_Ip_DisableAndClearPdb/42 
Adc_Ipw_ConfigurePdbConversion/4 (Adc_Ipw_ConfigurePdbConversion) @06a7ea80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aGroupStatus/23 (read)Adc_aGroupStatus/23 (read)Adc_aGroupStatus/23 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_ConfigureConversion/7 
  Calls: Pdb_Adc_Ip_SwTrigger/32 Pdb_Adc_Ip_ConfigAdcPretriggers/31 Pdb_Adc_Ip_LoadRegValues/30 Pdb_Adc_Ip_SetModulus/29 Adc_Ipw_ConfigurePdbChannels/3 Pdb_Adc_Ip_SetTriggerInput/28 Pdb_Adc_Ip_Enable/27 
Adc_Ipw_ConfigurePdbChannels/3 (Adc_Ipw_ConfigurePdbChannels) @06a7e540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_aGroupStatus/23 (read)Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_ConfigurePdbConversion/4 
  Calls: Pdb_Adc_Ip_ConfigAdcPretriggers/31 Pdb_Adc_Ip_LoadRegValues/30 Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 Pdb_Adc_Ip_SetAdcPretriggerDelayValue/33 
Adc_Ipw_WriteDataBuffer/2 (Adc_Ipw_WriteDataBuffer) @06a7ec40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aGroupStatus/23 (read)Adc_aGroupStatus/23 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_ReadGroup/16 
  Calls: 
Adc_Ipw_ReadGroupNoInt/1 (Adc_Ipw_ReadGroupNoInt) @06a7e9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_ReadGroup/16 
  Calls: Adc_Ipw_ReadGroupConvData/0 Adc_Ipw_CheckValidConversion/15 
Adc_Ipw_ReadGroupConvData/0 (Adc_Ipw_ReadGroupConvData) @06a7e700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Adc_pCfgPtr/22 (read)Adc_pCfgPtr/22 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aRuntimeGroupChannel/24 (read)Adc_aGroupStatus/23 (write)Adc_aGroupStatus/23 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Adc_Ipw_ReadGroupNoInt/1 
  Calls: Adc_Ipw_CheckConversionValuesInRange/18 Adc_Ip_GetConvData/39 Adc_Ipw_CalculateNumsBitShift/6 

;; Function Adc_Ipw_ReadGroupConvData (Adc_Ipw_ReadGroupConvData, funcdef_no=0, decl_uid=6220, cgraph_uid=1, symbol_order=0)

Adc_Ipw_ReadGroupConvData (const struct Adc_GroupConfigurationType * pGroupPtr, Adc_ValueGroupType * pDataPtr, boolean * pFlag, uint32 u32CoreId)
{
  const Adc_ChannelIndexType ChannelCount;
  boolean bWriteFlag;
  Adc_ChannelType ChIndex;
  const Adc_GroupType Group;
  const uint8 NumsBitShift;
  const Adc_HwUnitType PhysicalHwUnitId;
  const Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType ReadGroupRet;
  Adc_ValueGroupType AdcResult;
  uint8 Channel;
  Std_ReturnType D.6663;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  const struct Adc_ConfigType * _4;
  const struct Adc_Ipw_Config * _5;
  int _6;
  const struct Adc_Ip_ConfigType * _7;
  <unnamed type> _8;
  int _9;
  long unsigned int _10;
  int _11;
  int _12;
  int _13;
  _Bool _14;
  int _15;
  _Bool _16;
  int _17;
  const Adc_GroupDefType * _18;
  unsigned int _19;
  unsigned int _20;
  const Adc_GroupDefType * _21;
  _Bool _22;
  _Bool _23;
  _Bool _24;
  int _25;
  int _26;
  unsigned int _27;
  unsigned int _28;
  Adc_ValueGroupType * _29;
  unsigned char Channel.20_30;
  Std_ReturnType _51;

  <bb 2> :
  ReadGroupRet_39 = 0;
  LogicalHwUnitId_42 = pGroupPtr_41(D)->AdcLogicalUnitId;
  _1 = Adc_pCfgPtr[u32CoreId_43(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_42;
  PhysicalHwUnitId_44 = _2->aAdcPhysicalId[_3];
  _4 = Adc_pCfgPtr[u32CoreId_43(D)];
  _5 = _4->pAdcIpwConfig;
  _6 = (int) LogicalHwUnitId_42;
  _7 = _5->apAdcConfig[_6];
  _8 = _7->Resolution;
  NumsBitShift_46 = Adc_Ipw_CalculateNumsBitShift (_8);
  Group_47 = pGroupPtr_41(D)->GroupId;
  bWriteFlag_48 = 1;
  _9 = (int) Group_47;
  ChannelCount_49 = Adc_aRuntimeGroupChannel[_9].ChannelCount;
  Channel_50 = 0;
  goto <bb 11>; [INV]

  <bb 3> :
  _10 = (long unsigned int) PhysicalHwUnitId_44;
  AdcResult_53 = Adc_Ip_GetConvData (_10, Channel_31);
  _11 = (int) AdcResult_53;
  _12 = (int) NumsBitShift_46;
  _13 = _11 << _12;
  AdcResult_54 = (Adc_ValueGroupType) _13;
  _14 = pGroupPtr_41(D)->bAdcGroupLimitcheck;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _15 = (int) Group_47;
  _16 = Adc_aRuntimeGroupChannel[_15].bAdcRuntimeGroupLimitcheck;
  if (_16 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _17 = (int) Group_47;
  _18 = Adc_aRuntimeGroupChannel[_17].pChannel;
  _19 = (unsigned int) Channel_31;
  _20 = _19 * 2;
  _21 = _18 + _20;
  ChIndex_55 = *_21;
  _22 = Adc_Ipw_CheckConversionValuesInRange (AdcResult_54, LogicalHwUnitId_42, ChIndex_55, u32CoreId_43(D));
  *pFlag_57(D) = _22;
  _23 = *pFlag_57(D);
  _24 = ~_23;
  if (_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _25 = (int) Group_47;
  Adc_aGroupStatus[_25].bLimitCheckFailed ={v} 1;
  ReadGroupRet_61 = 1;
  bWriteFlag_62 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _26 = (int) Group_47;
  Adc_aGroupStatus[_26].bLimitCheckFailed ={v} 0;

  <bb 8> :
  # ReadGroupRet_32 = PHI <ReadGroupRet_33(4), ReadGroupRet_61(6), ReadGroupRet_33(7)>
  # bWriteFlag_34 = PHI <bWriteFlag_35(4), bWriteFlag_62(6), bWriteFlag_35(7)>
  if (bWriteFlag_34 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _27 = (unsigned int) Channel_31;
  _28 = _27 * 2;
  _29 = pDataPtr_63(D) + _28;
  *_29 = AdcResult_54;

  <bb 10> :
  Channel.20_30 = Channel_31;
  Channel_65 = Channel.20_30 + 1;

  <bb 11> :
  # Channel_31 = PHI <Channel_50(2), Channel_65(10)>
  # ReadGroupRet_33 = PHI <ReadGroupRet_39(2), ReadGroupRet_32(10)>
  # bWriteFlag_35 = PHI <bWriteFlag_48(2), bWriteFlag_34(10)>
  if (Channel_31 < ChannelCount_49)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _51 = ReadGroupRet_33;

  <bb 13> :
<L11>:
  return _51;

}



;; Function Adc_Ipw_ReadGroupNoInt (Adc_Ipw_ReadGroupNoInt, funcdef_no=1, decl_uid=6225, cgraph_uid=2, symbol_order=1)

Adc_Ipw_ReadGroupNoInt (const struct Adc_GroupConfigurationType * pGroupPtr, Adc_ValueGroupType * pDataPtr, boolean * pFlag, uint32 u32CoreId)
{
  const Adc_GroupType Group;
  const Adc_HwUnitType PhysicalHwUnitId;
  const Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType ReadGroupRet;
  boolean ValidConversion;
  Adc_ChannelIndexType ChannelCount;
  Std_ReturnType D.6653;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  int _4;
  Std_ReturnType _23;

  <bb 2> :
  ValidConversion_7 = 1;
  ReadGroupRet_8 = 0;
  LogicalHwUnitId_11 = pGroupPtr_10(D)->AdcLogicalUnitId;
  _1 = Adc_pCfgPtr[u32CoreId_12(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_11;
  PhysicalHwUnitId_13 = _2->aAdcPhysicalId[_3];
  Group_14 = pGroupPtr_10(D)->GroupId;
  _4 = (int) Group_14;
  ChannelCount_15 = Adc_aRuntimeGroupChannel[_4].ChannelCount;
  ValidConversion_17 = Adc_Ipw_CheckValidConversion (PhysicalHwUnitId_13, 0, ChannelCount_15);
  if (ValidConversion_17 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ReadGroupRet_22 = Adc_Ipw_ReadGroupConvData (pGroupPtr_10(D), pDataPtr_19(D), pFlag_20(D), u32CoreId_12(D));
  goto <bb 5>; [INV]

  <bb 4> :
  ReadGroupRet_18 = 1;

  <bb 5> :
  # ReadGroupRet_5 = PHI <ReadGroupRet_22(3), ReadGroupRet_18(4)>
  _23 = ReadGroupRet_5;

  <bb 6> :
<L3>:
  return _23;

}



;; Function Adc_Ipw_WriteDataBuffer (Adc_Ipw_WriteDataBuffer, funcdef_no=2, decl_uid=6229, cgraph_uid=3, symbol_order=2)

Adc_Ipw_WriteDataBuffer (const Adc_GroupType Group, Adc_ValueGroupType * pDataPtr, uint32 u32CoreId)
{
  Adc_StreamNumSampleType ResultIndex;
  Adc_ValueGroupType * pResultPtr;
  const Adc_ChannelIndexType ChannelCount;
  const struct Adc_GroupConfigurationType * GroupPtr;
  const Adc_GroupType GroupIndex;
  uint16 ResultOffset;
  uint8 Index;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  int _11;
  short unsigned int _12;
  int _13;
  short unsigned int _14;
  short unsigned int _15;
  Adc_ValueGroupType * * _16;
  unsigned int _17;
  unsigned int _18;
  Adc_ValueGroupType * * _19;
  Adc_ValueGroupType * _20;
  unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  Adc_ValueGroupType * _25;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned char Index.21_29;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_35(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_36(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_37 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_35(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_37;
  _9 = _8 * 68;
  GroupPtr_38 = _7 + _9;
  _10 = (int) Group_36(D);
  ChannelCount_39 = Adc_aRuntimeGroupChannel[_10].ChannelCount;
  pResultPtr_40 = 0B;
  ResultIndex_41 = 0;
  _11 = (int) Group_36(D);
  _12 ={v} Adc_aGroupStatus[_11].ResultIndex;
  ResultIndex_42 = _12 + 65535;
  _13 = (int) Group_36(D);
  _14 ={v} Adc_aGroupStatus[_13].ResultIndex;
  if (_14 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _15 = GroupPtr_38->NumSamples;
  ResultIndex_43 = _15 + 65535;

  <bb 4> :
  # ResultIndex_32 = PHI <ResultIndex_42(2), ResultIndex_43(3)>
  _16 = GroupPtr_38->pResultsBufferPtr;
  _17 = (unsigned int) Group_36(D);
  _18 = _17 * 4;
  _19 = _16 + _18;
  _20 = *_19;
  _21 = (unsigned int) ResultIndex_32;
  _22 = _21 * 2;
  pResultPtr_44 = _20 + _22;
  ResultOffset_45 = GroupPtr_38->NumSamples;
  Index_46 = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _23 = (unsigned int) Index_30;
  _24 = _23 * 2;
  _25 = pDataPtr_47(D) + _24;
  _26 = *pResultPtr_31;
  *_25 = _26;
  _27 = (unsigned int) ResultOffset_45;
  _28 = _27 * 2;
  pResultPtr_49 = pResultPtr_31 + _28;
  Index.21_29 = Index_30;
  Index_50 = Index.21_29 + 1;

  <bb 6> :
  # Index_30 = PHI <Index_46(4), Index_50(5)>
  # pResultPtr_31 = PHI <pResultPtr_44(4), pResultPtr_49(5)>
  if (Index_30 < ChannelCount_39)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}



;; Function Adc_Ipw_ConfigurePdbChannels (Adc_Ipw_ConfigurePdbChannels, funcdef_no=3, decl_uid=6234, cgraph_uid=4, symbol_order=3)

Adc_Ipw_ConfigurePdbChannels (Adc_HwUnitType Unit, Adc_GroupType Group, const struct Adc_GroupConfigurationType * GroupPtr, uint8 NumChannel)
{
  uint32 TempMask;
  Adc_HwUnitType PhysicalHwUnitId;
  struct Pdb_Adc_Ip_PretriggersConfigType PdbPretriggsConfig;
  uint16 CurrentCh;
  const uint16 * GroupDelay;
  uint16 PdbDelay;
  uint8 PdbChannelUsed;
  uint8 LeftChannel;
  uint8 ChUsed;
  uint8 PreTriggerCtr;
  uint8 PdbIndex;
  uint8 D.6578;
  uint8 iftmp.5;
  unsigned char iftmp.4;
  unsigned char _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  const struct Adc_ConfigType * _5;
  const struct Adc_Ipw_Config * _6;
  int _7;
  int _8;
  int _9;
  unsigned char _10;
  const struct Adc_Ipw_GroupConfig * _11;
  _Bool _12;
  const struct Adc_Ipw_GroupConfig * _13;
  _Bool _14;
  _Bool _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  int _22;
  int _23;
  int _24;
  unsigned int _25;
  unsigned int _26;
  const uint16 * _27;
  short unsigned int _28;
  unsigned char PreTriggerCtr.6_29;
  long unsigned int _30;
  const struct Adc_Ipw_GroupConfig * _31;
  short unsigned int _32;
  short unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  const struct Adc_Ipw_GroupConfig * _36;
  short unsigned int _37;
  short unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  short unsigned int _41;
  const struct Adc_Ipw_GroupConfig * _42;
  _Bool _43;
  unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  unsigned char _47;
  unsigned char _48;
  unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  unsigned char _52;
  unsigned char _53;
  unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned char _57;
  long unsigned int _58;
  unsigned char PdbIndex.7_59;
  unsigned char iftmp.4_69;
  uint8 iftmp.5_70;
  unsigned char iftmp.4_80;
  unsigned char iftmp.4_81;
  uint8 _92;
  uint8 iftmp.5_94;
  uint8 iftmp.5_95;

  <bb 2> :
  LeftChannel_79 = NumChannel_78(D);
  _1 = NumChannel_78(D) & 7;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = NumChannel_78(D) / 8;
  iftmp.4_81 = _2 + 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4_80 = NumChannel_78(D) / 8;

  <bb 5> :
  # iftmp.4_69 = PHI <iftmp.4_81(3), iftmp.4_80(4)>
  PdbChannelUsed_82 = iftmp.4_69;
  GroupDelay_83 = 0B;
  _3 = (int) Group_84(D);
  _4 = Adc_aGroupStatus[_3].CurrentChannel;
  CurrentCh_86 = (uint16) _4;
  _5 = Adc_pCfgPtr[0];
  _6 = _5->pAdcIpwConfig;
  _7 = (int) Unit_87(D);
  PhysicalHwUnitId_88 = _6->aAdcPhysicalId[_7];
  _8 = (int) Group_84(D);
  TempMask_89 = Adc_aRuntimeGroupChannel[_8].u32Mask;
  _9 = (int) Group_84(D);
  GroupDelay_90 = Adc_aRuntimeGroupChannel[_9].pu16Delays;
  PdbIndex_91 = 0;
  goto <bb 33>; [INV]

  <bb 6> :
  _10 = LeftChannel_62 >> 3;
  if (_10 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.5_95 = LeftChannel_62;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.5_94 = 8;

  <bb 9> :
  # iftmp.5_70 = PHI <iftmp.5_95(7), iftmp.5_94(8)>
  ChUsed_96 = iftmp.5_70;
  _11 = GroupPtr_97(D)->pAdcIpwGroupConfig;
  _12 = _11->AdcGroupEnableChannelDelays;
  if (_12 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 10> :
  if (GroupDelay_90 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 11> :
  _13 = GroupPtr_97(D)->pAdcIpwGroupConfig;
  _14 = _13->AdcGroupEnableBackToBack;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 12> :
  _16 = (unsigned int) ChUsed_96;
  _17 = 8 - _16;
  _18 = 255 >> _17;
  _19 = (unsigned char) _18;
  PdbPretriggsConfig.EnableDelayMask = _19;
  PreTriggerCtr_105 = 0;
  goto <bb 18>; [INV]

  <bb 13> :
  _20 = TempMask_64 & 1;
  if (_20 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _21 = (long unsigned int) PhysicalHwUnitId_88;
  _22 = (int) CurrentCh_63;
  _23 = (int) PreTriggerCtr_61;
  _24 = _22 + _23;
  _25 = (unsigned int) _24;
  _26 = _25 * 2;
  _27 = GroupDelay_90 + _26;
  _28 = *_27;
  Pdb_Adc_Ip_SetAdcPretriggerDelayValue (_21, PdbIndex_60, PreTriggerCtr_61, _28);

  <bb 15> :
  TempMask_107 = TempMask_64 >> 1;
  if (TempMask_107 == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  goto <bb 19>; [INV]

  <bb 17> :
  PreTriggerCtr.6_29 = PreTriggerCtr_61;
  PreTriggerCtr_108 = PreTriggerCtr.6_29 + 1;

  <bb 18> :
  # PreTriggerCtr_61 = PHI <PreTriggerCtr_105(12), PreTriggerCtr_108(17)>
  # TempMask_64 = PHI <TempMask_68(12), TempMask_107(17)>
  if (PreTriggerCtr_61 < ChUsed_96)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  # TempMask_65 = PHI <TempMask_107(16), TempMask_64(18)>
  goto <bb 23>; [INV]

  <bb 20> :
  if (PdbIndex_60 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  PdbPretriggsConfig.EnableDelayMask = 1;
  PdbDelay_102 = *GroupDelay_90;
  _30 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_SetAdcPretriggerDelayValue (_30, PdbIndex_60, 0, PdbDelay_102);
  goto <bb 23>; [INV]

  <bb 22> :
  PdbPretriggsConfig.EnableDelayMask = 1;
  _31 = GroupPtr_97(D)->pAdcIpwGroupConfig;
  _32 = _31->PdbDelay;
  _33 = (short unsigned int) PdbIndex_60;
  PdbDelay_99 = _32 * _33;
  _34 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_SetAdcPretriggerDelayValue (_34, PdbIndex_60, 0, PdbDelay_99);

  <bb 23> :
  # TempMask_66 = PHI <TempMask_65(19), TempMask_68(21), TempMask_68(22)>
  goto <bb 27>; [INV]

  <bb 24> :
  if (PdbIndex_60 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  PdbPretriggsConfig.EnableDelayMask = 1;
  _35 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_SetAdcPretriggerDelayValue (_35, PdbIndex_60, 0, 0);
  goto <bb 27>; [INV]

  <bb 26> :
  PdbPretriggsConfig.EnableDelayMask = 1;
  _36 = GroupPtr_97(D)->pAdcIpwGroupConfig;
  _37 = _36->PdbDelay;
  _38 = (short unsigned int) PdbIndex_60;
  PdbDelay_110 = _37 * _38;
  _39 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_SetAdcPretriggerDelayValue (_39, PdbIndex_60, 0, PdbDelay_110);

  <bb 27> :
  # TempMask_67 = PHI <TempMask_66(23), TempMask_68(25), TempMask_68(26)>
  _40 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_LoadRegValues (_40);
  LeftChannel_115 = LeftChannel_62 - ChUsed_96;
  _41 = (short unsigned int) ChUsed_96;
  CurrentCh_116 = CurrentCh_63 + _41;
  _42 = GroupPtr_97(D)->pAdcIpwGroupConfig;
  _43 = _42->AdcGroupEnableBackToBack;
  if (_43 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 28> :
  if (PdbIndex_60 == 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _44 = (unsigned int) ChUsed_96;
  _45 = 8 - _44;
  _46 = 255 >> _45;
  _47 = (unsigned char) _46;
  _48 = _47 + 255;
  PdbPretriggsConfig.BackToBackEnableMask = _48;
  goto <bb 32>; [INV]

  <bb 30> :
  _49 = (unsigned int) ChUsed_96;
  _50 = 8 - _49;
  _51 = 255 >> _50;
  _52 = (unsigned char) _51;
  _53 = _52 + 255;
  PdbPretriggsConfig.BackToBackEnableMask = _53;
  goto <bb 32>; [INV]

  <bb 31> :
  PdbPretriggsConfig.BackToBackEnableMask = 0;

  <bb 32> :
  _54 = (unsigned int) ChUsed_96;
  _55 = 8 - _54;
  _56 = 255 >> _55;
  _57 = (unsigned char) _56;
  PdbPretriggsConfig.EnableMask = _57;
  _58 = (long unsigned int) PhysicalHwUnitId_88;
  Pdb_Adc_Ip_ConfigAdcPretriggers (_58, PdbIndex_60, &PdbPretriggsConfig);
  PdbIndex.7_59 = PdbIndex_60;
  PdbIndex_122 = PdbIndex.7_59 + 1;

  <bb 33> :
  # PdbIndex_60 = PHI <PdbIndex_91(5), PdbIndex_122(32)>
  # LeftChannel_62 = PHI <LeftChannel_79(5), LeftChannel_115(32)>
  # CurrentCh_63 = PHI <CurrentCh_86(5), CurrentCh_116(32)>
  # TempMask_68 = PHI <TempMask_89(5), TempMask_67(32)>
  if (PdbIndex_60 < PdbChannelUsed_82)
    goto <bb 6>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _92 = PdbIndex_60;
  PdbPretriggsConfig ={v} {CLOBBER};

  <bb 35> :
<L36>:
  return _92;

}



;; Function Adc_Ipw_ConfigurePdbConversion (Adc_Ipw_ConfigurePdbConversion, funcdef_no=4, decl_uid=6240, cgraph_uid=5, symbol_order=4)

Adc_Ipw_ConfigurePdbConversion (Adc_HwUnitType Unit, Adc_GroupType Group, const struct Adc_GroupConfigurationType * GroupPtr, Adc_HwTriggerTimerType Trigger, uint8 NumChannel)
{
  Adc_HwUnitType PhysicalHwUnitId;
  struct Pdb_Adc_Ip_PretriggersConfigType PdbPretriggsConfig;
  const uint16 * GroupDelay;
  uint16 PdbPeriod;
  uint8 PdbChannelUsed;
  uint8 PdbIndex;
  unsigned char iftmp.2;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  unsigned char _4;
  unsigned char _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  <unnamed type> _9;
  unsigned char _10;
  const struct Adc_Ipw_GroupConfig * _11;
  const struct Adc_Ipw_GroupConfig * _12;
  _Bool _13;
  const struct Adc_Ipw_GroupConfig * _14;
  _Bool _15;
  _Bool _16;
  int _17;
  unsigned char _18;
  int _19;
  int _20;
  int _21;
  sizetype _22;
  sizetype _23;
  sizetype _24;
  const uint16 * _25;
  short unsigned int _26;
  const struct Adc_Ipw_GroupConfig * _27;
  short unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  short unsigned int _31;
  short unsigned int _32;
  const struct Adc_Ipw_GroupConfig * _33;
  short unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  short unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  unsigned char PdbIndex.3_41;
  int _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  long unsigned int _46;
  unsigned char iftmp.2_49;
  unsigned char iftmp.2_58;
  unsigned char iftmp.2_59;

  <bb 2> :
  PdbPeriod_52 = 0;
  GroupDelay_53 = 0B;
  _1 = Adc_pCfgPtr[0];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_55(D);
  PhysicalHwUnitId_56 = _2->aAdcPhysicalId[_3];
  _4 = NumChannel_57(D) & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = NumChannel_57(D) / 8;
  iftmp.2_59 = _5 + 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2_58 = NumChannel_57(D) / 8;

  <bb 5> :
  # iftmp.2_49 = PHI <iftmp.2_59(3), iftmp.2_58(4)>
  PdbChannelUsed_60 = iftmp.2_49;
  _6 = (int) Group_61(D);
  GroupDelay_62 = Adc_aRuntimeGroupChannel[_6].pu16Delays;
  _7 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_Enable (_7);
  _8 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_SetTriggerInput (_8, Trigger_64(D));
  PdbIndex_68 = Adc_Ipw_ConfigurePdbChannels (Unit_55(D), Group_61(D), GroupPtr_66(D), NumChannel_57(D));
  _9 = GroupPtr_66(D)->eMode;
  if (_9 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _10 = GroupPtr_66(D)->u8AdcWithoutInterrupt;
  if (_10 == 1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = GroupPtr_66(D)->pAdcIpwGroupConfig;
  PdbPeriod_69 = _11->PdbPeriod;
  goto <bb 13>; [INV]

  <bb 8> :
  _12 = GroupPtr_66(D)->pAdcIpwGroupConfig;
  _13 = _12->AdcGroupEnableChannelDelays;
  if (_13 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _14 = GroupPtr_66(D)->pAdcIpwGroupConfig;
  _15 = _14->AdcGroupEnableBackToBack;
  _16 = ~_15;
  if (_16 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _17 = (int) Group_61(D);
  _18 = Adc_aGroupStatus[_17].CurrentChannel;
  _19 = (int) _18;
  _20 = (int) NumChannel_57(D);
  _21 = _19 + _20;
  _22 = (sizetype) _21;
  _23 = _22 + 2147483647;
  _24 = _23 * 2;
  _25 = GroupDelay_62 + _24;
  PdbPeriod_72 = *_25;
  goto <bb 13>; [INV]

  <bb 11> :
  _26 = *GroupDelay_62;
  _27 = GroupPtr_66(D)->pAdcIpwGroupConfig;
  _28 = _27->PdbDelay;
  _29 = (unsigned int) PdbChannelUsed_60;
  _30 = _29 + 4294967295;
  _31 = (short unsigned int) _30;
  _32 = _28 * _31;
  PdbPeriod_71 = _26 + _32;
  goto <bb 13>; [INV]

  <bb 12> :
  _33 = GroupPtr_66(D)->pAdcIpwGroupConfig;
  _34 = _33->PdbDelay;
  _35 = (unsigned int) PdbChannelUsed_60;
  _36 = _35 + 4294967295;
  _37 = (short unsigned int) _36;
  PdbPeriod_70 = _34 * _37;

  <bb 13> :
  # PdbPeriod_48 = PHI <PdbPeriod_69(7), PdbPeriod_71(11), PdbPeriod_70(12), PdbPeriod_72(10)>
  _38 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_SetModulus (_38, PdbPeriod_48);
  _39 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_LoadRegValues (_39);
  PdbPretriggsConfig.EnableMask = 0;
  PdbPretriggsConfig.EnableDelayMask = 0;
  PdbPretriggsConfig.BackToBackEnableMask = 0;
  goto <bb 15>; [INV]

  <bb 14> :
  _40 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_ConfigAdcPretriggers (_40, PdbIndex_47, &PdbPretriggsConfig);
  PdbIndex.3_41 = PdbIndex_47;
  PdbIndex_82 = PdbIndex.3_41 + 1;

  <bb 15> :
  # PdbIndex_47 = PHI <PdbIndex_68(13), PdbIndex_82(14)>
  if (PdbIndex_47 <= 1)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _42 = (int) Group_61(D);
  _43 = Adc_aGroupStatus[_42].CurrentChannel;
  _44 = (int) Group_61(D);
  _45 = NumChannel_57(D) + _43;
  Adc_aGroupStatus[_44].CurrentChannel = _45;
  if (Trigger_64(D) == 15)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _46 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_SwTrigger (_46);

  <bb 18> :
  PdbPretriggsConfig ={v} {CLOBBER};
  return;

}



;; Function Adc_Ipw_StopConversionCheckTimeout (Adc_Ipw_StopConversionCheckTimeout, funcdef_no=5, decl_uid=6244, cgraph_uid=6, symbol_order=5)

Adc_Ipw_StopConversionCheckTimeout (Adc_HwUnitType Unit, Adc_GroupType Group, uint32 u32CoreId)
{
  uint8 ChIndex;
  Adc_Ip_StatusType IPLStatus;
  Std_ReturnType Status;
  const Adc_HwUnitType PhysicalHwUnitId;
  const Adc_GroupType GroupIndex;
  Std_ReturnType D.6622;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_Ipw_Config * _7;
  int _8;
  long unsigned int _9;
  const struct Adc_ConfigType * _10;
  const struct Adc_GroupConfigurationType * _11;
  unsigned int _12;
  unsigned int _13;
  const struct Adc_GroupConfigurationType * _14;
  unsigned char _15;
  const struct Adc_ConfigType * _16;
  const struct Adc_GroupConfigurationType * _17;
  unsigned int _18;
  unsigned int _19;
  const struct Adc_GroupConfigurationType * _20;
  <unnamed type> _21;
  long unsigned int _22;
  long unsigned int _23;
  unsigned char ChIndex.16_24;
  int _25;
  unsigned char _26;
  Std_ReturnType _42;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_33(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_34(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_35 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_33(D)];
  _7 = _6->pAdcIpwConfig;
  _8 = (int) Unit_36(D);
  PhysicalHwUnitId_37 = _7->aAdcPhysicalId[_8];
  Status_38 = 0;
  _9 = (long unsigned int) PhysicalHwUnitId_37;
  Pdb_Adc_Ip_DisableAndClearPdb (_9);
  _10 = Adc_pCfgPtr[u32CoreId_33(D)];
  _11 = _10->pGroups;
  _12 = (unsigned int) GroupIndex_35;
  _13 = _12 * 68;
  _14 = _11 + _13;
  _15 = _14->u8AdcWithoutInterrupt;
  if (_15 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _16 = Adc_pCfgPtr[u32CoreId_33(D)];
  _17 = _16->pGroups;
  _18 = (unsigned int) GroupIndex_35;
  _19 = _18 * 68;
  _20 = _17 + _19;
  _21 = _20->eMode;
  if (_21 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _22 = (long unsigned int) PhysicalHwUnitId_37;
  Adc_Ip_SetContinuousMode (_22, 0);

  <bb 5> :
  ChIndex_41 = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _23 = (long unsigned int) PhysicalHwUnitId_37;
  IPLStatus_44 = Adc_Ip_SetDisabledChannel (_23, ChIndex_29, 1);
  if (IPLStatus_44 == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Status_45 = 1;

  <bb 8> :
  # Status_27 = PHI <Status_28(6), Status_45(7)>
  ChIndex.16_24 = ChIndex_29;
  ChIndex_46 = ChIndex.16_24 + 1;

  <bb 9> :
  # Status_28 = PHI <Status_38(5), Status_27(8)>
  # ChIndex_29 = PHI <ChIndex_41(5), ChIndex_46(8)>
  _25 = (int) Unit_36(D);
  _26 = Adc_aUnitStatus[_25].u8Sc1Used;
  if (ChIndex_29 < _26)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _42 = Status_28;

  <bb 11> :
<L9>:
  return _42;

}



;; Function Adc_Ipw_CalculateNumsBitShift (Adc_Ipw_CalculateNumsBitShift, funcdef_no=6, decl_uid=5988, cgraph_uid=7, symbol_order=6)

Adc_Ipw_CalculateNumsBitShift (Adc_Ip_ResolutionType Resolution)
{
  uint8 NumsBitShift;
  uint8 D.6520;
  uint8 _2;

  <bb 2> :
  NumsBitShift_1 = 0;
  _2 = NumsBitShift_1;

  <bb 3> :
<L0>:
  return _2;

}



;; Function Adc_Ipw_ConfigureConversion (Adc_Ipw_ConfigureConversion, funcdef_no=7, decl_uid=6032, cgraph_uid=8, symbol_order=7)

Adc_Ipw_ConfigureConversion (Adc_HwUnitType Unit, Adc_GroupType Group, Adc_HwTriggerTimerType Trigger, uint8 NumChannel, uint32 u32CoreId)
{
  uint32 TempMask;
  const Adc_GroupDefType * ChannelsDefinition;
  Adc_Ip_InputChannelType Channel;
  const Adc_HwUnitType PhysicalHwUnitId;
  const struct Adc_GroupConfigurationType * GroupPtr;
  const Adc_GroupType GroupIndex;
  struct Adc_Ip_ChanConfigType ChannelConfig;
  Adc_ChannelIndexType CurrentChannel;
  uint8 ChIndex;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  const struct Adc_ConfigType * _10;
  const struct Adc_Ipw_Config * _11;
  int _12;
  int _13;
  int _14;
  int _15;
  const struct Adc_ConfigType * _16;
  const struct Adc_Ipw_Config * _17;
  int _18;
  const struct Adc_Ip_ConfigType * _19;
  const struct Adc_Ip_ChanConfigType * _20;
  int _21;
  int _22;
  int _23;
  unsigned int _24;
  unsigned int _25;
  const Adc_GroupDefType * _26;
  short unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  const struct Adc_Ip_ChanConfigType * _30;
  long unsigned int _31;
  long unsigned int _32;
  unsigned char ChIndex.0_33;
  unsigned int _34;
  unsigned int _35;
  unsigned int _36;
  long unsigned int _37;
  const struct Adc_ConfigType * _38;
  const struct Adc_Ipw_Config * _39;
  int _40;
  const struct Adc_Ip_ConfigType * _41;
  const struct Adc_Ip_ChanConfigType * _42;
  int _43;
  int _44;
  int _45;
  unsigned int _46;
  unsigned int _47;
  const Adc_GroupDefType * _48;
  short unsigned int _49;
  unsigned int _50;
  unsigned int _51;
  const struct Adc_Ip_ChanConfigType * _52;
  unsigned char _53;
  long unsigned int _54;
  long unsigned int _55;
  unsigned char ChIndex.1_56;
  int _57;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_69(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_70(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_71 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_69(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_71;
  _9 = _8 * 68;
  GroupPtr_72 = _7 + _9;
  _10 = Adc_pCfgPtr[u32CoreId_69(D)];
  _11 = _10->pAdcIpwConfig;
  _12 = (int) Unit_73(D);
  PhysicalHwUnitId_74 = _11->aAdcPhysicalId[_12];
  ChannelsDefinition_75 = 0B;
  _13 = (int) Group_70(D);
  CurrentChannel_76 = Adc_aGroupStatus[_13].CurrentChannel;
  _14 = (int) Group_70(D);
  TempMask_77 = Adc_aRuntimeGroupChannel[_14].u32Mask;
  _15 = (int) Group_70(D);
  ChannelsDefinition_78 = Adc_aRuntimeGroupChannel[_15].pChannel;
  ChIndex_79 = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _16 = Adc_pCfgPtr[u32CoreId_69(D)];
  _17 = _16->pAdcIpwConfig;
  _18 = (int) Unit_73(D);
  _19 = _17->apAdcConfig[_18];
  _20 = _19->ChannelConfigs;
  _21 = (int) CurrentChannel_76;
  _22 = (int) ChIndex_58;
  _23 = _21 + _22;
  _24 = (unsigned int) _23;
  _25 = _24 * 2;
  _26 = ChannelsDefinition_78 + _25;
  _27 = *_26;
  _28 = (unsigned int) _27;
  _29 = _28 * 12;
  _30 = _20 + _29;
  Channel_81 = _30->Channel;
  _31 = TempMask_60 & 1;
  if (_31 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  ChannelConfig.ChnIdx = ChIndex_58;
  ChannelConfig.Channel = Channel_81;
  ChannelConfig.InterruptEnable = 0;
  _32 = (long unsigned int) PhysicalHwUnitId_74;
  Adc_Ip_ConfigChannel (_32, &ChannelConfig);

  <bb 5> :
  TempMask_86 = TempMask_60 >> 1;
  if (TempMask_86 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  goto <bb 9>; [INV]

  <bb 7> :
  ChIndex.0_33 = ChIndex_58;
  ChIndex_87 = ChIndex.0_33 + 1;

  <bb 8> :
  # ChIndex_58 = PHI <ChIndex_79(2), ChIndex_87(7)>
  # TempMask_60 = PHI <TempMask_77(2), TempMask_86(7)>
  _34 = (unsigned int) ChIndex_58;
  _35 = (unsigned int) NumChannel_80(D);
  _36 = _35 + 4294967295;
  if (_34 < _36)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # TempMask_61 = PHI <TempMask_86(6), TempMask_60(8)>
  _37 = TempMask_61 & 1;
  if (_37 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  _38 = Adc_pCfgPtr[u32CoreId_69(D)];
  _39 = _38->pAdcIpwConfig;
  _40 = (int) Unit_73(D);
  _41 = _39->apAdcConfig[_40];
  _42 = _41->ChannelConfigs;
  _43 = (int) CurrentChannel_76;
  _44 = (int) ChIndex_58;
  _45 = _43 + _44;
  _46 = (unsigned int) _45;
  _47 = _46 * 2;
  _48 = ChannelsDefinition_78 + _47;
  _49 = *_48;
  _50 = (unsigned int) _49;
  _51 = _50 * 12;
  _52 = _42 + _51;
  Channel_88 = _52->Channel;
  ChannelConfig.ChnIdx = ChIndex_58;
  ChannelConfig.Channel = Channel_88;
  _53 = GroupPtr_72->u8AdcWithoutInterrupt;
  if (_53 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  ChannelConfig.InterruptEnable = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  ChannelConfig.InterruptEnable = 0;

  <bb 13> :
  _54 = (long unsigned int) PhysicalHwUnitId_74;
  Adc_Ip_ConfigChannel (_54, &ChannelConfig);

  <bb 14> :
  ChIndex_94 = NumChannel_80(D);
  goto <bb 16>; [INV]

  <bb 15> :
  ChannelConfig.ChnIdx = ChIndex_59;
  ChannelConfig.Channel = 31;
  ChannelConfig.InterruptEnable = 0;
  _55 = (long unsigned int) PhysicalHwUnitId_74;
  Adc_Ip_ConfigChannel (_55, &ChannelConfig);
  ChIndex.1_56 = ChIndex_59;
  ChIndex_103 = ChIndex.1_56 + 1;

  <bb 16> :
  # ChIndex_59 = PHI <ChIndex_94(14), ChIndex_103(15)>
  if (ChIndex_59 <= 15)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _57 = (int) Unit_73(D);
  Adc_aUnitStatus[_57].u8Sc1Used = NumChannel_80(D);
  Adc_Ipw_ConfigurePdbConversion (Unit_73(D), Group_70(D), GroupPtr_72, Trigger_96(D), NumChannel_80(D));
  ChannelConfig ={v} {CLOBBER};
  return;

}



;; Function Adc_Ipw_StartHwTrigConversion (Adc_Ipw_StartHwTrigConversion, funcdef_no=8, decl_uid=6036, cgraph_uid=9, symbol_order=8)

Adc_Ipw_StartHwTrigConversion (Adc_HwUnitType Unit, Adc_GroupType Group, uint32 u32CoreId)
{
  const struct Adc_GroupConfigurationType * GroupPtr;
  const Adc_GroupType GroupIndex;
  uint8 NumChannel;
  unsigned char iftmp.8;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  unsigned char _11;
  int _12;
  unsigned char _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  <unnamed type> _18;
  int _19;
  _Bool _20;
  int _21;
  int _22;
  unsigned char iftmp.8_23;
  unsigned char iftmp.8_31;
  unsigned char iftmp.8_32;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_27(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_28(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_29 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_27(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_29;
  _9 = _8 * 68;
  GroupPtr_30 = _7 + _9;
  _10 = (int) Group_28(D);
  _11 = Adc_aRuntimeGroupChannel[_10].ChannelCount;
  if (_11 <= 15)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = (int) Group_28(D);
  _13 = Adc_aRuntimeGroupChannel[_12].ChannelCount;
  iftmp.8_32 = _13 & 15;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8_31 = 16;

  <bb 5> :
  # iftmp.8_23 = PHI <iftmp.8_32(3), iftmp.8_31(4)>
  NumChannel_33 = iftmp.8_23;
  _14 = (int) Unit_34(D);
  _15 = Adc_aUnitStatus[_14].u8Sc1Used;
  if (_15 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _16 = (int) Unit_34(D);
  Adc_aUnitStatus[_16].u8Sc1Used = NumChannel_33;

  <bb 7> :
  _17 = (int) Group_28(D);
  Adc_aGroupStatus[_17].CurrentChannel = 0;
  _18 = GroupPtr_30->HwTriggerSource;
  Adc_Ipw_ConfigureConversion (Unit_34(D), Group_28(D), _18, NumChannel_33, u32CoreId_27(D));
  _19 = (int) Group_28(D);
  _20 = Adc_aRuntimeGroupChannel[_19].bRuntimeUpdated;
  if (_20 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _21 = (int) Group_28(D);
  Adc_aGroupStatus[_21].ResultIndex ={v} 0;
  _22 = (int) Group_28(D);
  Adc_aRuntimeGroupChannel[_22].bRuntimeUpdated = 0;

  <bb 9> :
  return;

}



;; Function Adc_Ipw_Init (Adc_Ipw_Init, funcdef_no=9, decl_uid=5991, cgraph_uid=10, symbol_order=9)

Adc_Ipw_Init (const struct Adc_Ipw_Config * pIpwCfg, const uint32 u32CoreId)
{
  Std_ReturnType TimeOutStatus;
  Adc_HwUnitType PhysicalHwUnitId;
  Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType D.6591;
  int _1;
  unsigned char _2;
  int _3;
  long unsigned int _4;
  int _5;
  const struct Adc_Ip_ConfigType * _6;
  long unsigned int _7;
  int _8;
  const struct Pdb_Adc_Ip_ConfigType * _9;
  unsigned char LogicalHwUnitId.9_10;
  Std_ReturnType _19;

  <bb 2> :
  LogicalHwUnitId_14 = 0;
  PhysicalHwUnitId_15 = 0;
  TimeOutStatus_16 = 0;
  LogicalHwUnitId_17 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = (int) LogicalHwUnitId_11;
  _2 = pIpwCfg_20(D)->Mapping.au8Adc_HwUnit[_1];
  if (_2 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = (int) LogicalHwUnitId_11;
  PhysicalHwUnitId_21 = pIpwCfg_20(D)->aAdcPhysicalId[_3];
  _4 = (long unsigned int) PhysicalHwUnitId_21;
  _5 = (int) LogicalHwUnitId_11;
  _6 = pIpwCfg_20(D)->apAdcConfig[_5];
  Adc_Ip_Init (_4, _6);
  _7 = (long unsigned int) PhysicalHwUnitId_21;
  _8 = (int) LogicalHwUnitId_11;
  _9 = pIpwCfg_20(D)->apPdbConfig[_8];
  Pdb_Adc_Ip_Init (_7, _9);

  <bb 5> :
  LogicalHwUnitId.9_10 = LogicalHwUnitId_11;
  LogicalHwUnitId_24 = LogicalHwUnitId.9_10 + 1;

  <bb 6> :
  # LogicalHwUnitId_11 = PHI <LogicalHwUnitId_17(2), LogicalHwUnitId_24(5)>
  if (LogicalHwUnitId_11 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _19 = TimeOutStatus_16;

  <bb 8> :
<L5>:
  return _19;

}



;; Function Adc_Ipw_DeInit (Adc_Ipw_DeInit, funcdef_no=10, decl_uid=5993, cgraph_uid=11, symbol_order=10)

Adc_Ipw_DeInit (uint32 u32CoreId)
{
  Std_ReturnType ReturnStatus;
  Adc_GroupType GroupIter;
  Adc_GroupType GroupId;
  Adc_HwUnitType LogicalHwUnitId;
  Adc_HwUnitType PhysicalHwUnitId;
  Std_ReturnType D.6595;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  unsigned char _4;
  const struct Adc_ConfigType * _5;
  const struct Adc_Ipw_Config * _6;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char LogicalHwUnitId.10_10;
  const struct Adc_ConfigType * _11;
  const struct Adc_GroupConfigurationType * _12;
  unsigned int _13;
  unsigned int _14;
  const struct Adc_GroupConfigurationType * _15;
  const struct Adc_ConfigType * _16;
  const struct Adc_GroupConfigurationType * _17;
  unsigned int _18;
  unsigned int _19;
  const struct Adc_GroupConfigurationType * _20;
  Adc_ValueGroupType * * _21;
  unsigned int _22;
  unsigned int _23;
  Adc_ValueGroupType * * _24;
  int _25;
  int _26;
  int _27;
  int _28;
  int _29;
  short unsigned int GroupIter.11_30;
  const struct Adc_ConfigType * _31;
  short unsigned int _32;
  Std_ReturnType _47;

  <bb 2> :
  PhysicalHwUnitId_38 = 0;
  LogicalHwUnitId_39 = 0;
  GroupId_40 = 0;
  GroupIter_41 = 0;
  ReturnStatus_42 = 0;
  LogicalHwUnitId_43 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_46(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_33;
  _4 = _2->Mapping.au8Adc_HwUnit[_3];
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _5 = Adc_pCfgPtr[u32CoreId_46(D)];
  _6 = _5->pAdcIpwConfig;
  _7 = (int) LogicalHwUnitId_33;
  PhysicalHwUnitId_56 = _6->aAdcPhysicalId[_7];
  _8 = (long unsigned int) PhysicalHwUnitId_56;
  Adc_Ip_DeInit (_8);
  _9 = (long unsigned int) PhysicalHwUnitId_56;
  Pdb_Adc_Ip_DeInit (_9);

  <bb 5> :
  LogicalHwUnitId.10_10 = LogicalHwUnitId_33;
  LogicalHwUnitId_59 = LogicalHwUnitId.10_10 + 1;

  <bb 6> :
  # LogicalHwUnitId_33 = PHI <LogicalHwUnitId_43(2), LogicalHwUnitId_59(5)>
  if (LogicalHwUnitId_33 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  GroupIter_45 = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  _11 = Adc_pCfgPtr[u32CoreId_46(D)];
  _12 = _11->pGroups;
  _13 = (unsigned int) GroupIter_34;
  _14 = _13 * 68;
  _15 = _12 + _14;
  GroupId_48 = _15->GroupId;
  _16 = Adc_pCfgPtr[u32CoreId_46(D)];
  _17 = _16->pGroups;
  _18 = (unsigned int) GroupIter_34;
  _19 = _18 * 68;
  _20 = _17 + _19;
  _21 = _20->pResultsBufferPtr;
  _22 = (unsigned int) GroupId_48;
  _23 = _22 * 4;
  _24 = _21 + _23;
  *_24 = 0B;
  _25 = (int) GroupId_48;
  Adc_aRuntimeGroupChannel[_25].pChannel = 0B;
  _26 = (int) GroupId_48;
  Adc_aRuntimeGroupChannel[_26].ChannelCount = 0;
  _27 = (int) GroupId_48;
  Adc_aRuntimeGroupChannel[_27].bRuntimeUpdated = 0;
  _28 = (int) GroupId_48;
  Adc_aRuntimeGroupChannel[_28].bAdcRuntimeGroupLimitcheck = 0;
  _29 = (int) GroupId_48;
  Adc_aGroupStatus[_29].eNotification = 0;
  GroupIter.11_30 = GroupIter_34;
  GroupIter_55 = GroupIter.11_30 + 1;

  <bb 9> :
  # GroupIter_34 = PHI <GroupIter_45(7), GroupIter_55(8)>
  _31 = Adc_pCfgPtr[u32CoreId_46(D)];
  _32 = _31->GroupCount;
  if (GroupIter_34 < _32)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _47 = ReturnStatus_42;

  <bb 11> :
<L8>:
  return _47;

}



;; Function Adc_Ipw_StartNormalConversion (Adc_Ipw_StartNormalConversion, funcdef_no=11, decl_uid=5996, cgraph_uid=12, symbol_order=11)

Adc_Ipw_StartNormalConversion (Adc_HwUnitType Unit, uint32 u32CoreId)
{
  boolean PdbMode;
  uint8 ChIndex;
  uint8 NumChannel;
  const Adc_HwUnitType PhysicalHwUnitId;
  const struct Adc_GroupConfigurationType * GroupPtr;
  Adc_GroupType GroupIndex;
  Adc_GroupType Group;
  int iftmp.13;
  unsigned char iftmp.12;
  int _1;
  const struct Adc_ConfigType * _2;
  const uint16 * _3;
  unsigned int _4;
  unsigned int _5;
  const uint16 * _6;
  const struct Adc_ConfigType * _7;
  const struct Adc_GroupConfigurationType * _8;
  unsigned int _9;
  unsigned int _10;
  const struct Adc_ConfigType * _11;
  const struct Adc_Ipw_Config * _12;
  int _13;
  int _14;
  short unsigned int _15;
  int _16;
  _Bool _17;
  _Bool _18;
  <unnamed type> _19;
  int _20;
  int _21;
  unsigned char _22;
  int _23;
  unsigned char _24;
  int _25;
  unsigned char _26;
  int _27;
  <unnamed type> _28;
  unsigned char _29;
  long unsigned int _30;
  long unsigned int _31;
  unsigned char ChIndex.14_32;
  int _33;
  unsigned char _34;
  long unsigned int _35;
  int _36;
  _Bool _37;
  int _38;
  unsigned char iftmp.12_40;
  int iftmp.13_41;
  unsigned char iftmp.12_53;
  unsigned char iftmp.12_54;
  int iftmp.13_57;
  int iftmp.13_58;

  <bb 2> :
  _1 = (int) Unit_45(D);
  Group_47 ={v} Adc_aUnitStatus[_1].SwNormalQueue[0];
  _2 = Adc_pCfgPtr[u32CoreId_48(D)];
  _3 = _2->pGroupIdToIndexMap;
  _4 = (unsigned int) Group_47;
  _5 = _4 * 2;
  _6 = _3 + _5;
  GroupIndex_49 = *_6;
  _7 = Adc_pCfgPtr[u32CoreId_48(D)];
  _8 = _7->pGroups;
  _9 = (unsigned int) GroupIndex_49;
  _10 = _9 * 68;
  GroupPtr_50 = _8 + _10;
  _11 = Adc_pCfgPtr[u32CoreId_48(D)];
  _12 = _11->pAdcIpwConfig;
  _13 = (int) Unit_45(D);
  PhysicalHwUnitId_51 = _12->aAdcPhysicalId[_13];
  _14 = (int) Unit_45(D);
  _15 ={v} Adc_aUnitStatus[_14].SwNormalQueueIndex;
  if (_15 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _16 = (int) Group_47;
  _17 ={v} Adc_aGroupStatus[_16].bLimitCheckFailed;
  _18 = ~_17;
  if (_18 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 4> :
  _19 = GroupPtr_50->eMode;
  if (_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 5> :
  _20 = (int) Group_47;
  Adc_aGroupStatus[_20].CurrentChannel = 0;
  _21 = (int) Group_47;
  _22 = Adc_aRuntimeGroupChannel[_21].ChannelCount;
  if (_22 <= 15)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _23 = (int) Group_47;
  _24 = Adc_aRuntimeGroupChannel[_23].ChannelCount;
  iftmp.12_54 = _24 & 15;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.12_53 = 16;

  <bb 8> :
  # iftmp.12_40 = PHI <iftmp.12_54(6), iftmp.12_53(7)>
  NumChannel_55 = iftmp.12_40;
  _25 = (int) Unit_45(D);
  _26 = Adc_aUnitStatus[_25].u8Sc1Used;
  if (_26 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _27 = (int) Unit_45(D);
  Adc_aUnitStatus[_27].u8Sc1Used = NumChannel_55;

  <bb 10> :
  _28 = GroupPtr_50->eMode;
  if (_28 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _29 = GroupPtr_50->u8AdcWithoutInterrupt;
  if (_29 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.13_57 = 1;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.13_58 = 0;

  <bb 14> :
  # iftmp.13_41 = PHI <iftmp.13_57(12), iftmp.13_58(13)>
  PdbMode_59 = (boolean) iftmp.13_41;
  _30 = (long unsigned int) PhysicalHwUnitId_51;
  Pdb_Adc_Ip_SetContinuousMode (_30, PdbMode_59);
  ChIndex_61 = 0;
  goto <bb 16>; [INV]

  <bb 15> :
  _31 = (long unsigned int) PhysicalHwUnitId_51;
  Adc_Ip_GetConvData (_31, ChIndex_39);
  ChIndex.14_32 = ChIndex_39;
  ChIndex_66 = ChIndex.14_32 + 1;

  <bb 16> :
  # ChIndex_39 = PHI <ChIndex_61(14), ChIndex_66(15)>
  _33 = (int) Unit_45(D);
  _34 = Adc_aUnitStatus[_33].u8Sc1Used;
  if (ChIndex_39 < _34)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _35 = (long unsigned int) PhysicalHwUnitId_51;
  Adc_Ip_SetTriggerMode (_35, 1);
  Adc_Ipw_ConfigureConversion (Unit_45(D), Group_47, 15, NumChannel_55, u32CoreId_48(D));
  _36 = (int) Group_47;
  _37 = Adc_aRuntimeGroupChannel[_36].bRuntimeUpdated;
  if (_37 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _38 = (int) Group_47;
  Adc_aRuntimeGroupChannel[_38].bRuntimeUpdated = 0;

  <bb 19> :
  return;

}



;; Function Adc_Ipw_StopCurrentConversion (Adc_Ipw_StopCurrentConversion, funcdef_no=12, decl_uid=6000, cgraph_uid=13, symbol_order=12)

Adc_Ipw_StopCurrentConversion (Adc_HwUnitType Unit, Adc_GroupType Group, uint32 u32CoreId)
{
  uint8 ChIndex;
  const Adc_HwUnitType PhysicalHwUnitId;
  Std_ReturnType Status;
  Std_ReturnType D.6614;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char ChIndex.15_6;
  int _7;
  unsigned char _8;
  int _9;
  Std_ReturnType _22;

  <bb 2> :
  Status_12 = 0;
  _1 = Adc_pCfgPtr[u32CoreId_14(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_15(D);
  PhysicalHwUnitId_16 = _2->aAdcPhysicalId[_3];
  ChIndex_17 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _4 = (long unsigned int) PhysicalHwUnitId_16;
  Adc_Ip_SetDisabledChannel (_4, ChIndex_10, 0);
  _5 = (long unsigned int) PhysicalHwUnitId_16;
  Adc_Ip_GetConvData (_5, ChIndex_10);
  ChIndex.15_6 = ChIndex_10;
  ChIndex_25 = ChIndex.15_6 + 1;

  <bb 4> :
  # ChIndex_10 = PHI <ChIndex_17(2), ChIndex_25(3)>
  _7 = (int) Unit_15(D);
  _8 = Adc_aUnitStatus[_7].u8Sc1Used;
  if (ChIndex_10 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = (int) Group_18(D);
  Adc_aGroupStatus[_9].CurrentChannel = 0;
  Status_21 = Adc_Ipw_StopConversionCheckTimeout (Unit_15(D), Group_18(D), u32CoreId_14(D));
  _22 = Status_21;

  <bb 6> :
<L3>:
  return _22;

}



;; Function Adc_Ipw_EnableHardwareTrigger (Adc_Ipw_EnableHardwareTrigger, funcdef_no=13, decl_uid=6004, cgraph_uid=14, symbol_order=13)

Adc_Ipw_EnableHardwareTrigger (Adc_GroupType Group, Adc_HwUnitType Unit, uint32 u32CoreId)
{
  const Adc_HwUnitType PhysicalHwUnitId;
  uint8 ChIndex;
  Std_ReturnType D.6624;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  int _4;
  long unsigned int _5;
  unsigned char ChIndex.17_6;
  int _7;
  unsigned char _8;
  Std_ReturnType _19;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_12(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_13(D);
  PhysicalHwUnitId_14 = _2->aAdcPhysicalId[_3];
  _4 = (int) Group_15(D);
  Adc_aGroupStatus[_4].ResultIndex ={v} 0;
  ChIndex_17 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _5 = (long unsigned int) PhysicalHwUnitId_14;
  Adc_Ip_GetConvData (_5, ChIndex_9);
  ChIndex.17_6 = ChIndex_9;
  ChIndex_21 = ChIndex.17_6 + 1;

  <bb 4> :
  # ChIndex_9 = PHI <ChIndex_17(2), ChIndex_21(3)>
  _7 = (int) Unit_13(D);
  _8 = Adc_aUnitStatus[_7].u8Sc1Used;
  if (ChIndex_9 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Adc_Ipw_StartHwTrigConversion (Unit_13(D), Group_15(D), u32CoreId_12(D));
  _19 = 0;

  <bb 6> :
<L3>:
  return _19;

}



;; Function Adc_Ipw_DisableHardwareTrigger (Adc_Ipw_DisableHardwareTrigger, funcdef_no=14, decl_uid=6008, cgraph_uid=15, symbol_order=14)

Adc_Ipw_DisableHardwareTrigger (Adc_GroupType Group, Adc_HwUnitType Unit, uint32 u32CoreId)
{
  const Adc_HwUnitType PhysicalHwUnitId;
  struct Adc_Ip_ChanConfigType ChannelConfig;
  uint8 ChIndex;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char ChIndex.18_6;
  int _7;
  unsigned char _8;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_12(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_13(D);
  PhysicalHwUnitId_14 = _2->aAdcPhysicalId[_3];
  _4 = (long unsigned int) PhysicalHwUnitId_14;
  Pdb_Adc_Ip_DisableAndClearPdb (_4);
  ChIndex_16 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  ChannelConfig.ChnIdx = ChIndex_9;
  ChannelConfig.Channel = 31;
  ChannelConfig.InterruptEnable = 0;
  _5 = (long unsigned int) PhysicalHwUnitId_14;
  Adc_Ip_ConfigChannel (_5, &ChannelConfig);
  ChIndex.18_6 = ChIndex_9;
  ChIndex_22 = ChIndex.18_6 + 1;

  <bb 4> :
  # ChIndex_9 = PHI <ChIndex_16(2), ChIndex_22(3)>
  _7 = (int) Unit_13(D);
  _8 = Adc_aUnitStatus[_7].u8Sc1Used;
  if (ChIndex_9 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  ChannelConfig ={v} {CLOBBER};
  return;

}



;; Function Adc_Ipw_CheckValidConversion (Adc_Ipw_CheckValidConversion, funcdef_no=15, decl_uid=6012, cgraph_uid=16, symbol_order=15)

Adc_Ipw_CheckValidConversion (Adc_HwUnitType PhysicalHwUnitId, Adc_ChannelIndexType StartIndex, Adc_ChannelIndexType EndIndex)
{
  boolean ValidConversion;
  Adc_ChannelIndexType Index;
  boolean D.6628;
  long unsigned int _1;
  unsigned char _2;
  _Bool _3;
  unsigned char Index.19_4;
  boolean _19;

  <bb 2> :
  ValidConversion_10 = 1;
  Index_12 = StartIndex_11(D);
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = (long unsigned int) PhysicalHwUnitId_15(D);
  _2 = Index_5 - StartIndex_11(D);
  ValidConversion_17 = Adc_Ip_GetConvCompleteFlag (_1, _2);
  _3 = ~ValidConversion_17;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  goto <bb 7>; [INV]

  <bb 5> :
  Index.19_4 = Index_5;
  Index_18 = Index.19_4 + 1;

  <bb 6> :
  # Index_5 = PHI <Index_12(2), Index_18(5)>
  # ValidConversion_6 = PHI <ValidConversion_10(2), ValidConversion_17(5)>
  if (Index_5 < EndIndex_14(D))
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # ValidConversion_7 = PHI <ValidConversion_17(4), ValidConversion_6(6)>
  _19 = ValidConversion_7;

  <bb 8> :
<L5>:
  return _19;

}



;; Function Adc_Ipw_ReadGroup (Adc_Ipw_ReadGroup, funcdef_no=16, decl_uid=6017, cgraph_uid=17, symbol_order=16)

Adc_Ipw_ReadGroup (const Adc_GroupType Group, Adc_ValueGroupType * pDataPtr, boolean * pFlag, uint32 u32CoreId)
{
  const Adc_HwUnitType LogicalHwUnitId;
  const struct Adc_GroupConfigurationType * GroupPtr;
  const Adc_GroupType GroupIndex;
  Std_ReturnType ReadGroupRet;
  Std_ReturnType D.6648;
  const struct Adc_ConfigType * _1;
  const uint16 * _2;
  unsigned int _3;
  unsigned int _4;
  const uint16 * _5;
  const struct Adc_ConfigType * _6;
  const struct Adc_GroupConfigurationType * _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  <unnamed type> _11;
  <unnamed type> _12;
  int _13;
  short unsigned int _14;
  int _15;
  short unsigned int _16;
  int _17;
  <unnamed type> _18;
  Std_ReturnType _38;

  <bb 2> :
  ReadGroupRet_23 = 0;
  _1 = Adc_pCfgPtr[u32CoreId_25(D)];
  _2 = _1->pGroupIdToIndexMap;
  _3 = (unsigned int) Group_26(D);
  _4 = _3 * 2;
  _5 = _2 + _4;
  GroupIndex_27 = *_5;
  _6 = Adc_pCfgPtr[u32CoreId_25(D)];
  _7 = _6->pGroups;
  _8 = (unsigned int) GroupIndex_27;
  _9 = _8 * 68;
  GroupPtr_28 = _7 + _9;
  LogicalHwUnitId_29 = GroupPtr_28->AdcLogicalUnitId;
  _10 = GroupPtr_28->u8AdcWithoutInterrupt;
  if (_10 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  _11 = GroupPtr_28->eType;
  if (_11 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _12 = GroupPtr_28->eTriggerSource;
  if (_12 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _13 = (int) LogicalHwUnitId_29;
  _14 ={v} Adc_aUnitStatus[_13].SwNormalQueue[0];
  if (Group_26(D) != _14)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  ReadGroupRet_34 = 1;
  goto <bb 9>; [INV]

  <bb 7> :
  _15 = (int) LogicalHwUnitId_29;
  _16 ={v} Adc_aUnitStatus[_15].OngoingHwGroup;
  if (Group_26(D) != _16)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  ReadGroupRet_33 = 1;

  <bb 9> :
  # ReadGroupRet_19 = PHI <ReadGroupRet_23(3), ReadGroupRet_34(6), ReadGroupRet_23(7), ReadGroupRet_33(8), ReadGroupRet_23(5)>
  if (ReadGroupRet_19 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  ReadGroupRet_37 = Adc_Ipw_ReadGroupNoInt (GroupPtr_28, pDataPtr_31(D), pFlag_35(D), u32CoreId_25(D));
  goto <bb 15>; [INV]

  <bb 11> :
  _17 = (int) Group_26(D);
  _18 ={v} Adc_aGroupStatus[_17].eConversion;
  if (_18 == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  ReadGroupRet_30 = 1;

  <bb 13> :
  # ReadGroupRet_20 = PHI <ReadGroupRet_23(11), ReadGroupRet_30(12)>
  if (ReadGroupRet_20 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  Adc_Ipw_WriteDataBuffer (Group_26(D), pDataPtr_31(D), u32CoreId_25(D));

  <bb 15> :
  # ReadGroupRet_21 = PHI <ReadGroupRet_37(10), ReadGroupRet_20(13), ReadGroupRet_20(14), ReadGroupRet_19(9)>
  _38 = ReadGroupRet_21;

  <bb 16> :
<L18>:
  return _38;

}



;; Function Adc_Ipw_GetConvData (Adc_Ipw_GetConvData, funcdef_no=17, decl_uid=6022, cgraph_uid=18, symbol_order=17)

Adc_Ipw_GetConvData (Adc_HwUnitType Unit, Adc_ChannelType Channel, uint32 u32CoreId, uint16 * Result)
{
  Std_ReturnType Status;
  const Adc_HwUnitType PhysicalHwUnitId;
  Std_ReturnType D.6669;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  long unsigned int _4;
  <unnamed type> _5;
  <unnamed type> _6;
  Std_ReturnType _18;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_9(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_10(D);
  PhysicalHwUnitId_11 = _2->aAdcPhysicalId[_3];
  Status_12 = 1;
  *Result_13(D) = 0;
  _4 = (long unsigned int) PhysicalHwUnitId_11;
  _5 = (<unnamed type>) Channel_15(D);
  _6 = Adc_Ip_GetChanData (_4, _5, Result_13(D));
  if (_6 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_17 = 0;

  <bb 4> :
  # Status_7 = PHI <Status_12(2), Status_17(3)>
  _18 = Status_7;

  <bb 5> :
<L2>:
  return _18;

}



;; Function Adc_Ipw_CheckConversionValuesInRange (Adc_Ipw_CheckConversionValuesInRange, funcdef_no=18, decl_uid=6044, cgraph_uid=19, symbol_order=18)

Adc_Ipw_CheckConversionValuesInRange (Adc_ValueGroupType Value, Adc_HwUnitType LogicalHwUnitId, Adc_ChannelType ChannelIndex, uint32 u32CoreId)
{
  const Adc_ValueGroupType HighLimit;
  const Adc_ValueGroupType LowLimit;
  const Adc_ChannelRangeSelectType eChRange;
  boolean bValInRange;
  const struct Adc_ChannelLimitCheckingType * const pChannelLimitCheckingCfg;
  boolean D.6686;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  const struct Adc_ChannelLimitCheckingType * _4;
  unsigned int _5;
  unsigned int _6;
  boolean _31;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_15(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_16(D);
  _4 = _2->ChannelLimitCheckingConfigs[_3];
  _5 = (unsigned int) ChannelIndex_17(D);
  _6 = _5 * 12;
  pChannelLimitCheckingCfg_18 = _4 + _6;
  bValInRange_19 = 0;
  eChRange_20 = pChannelLimitCheckingCfg_18->eChannelRange;
  LowLimit_21 = pChannelLimitCheckingCfg_18->ChannelLowLimit;
  HighLimit_22 = pChannelLimitCheckingCfg_18->ChannelHighLimit;
  switch (eChRange_20) <default: <L22> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L6> [INV], case 3: <L10> [INV], case 4: <L13> [INV], case 5: <L16> [INV], case 6: <L19> [INV]>

  <bb 3> :
<L0>:
  bValInRange_30 = 1;
  goto <bb 25>; [INV]

  <bb 4> :
<L1>:
  if (Value_23(D) > LowLimit_21)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  if (Value_23(D) <= HighLimit_22)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  bValInRange_29 = 1;

  <bb 7> :
  # bValInRange_7 = PHI <bValInRange_19(4), bValInRange_19(5), bValInRange_29(6)>
  goto <bb 25>; [INV]

  <bb 8> :
<L6>:
  if (Value_23(D) > HighLimit_22)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (Value_23(D) <= LowLimit_21)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  bValInRange_28 = 1;

  <bb 11> :
  # bValInRange_8 = PHI <bValInRange_19(9), bValInRange_28(10)>
  goto <bb 25>; [INV]

  <bb 12> :
<L10>:
  if (Value_23(D) <= HighLimit_22)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  bValInRange_27 = 1;

  <bb 14> :
  # bValInRange_9 = PHI <bValInRange_19(12), bValInRange_27(13)>
  goto <bb 25>; [INV]

  <bb 15> :
<L13>:
  if (Value_23(D) > LowLimit_21)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  bValInRange_26 = 1;

  <bb 17> :
  # bValInRange_10 = PHI <bValInRange_19(15), bValInRange_26(16)>
  goto <bb 25>; [INV]

  <bb 18> :
<L16>:
  if (Value_23(D) > HighLimit_22)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  bValInRange_25 = 1;

  <bb 20> :
  # bValInRange_11 = PHI <bValInRange_19(18), bValInRange_25(19)>
  goto <bb 25>; [INV]

  <bb 21> :
<L19>:
  if (Value_23(D) <= LowLimit_21)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  bValInRange_24 = 1;

  <bb 23> :
  # bValInRange_12 = PHI <bValInRange_19(21), bValInRange_24(22)>
  goto <bb 25>; [INV]

  <bb 24> :
<L22>:

  <bb 25> :
  # bValInRange_13 = PHI <bValInRange_30(3), bValInRange_7(7), bValInRange_8(11), bValInRange_9(14), bValInRange_10(17), bValInRange_11(20), bValInRange_12(23), bValInRange_19(24)>
  _31 = bValInRange_13;

  <bb 26> :
<L24>:
  return _31;

}



;; Function Adc_Ipw_SetClockMode (Adc_Ipw_SetClockMode, funcdef_no=19, decl_uid=6039, cgraph_uid=20, symbol_order=19)

Adc_Ipw_SetClockMode (Adc_SelectPrescalerType Prescaler, uint32 u32CoreId)
{
  const struct Adc_Ip_ConfigType * pAdc;
  struct Adc_Ip_ClockConfigType AdcNormalClockConfig;
  Adc_HwUnitType PhysicalHwUnitId;
  Adc_HwUnitType LogicalHwUnitId;
  Std_ReturnType D.6693;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  unsigned char _4;
  const struct Adc_ConfigType * _5;
  const struct Adc_Ipw_Config * _6;
  int _7;
  const struct Adc_ConfigType * _8;
  const struct Adc_Ipw_Config * _9;
  int _10;
  <unnamed type> _11;
  <unnamed type> _12;
  unsigned char _13;
  _Bool _14;
  <unnamed type> _15;
  long unsigned int _16;
  long unsigned int _17;
  const struct Adc_ConfigType * _18;
  const struct Adc_Ipw_Config * _19;
  int _20;
  const struct Adc_Ip_ClockConfigType * _21;
  unsigned char LogicalHwUnitId.22_22;
  Std_ReturnType _30;

  <bb 2> :
  LogicalHwUnitId_26 = 0;
  PhysicalHwUnitId_27 = 0;
  LogicalHwUnitId_28 = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _1 = Adc_pCfgPtr[u32CoreId_32(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) LogicalHwUnitId_23;
  _4 = _2->Mapping.au8Adc_HwUnit[_3];
  if (_4 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _5 = Adc_pCfgPtr[u32CoreId_32(D)];
  _6 = _5->pAdcIpwConfig;
  _7 = (int) LogicalHwUnitId_23;
  PhysicalHwUnitId_33 = _6->aAdcPhysicalId[_7];
  _8 = Adc_pCfgPtr[u32CoreId_32(D)];
  _9 = _8->pAdcIpwConfig;
  _10 = (int) LogicalHwUnitId_23;
  pAdc_34 = _9->apAdcConfig[_10];
  if (Prescaler_35(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _11 = pAdc_34->ClockDivide;
  AdcNormalClockConfig.ClockDivide = _11;
  _12 = pAdc_34->InputClock;
  AdcNormalClockConfig.InputClock = _12;
  _13 = pAdc_34->SampleTime;
  AdcNormalClockConfig.SampleTime = _13;
  _14 = pAdc_34->AvgEn;
  AdcNormalClockConfig.AvgEn = _14;
  _15 = pAdc_34->AvgSel;
  AdcNormalClockConfig.AvgSel = _15;
  _16 = (long unsigned int) PhysicalHwUnitId_33;
  Adc_Ip_SetClockMode (_16, &AdcNormalClockConfig);
  goto <bb 7>; [INV]

  <bb 6> :
  _17 = (long unsigned int) PhysicalHwUnitId_33;
  _18 = Adc_pCfgPtr[u32CoreId_32(D)];
  _19 = _18->pAdcIpwConfig;
  _20 = (int) LogicalHwUnitId_23;
  _21 = _19->apAdcAltClockConfig[_20];
  Adc_Ip_SetClockMode (_17, _21);

  <bb 7> :
  LogicalHwUnitId.22_22 = LogicalHwUnitId_23;
  LogicalHwUnitId_43 = LogicalHwUnitId.22_22 + 1;

  <bb 8> :
  # LogicalHwUnitId_23 = PHI <LogicalHwUnitId_28(2), LogicalHwUnitId_43(7)>
  if (LogicalHwUnitId_23 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _30 = 0;
  AdcNormalClockConfig ={v} {CLOBBER};

  <bb 10> :
<L9>:
  return _30;

}



;; Function Adc_Ipw_Calibrate (Adc_Ipw_Calibrate, funcdef_no=20, decl_uid=6026, cgraph_uid=21, symbol_order=20)

Adc_Ipw_Calibrate (Adc_HwUnitType Unit, struct Adc_CalibrationStatusType * Status, uint32 u32CoreId)
{
  const Adc_HwUnitType PhysicalHwUnitId;
  Adc_Ip_StatusType IpStatus;
  const struct Adc_ConfigType * _1;
  const struct Adc_Ipw_Config * _2;
  int _3;
  long unsigned int _4;

  <bb 2> :
  _1 = Adc_pCfgPtr[u32CoreId_7(D)];
  _2 = _1->pAdcIpwConfig;
  _3 = (int) Unit_8(D);
  PhysicalHwUnitId_9 = _2->aAdcPhysicalId[_3];
  Status_10(D)->Adc_UnitSelfTestStatus = 0;
  _4 = (long unsigned int) PhysicalHwUnitId_9;
  IpStatus_13 = Adc_Ip_DoCalibration (_4);
  if (IpStatus_13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_10(D)->Adc_UnitSelfTestStatus = 1;

  <bb 4> :
  return;

}



;; Function Adc_GetCoreID (Adc_GetCoreID, funcdef_no=21, decl_uid=6049, cgraph_uid=22, symbol_order=21)

Adc_GetCoreID ()
{
  uint32 D.6698;
  uint32 _1;

  <bb 2> :
  _1 = 0;

  <bb 3> :
<L0>:
  return _1;

}


