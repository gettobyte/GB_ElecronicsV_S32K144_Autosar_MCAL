;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.5940 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.5946 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


Ftm_Ocu_Ip_Irq_ClearChannelInterrupt.constprop (uint8 NumChannel)
{
  uint8 InstNum;
  int _2;
  struct Ftm_Ocu_Ip_xRegLayoutType * _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 6> [local count: 1073741824]:
  # DEBUG InstNum => 0

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (NumChannel_1(D) <= 7)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 536870913]:
  if (1 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 4> [local count: 177167401]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Ocu_OCU_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  _2 = 0;
  _3 = Ftm_Ocu_Ip_gapcxBase[_2];
  # DEBUG acpFtmBase => _3
  # DEBUG NumChannel => NumChannel_1(D)
  # DEBUG INLINE_ENTRY Ftm_Ocu_Ip_ClearChannelEventFlag
  # DEBUG BEGIN_STMT
  _4 = (int) NumChannel_1(D);
  _5 ={v} _3->CONTROLS[_4].CSC;
  _6 = _5 & 4294967167;
  _3->CONTROLS[_4].CSC ={v} _6;
  # DEBUG acpFtmBase => NULL
  # DEBUG NumChannel => NULL
  # DEBUG BEGIN_STMT
  Ftm_Ocu_Ip_ClearChannelEventStatus (_3, NumChannel_1(D));
  # DEBUG BEGIN_STMT
  SchM_Exit_Ocu_OCU_EXCLUSIVE_AREA_10 ();

  <bb 5> [local count: 1073741824]:
  return;

}


Ftm_Ocu_Ip_Irq_ProcessChannelInterrupt.constprop (uint8 ChIdx)
{
  uint8 InstNum;
  int _1;
  int _3;
  struct Ftm_Ocu_Ip_xRegLayoutType * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  void (*<T4a5>) (uint16) _9;
  _Bool _10;
  short unsigned int _11;

  <bb 8> [local count: 1073741823]:
  # DEBUG InstNum => 0

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = 0;
  _3 = (int) ChIdx_2(D);
  # DEBUG D#1 => &Ftm_Ocu_Ip_gaxChState[_1][_3]
  # DEBUG pChannelState => D#1
  # DEBUG BEGIN_STMT
  SchM_Enter_Ocu_OCU_EXCLUSIVE_AREA_15 ();
  # DEBUG BEGIN_STMT
  _4 = Ftm_Ocu_Ip_gapcxBase[_1];
  _5 ={v} _4->CONTROLS[_3].CSC;
  _6 = _5 & 64;
  # DEBUG IsChEvEnabled => _6 != 0
  # DEBUG BEGIN_STMT
  _7 ={v} _4->CONTROLS[_3].CSC;
  _8 = _7 & 128;
  # DEBUG HasChEvOccurred => _8 != 0
  # DEBUG BEGIN_STMT
  SchM_Exit_Ocu_OCU_EXCLUSIVE_AREA_15 ();
  # DEBUG BEGIN_STMT
  Ftm_Ocu_Ip_Irq_ClearChannelInterrupt (0, ChIdx_2(D));
  # DEBUG BEGIN_STMT
  if (_6 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870911]:
  if (_8 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  _9 = MEM[(const struct Ftm_Ocu_Ip_ChStateType *)&Ftm_Ocu_Ip_gaxChState][_1][_3].mCallbackFunc;
  if (_9 != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 5> [local count: 187904819]:
  # DEBUG BEGIN_STMT
  _10 = MEM[(const struct Ftm_Ocu_Ip_ChStateType *)&Ftm_Ocu_Ip_gaxChState][_1][_3].mChannelInit;
  if (_10 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 93952410]:
  # DEBUG BEGIN_STMT
  _11 = MEM[(const struct Ftm_Ocu_Ip_ChStateType *)&Ftm_Ocu_Ip_gaxChState][_1][_3].mCallbackParam;
  _9 (_11);

  <bb 7> [local count: 1073741824]:
  return;

}


FTM_0_CH_0_CH_1_ISR ()
{
  struct Ftm_Ocu_Ip_xRegLayoutType * _1;
  long unsigned int _8;
  _Bool _9;
  long unsigned int _10;
  long unsigned int _11;
  _Bool _12;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG moduleIndex => 0
  # DEBUG BEGIN_STMT
  # DEBUG channelIndex => 0
  # DEBUG BEGIN_STMT
  _1 = Ftm_Ocu_Ip_gapcxBase[0];
  # DEBUG acpcFtmBase => _1
  # DEBUG NumChannel => 0
  # DEBUG INLINE_ENTRY Ftm_Ocu_Ip_GetChannelEventStatus
  # DEBUG BEGIN_STMT
  _8 ={v} MEM[(const struct Ftm_Ocu_Ip_xRegLayoutType *)_1].STATUS;
  _9 = (_Bool) _8;
  # DEBUG acpcFtmBase => NULL
  # DEBUG NumChannel => NULL
  if (_9 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Ftm_Ocu_Ip_Irq_ProcessChannelInterrupt (0, 0);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG channelIndex => 1
  # DEBUG BEGIN_STMT
  # DEBUG acpcFtmBase => _1
  # DEBUG NumChannel => 1
  # DEBUG INLINE_ENTRY Ftm_Ocu_Ip_GetChannelEventStatus
  # DEBUG BEGIN_STMT
  _10 ={v} MEM[(const struct Ftm_Ocu_Ip_xRegLayoutType *)_1].STATUS;
  _11 = _10 >> 1;
  _12 = (_Bool) _11;
  # DEBUG acpcFtmBase => NULL
  # DEBUG NumChannel => NULL
  if (_12 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 354334802]:
  # DEBUG BEGIN_STMT
  Ftm_Ocu_Ip_Irq_ProcessChannelInterrupt (0, 1);

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  return;

}


Ftm_Ocu_Ip_ClearChannelEventStatus (struct Ftm_Ocu_Ip_xRegLayoutType * const acpFtmBase, uint8 NumChannel)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} acpFtmBase_7(D)->STATUS;
  _2 = (int) NumChannel_8(D);
  _3 = 1 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  acpFtmBase_7(D)->STATUS ={v} _5;
  return;

}


