main ()
{
  Clock_Ip_StatusType clockStatus;
  int D.7126;
  <unnamed type> _1;

  <bb 2> :
  clockStatus_7 = Clock_Ip_Init (&Mcu_aClockConfigPB_BOARD_InitPeripherals[0]);
  goto <bb 4>; [INV]

  <bb 3> :
  clockStatus_33 = Clock_Ip_Init (&Mcu_aClockConfigPB_BOARD_InitPeripherals[0]);

  <bb 4> :
  # clockStatus_2 = PHI <clockStatus_7(2), clockStatus_33(3)>
  if (clockStatus_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :

  <bb 6> :
  _1 = Clock_Ip_GetPllStatus ();
  if (_1 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  Clock_Ip_DistributePll ();
  Port_Init (0B);
  IntCtrl_Ip_InstallHandler (99, FTM_0_CH_0_CH_1_ISR, 0B);
  IntCtrl_Ip_EnableIrq (99);
  IntCtrl_Ip_InstallHandler (104, FTM_0_OVF_ISR, 0B);
  IntCtrl_Ip_EnableIrq (104);
  Pwm_Init (&Pwm_Config_BOARD_InitPeripherals);
  Pwm_EnableNotification (0, 2);
  Pwm_SetDutyCycle (0, 10000);
  TestDelay (700000);
  Pwm_SetDutyCycle (1, 19000);
  TestDelay (700000);
  Pwm_SetPeriodAndDuty (0, 40000, 16384);
  TestDelay (700000);
  Pwm_SetPeriodAndDuty (1, 23000, 21384);
  TestDelay (700000);
  Pwm_SetOutputToIdle (0);
  TestDelay (700000);
  Pwm_SetOutputToIdle (1);
  TestDelay (700000);
  Pwm_SetPeriodAndDuty_NoUpdate (0, 30000, 23284);
  Pwm_SetPeriodAndDuty_NoUpdate (1, 30000, 6384);
  Pwm_SyncUpdate (0);

  <bb 8> :
  goto <bb 8>; [INV]

}


TestDelay (uint32 delay)
{
  static volatile uint32 DelayTimer = 0;
  long unsigned int DelayTimer.0_1;
  long unsigned int _2;
  long unsigned int DelayTimer.1_3;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  DelayTimer.0_1 ={v} DelayTimer;
  _2 = DelayTimer.0_1 + 1;
  DelayTimer ={v} _2;

  <bb 4> :
  DelayTimer.1_3 ={v} DelayTimer;
  if (delay_6(D) > DelayTimer.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  DelayTimer ={v} 0;
  return;

}


pwm_callback ()
{
  <bb 2> :
  Pwm_GetOutputState (0);
  Pwm_GetChannelState (0);
  return;

}


