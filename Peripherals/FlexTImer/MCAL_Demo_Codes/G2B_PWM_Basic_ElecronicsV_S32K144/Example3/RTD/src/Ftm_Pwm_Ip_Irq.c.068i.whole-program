
Marking local functions: Ftm_Pwm_Ip_SetFaultModeStatus Ftm_Pwm_Ip_GetFaultModeStatus Ftm_Pwm_Ip_GetFaultDetectionFlag Ftm_Pwm_Ip_GetChannelMode Ftm_Pwm_Ip_GetSoftwareOutputControl Ftm_Pwm_Ip_SoftwareOutputControl Ftm_Pwm_Ip_GetOutputMask Ftm_Pwm_Ip_ClearOutmaskReg Ftm_Pwm_Ip_SetOutmaskReg Ftm_Pwm_Ip_SetSoftwareTriggerCmd Ftm_Pwm_Ip_HasChnEventOccurred Ftm_Pwm_Ip_ClearChnEventFlag Ftm_Pwm_Ip_IsChnIntEnabled Ftm_Pwm_Ip_GetChnMode Ftm_Pwm_Ip_GetChnEdgeLevel Ftm_Pwm_Ip_ClearTimerOverflow Ftm_Pwm_Ip_GetTimerOverflow Ftm_Pwm_Ip_IsOverflowIntEnabled Ftm_Pwm_Ip_GetCpwms


Marking externally visible functions: FTM_0_CH_2_CH_3_ISR FTM_0_CH_0_CH_1_ISR FTM_0_OVF_ISR


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Ftm_Pwm_Ip_pOverflowIrqCallback/140 (Ftm_Pwm_Ip_pOverflowIrqCallback) @0698dbd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Ftm_Pwm_Ip_ProcessTofInterrupt/132 (read)Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (read)Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (read)Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (read)
  Availability: not_available
  Varpool flags:
Ftm_Pwm_Ip_aNotifIrq/139 (Ftm_Pwm_Ip_aNotifIrq) @0698db40
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Ftm_Pwm_Ip_ProcessTofInterrupt/132 (read)Ftm_Pwm_Ip_ProcessTofInterrupt/132 (read)Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (read)
  Availability: not_available
  Varpool flags:
Ftm_Pwm_Ip_u8FaultCheck/138 (Ftm_Pwm_Ip_u8FaultCheck) @069f4510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Ftm_Pwm_Ip_ProcessErrata/131 (read)Ftm_Pwm_Ip_ProcessErrata/131 (write)Ftm_Pwm_Ip_ProcessErrata/131 (read)Ftm_Pwm_Ip_ProcessErrata/131 (read)Ftm_Pwm_Ip_ProcessErrata/131 (write)
  Availability: not_available
  Varpool flags:
Ftm_Pwm_Ip_aFtmBase/137 (Ftm_Pwm_Ip_aFtmBase) @069f4480
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: FTM_0_OVF_ISR/134 (read)FTM_0_CH_0_CH_1_ISR/135 (read)Ftm_Pwm_Ip_ProcessErrata/131 (read)Ftm_Pwm_Ip_ProcessTofInterrupt/132 (read)Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (read)FTM_0_CH_2_CH_3_ISR/136 (read)
  Availability: not_available
  Varpool flags: read-only
FTM_0_CH_2_CH_3_ISR/136 (FTM_0_CH_2_CH_3_ISR) @069e9620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_ProcessCommonInterrupt/133 Ftm_Pwm_Ip_HasChnEventOccurred/30 
FTM_0_CH_0_CH_1_ISR/135 (FTM_0_CH_0_CH_1_ISR) @069e9000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_ProcessCommonInterrupt/133 Ftm_Pwm_Ip_HasChnEventOccurred/30 
FTM_0_OVF_ISR/134 (FTM_0_OVF_ISR) @069e9d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_ProcessTofInterrupt/132 Ftm_Pwm_Ip_GetTimerOverflow/13 
Ftm_Pwm_Ip_ProcessCommonInterrupt/133 (Ftm_Pwm_Ip_ProcessCommonInterrupt) @069e9a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)Ftm_Pwm_Ip_aNotifIrq/139 (read)Ftm_Pwm_Ip_pOverflowIrqCallback/140 (read)Ftm_Pwm_Ip_pOverflowIrqCallback/140 (read)Ftm_Pwm_Ip_pOverflowIrqCallback/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: FTM_0_CH_2_CH_3_ISR/136 FTM_0_CH_0_CH_1_ISR/135 
  Calls: Ftm_Pwm_Ip_GetChannelMode/109 Ftm_Pwm_Ip_ClearChnEventFlag/29 Ftm_Pwm_Ip_HasChnEventOccurred/30 Ftm_Pwm_Ip_IsChnIntEnabled/28 
   Indirect call
   Indirect call
   Indirect call
Ftm_Pwm_Ip_ProcessTofInterrupt/132 (Ftm_Pwm_Ip_ProcessTofInterrupt) @069e97e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)Ftm_Pwm_Ip_aNotifIrq/139 (read)Ftm_Pwm_Ip_aNotifIrq/139 (read)Ftm_Pwm_Ip_pOverflowIrqCallback/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: FTM_0_OVF_ISR/134 
  Calls: Ftm_Pwm_Ip_GetChannelMode/109 Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_GetTimerOverflow/13 Ftm_Pwm_Ip_IsOverflowIntEnabled/12 Ftm_Pwm_Ip_ProcessErrata/131 
   Indirect call
Ftm_Pwm_Ip_ProcessErrata/131 (Ftm_Pwm_Ip_ProcessErrata) @069e9540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/137 (read)Ftm_Pwm_Ip_u8FaultCheck/138 (read)Ftm_Pwm_Ip_u8FaultCheck/138 (write)Ftm_Pwm_Ip_u8FaultCheck/138 (read)Ftm_Pwm_Ip_u8FaultCheck/138 (read)Ftm_Pwm_Ip_u8FaultCheck/138 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_ProcessTofInterrupt/132 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_ClearOutmaskReg/51 Ftm_Pwm_Ip_GetSoftwareOutputControl/105 Ftm_Pwm_Ip_GetOutputMask/52 Ftm_Pwm_Ip_SoftwareOutputControl/98 Ftm_Pwm_Ip_SoftwareOutputControl/98 Ftm_Pwm_Ip_GetSoftwareOutputControl/105 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetFaultModeStatus/122 Ftm_Pwm_Ip_GetFaultModeStatus/121 Ftm_Pwm_Ip_SetOutmaskReg/50 Ftm_Pwm_Ip_GetOutputMask/52 Ftm_Pwm_Ip_GetSoftwareOutputControl/105 Ftm_Pwm_Ip_GetFaultDetectionFlag/119 
Ftm_Pwm_Ip_SetFaultModeStatus/122 (Ftm_Pwm_Ip_SetFaultModeStatus) @069dbe00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_GetFaultModeStatus/121 (Ftm_Pwm_Ip_GetFaultModeStatus) @069dbb60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_GetFaultDetectionFlag/119 (Ftm_Pwm_Ip_GetFaultDetectionFlag) @069db620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_GetChannelMode/109 (Ftm_Pwm_Ip_GetChannelMode) @069ce2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessCommonInterrupt/133 Ftm_Pwm_Ip_ProcessTofInterrupt/132 
  Calls: Ftm_Pwm_Ip_GetCpwms/6 Ftm_Pwm_Ip_GetChnMode/26 Ftm_Pwm_Ip_GetChnEdgeLevel/23 
Ftm_Pwm_Ip_GetSoftwareOutputControl/105 (Ftm_Pwm_Ip_GetSoftwareOutputControl) @069c97e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 Ftm_Pwm_Ip_ProcessErrata/131 Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_SoftwareOutputControl/98 (Ftm_Pwm_Ip_SoftwareOutputControl) @069c2540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_GetOutputMask/52 (Ftm_Pwm_Ip_GetOutputMask) @068bb460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_ClearOutmaskReg/51 (Ftm_Pwm_Ip_ClearOutmaskReg) @068bb1c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskReg/50 (Ftm_Pwm_Ip_SetOutmaskReg) @068b7ee0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 (Ftm_Pwm_Ip_SetSoftwareTriggerCmd) @068b7700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessErrata/131 Ftm_Pwm_Ip_ProcessErrata/131 
  Calls: 
Ftm_Pwm_Ip_HasChnEventOccurred/30 (Ftm_Pwm_Ip_HasChnEventOccurred) @068a88c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: FTM_0_CH_2_CH_3_ISR/136 FTM_0_CH_0_CH_1_ISR/135 Ftm_Pwm_Ip_ProcessCommonInterrupt/133 
  Calls: 
Ftm_Pwm_Ip_ClearChnEventFlag/29 (Ftm_Pwm_Ip_ClearChnEventFlag) @068a8620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessCommonInterrupt/133 
  Calls: 
Ftm_Pwm_Ip_IsChnIntEnabled/28 (Ftm_Pwm_Ip_IsChnIntEnabled) @068a82a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessCommonInterrupt/133 
  Calls: 
Ftm_Pwm_Ip_GetChnMode/26 (Ftm_Pwm_Ip_GetChnMode) @068a4d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_GetChnEdgeLevel/23 (Ftm_Pwm_Ip_GetChnEdgeLevel) @068a4540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_ClearTimerOverflow/14 (Ftm_Pwm_Ip_ClearTimerOverflow) @06899b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessTofInterrupt/132 
  Calls: 
Ftm_Pwm_Ip_GetTimerOverflow/13 (Ftm_Pwm_Ip_GetTimerOverflow) @068997e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: FTM_0_OVF_ISR/134 Ftm_Pwm_Ip_ProcessTofInterrupt/132 
  Calls: 
Ftm_Pwm_Ip_IsOverflowIntEnabled/12 (Ftm_Pwm_Ip_IsOverflowIntEnabled) @06899540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ProcessTofInterrupt/132 
  Calls: 
Ftm_Pwm_Ip_GetCpwms/6 (Ftm_Pwm_Ip_GetCpwms) @06895460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
FTM_0_CH_2_CH_3_ISR ()
{
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  uint8 ChfStatus;
  uint8 ChanneId;
  uint8 InstanceId;
  uint8 iftmp.14;
  int _1;
  _Bool _2;
  unsigned char ChanneId.15_3;
  uint8 iftmp.14_5;
  uint8 iftmp.14_15;
  uint8 iftmp.14_16;

  <bb 2> :
  InstanceId_8 = 0;
  ChanneId_9 = 2;
  _1 = (int) InstanceId_8;
  FtmBase_11 = Ftm_Pwm_Ip_aFtmBase[_1];
  ChanneId_12 = 2;
  goto <bb 9>; [INV]

  <bb 3> :
  _2 = Ftm_Pwm_Ip_HasChnEventOccurred (FtmBase_11, ChanneId_4);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.14_16 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.14_15 = 0;

  <bb 6> :
  # iftmp.14_5 = PHI <iftmp.14_16(4), iftmp.14_15(5)>
  ChfStatus_17 = iftmp.14_5;
  if (ChfStatus_17 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_ProcessCommonInterrupt (InstanceId_8, ChanneId_4);

  <bb 8> :
  ChanneId.15_3 = ChanneId_4;
  ChanneId_19 = ChanneId.15_3 + 1;

  <bb 9> :
  # ChanneId_4 = PHI <ChanneId_12(2), ChanneId_19(8)>
  if (ChanneId_4 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  __asm__ __volatile__(" DSB");
  return;

}


FTM_0_CH_0_CH_1_ISR ()
{
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  uint8 ChfStatus;
  uint8 ChanneId;
  uint8 InstanceId;
  uint8 iftmp.12;
  int _1;
  _Bool _2;
  unsigned char ChanneId.13_3;
  uint8 iftmp.12_5;
  uint8 iftmp.12_15;
  uint8 iftmp.12_16;

  <bb 2> :
  InstanceId_8 = 0;
  ChanneId_9 = 0;
  _1 = (int) InstanceId_8;
  FtmBase_11 = Ftm_Pwm_Ip_aFtmBase[_1];
  ChanneId_12 = 0;
  goto <bb 9>; [INV]

  <bb 3> :
  _2 = Ftm_Pwm_Ip_HasChnEventOccurred (FtmBase_11, ChanneId_4);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.12_16 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.12_15 = 0;

  <bb 6> :
  # iftmp.12_5 = PHI <iftmp.12_16(4), iftmp.12_15(5)>
  ChfStatus_17 = iftmp.12_5;
  if (ChfStatus_17 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_ProcessCommonInterrupt (InstanceId_8, ChanneId_4);

  <bb 8> :
  ChanneId.13_3 = ChanneId_4;
  ChanneId_19 = ChanneId.13_3 + 1;

  <bb 9> :
  # ChanneId_4 = PHI <ChanneId_12(2), ChanneId_19(8)>
  if (ChanneId_4 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  __asm__ __volatile__(" DSB");
  return;

}


FTM_0_OVF_ISR ()
{
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  uint8 TofStatus;
  uint8 InstanceId;
  uint8 iftmp.11;
  int _1;
  _Bool _2;
  uint8 iftmp.11_3;
  uint8 iftmp.11_9;
  uint8 iftmp.11_10;

  <bb 2> :
  InstanceId_5 = 0;
  _1 = (int) InstanceId_5;
  FtmBase_7 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = Ftm_Pwm_Ip_GetTimerOverflow (FtmBase_7);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.11_10 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.11_9 = 0;

  <bb 5> :
  # iftmp.11_3 = PHI <iftmp.11_10(3), iftmp.11_9(4)>
  TofStatus_11 = iftmp.11_3;
  if (TofStatus_11 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_ProcessTofInterrupt (InstanceId_5);

  <bb 7> :
  __asm__ __volatile__(" DSB");
  return;

}


Ftm_Pwm_Ip_ProcessCommonInterrupt (uint8 Instance, uint8 HwChannel)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint8 LgChannelIdx;
  uint8 ChfStatus;
  uint8 ChieStatus;
  Ftm_Pwm_Ip_EdgeInterruptType ChEdgeState;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  uint8 iftmp.10;
  uint8 iftmp.9;
  int _1;
  _Bool _2;
  _Bool _3;
  int _4;
  int _5;
  unsigned char _6;
  unsigned char _7;
  int _8;
  int _9;
  unsigned char _10;
  int _11;
  void (*<T4e3>) (uint8) _12;
  unsigned char _13;
  int _14;
  void (*<T4e3>) (uint8) _15;
  int _16;
  void (*<T4e3>) (uint8) _17;
  uint8 iftmp.9_18;
  uint8 iftmp.10_19;
  uint8 iftmp.9_27;
  uint8 iftmp.9_28;
  uint8 iftmp.10_31;
  uint8 iftmp.10_32;

  <bb 2> :
  _1 = (int) Instance_22(D);
  FtmBase_24 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = Ftm_Pwm_Ip_IsChnIntEnabled (FtmBase_24, HwChannel_25(D));
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.9_28 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.9_27 = 0;

  <bb 5> :
  # iftmp.9_18 = PHI <iftmp.9_28(3), iftmp.9_27(4)>
  ChieStatus_29 = iftmp.9_18;
  _3 = Ftm_Pwm_Ip_HasChnEventOccurred (FtmBase_24, HwChannel_25(D));
  if (_3 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.10_32 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.10_31 = 0;

  <bb 8> :
  # iftmp.10_19 = PHI <iftmp.10_32(6), iftmp.10_31(7)>
  ChfStatus_33 = iftmp.10_19;
  _4 = (int) Instance_22(D);
  _5 = (int) HwChannel_25(D);
  _6 = Ftm_Pwm_Ip_aNotifIrq[_4][_5];
  ChEdgeState_34 = _6 & 1;
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase_24, HwChannel_25(D));
  if (ChieStatus_29 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 9> :
  if (ChfStatus_33 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 10> :
  if (ChEdgeState_34 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  _7 = Instance_22(D) * 8;
  LgChannelIdx_36 = HwChannel_25(D) + _7;
  _8 = (int) HwChannel_25(D);
  _9 = _8 & 1;
  if (_9 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 12> :
  _10 = HwChannel_25(D) + 255;
  ChMode_39 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_24, _10);
  if (ChMode_39 == 34)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ChMode_39 == 98)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  if (ChMode_39 == 97)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  if (ChMode_39 == 33)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _11 = (int) Instance_22(D);
  _12 = Ftm_Pwm_Ip_pOverflowIrqCallback[_11].FunctionCallback;
  _13 = LgChannelIdx_36 + 255;
  _12 (_13);
  goto <bb 18>; [INV]

  <bb 17> :
  _14 = (int) Instance_22(D);
  _15 = Ftm_Pwm_Ip_pOverflowIrqCallback[_14].FunctionCallback;
  _15 (LgChannelIdx_36);

  <bb 18> :
  goto <bb 20>; [INV]

  <bb 19> :
  _16 = (int) Instance_22(D);
  _17 = Ftm_Pwm_Ip_pOverflowIrqCallback[_16].FunctionCallback;
  _17 (LgChannelIdx_36);

  <bb 20> :
  return;

}


Ftm_Pwm_Ip_ProcessTofInterrupt (uint8 Instance)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint8 LgChannelIdx;
  uint8 Index;
  Ftm_Pwm_Ip_EdgeInterruptType TofNoEdgeState;
  Ftm_Pwm_Ip_EdgeInterruptType TofState;
  uint8 TofStatus;
  uint8 ToieStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  uint8 iftmp.6;
  uint8 iftmp.5;
  int _1;
  _Bool _2;
  _Bool _3;
  int _4;
  int _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  unsigned char _10;
  int _11;
  void (*<T4e3>) (uint8) _12;
  unsigned char Index.7_13;
  uint8 iftmp.5_15;
  uint8 iftmp.6_16;
  uint8 iftmp.5_25;
  uint8 iftmp.5_26;
  uint8 iftmp.6_29;
  uint8 iftmp.6_30;

  <bb 2> :
  _1 = (int) Instance_20(D);
  FtmBase_22 = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_ProcessErrata (Instance_20(D));
  _2 = Ftm_Pwm_Ip_IsOverflowIntEnabled (FtmBase_22);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.5_26 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.5_25 = 0;

  <bb 5> :
  # iftmp.5_15 = PHI <iftmp.5_26(3), iftmp.5_25(4)>
  ToieStatus_27 = iftmp.5_15;
  _3 = Ftm_Pwm_Ip_GetTimerOverflow (FtmBase_22);
  if (_3 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  iftmp.6_30 = 1;
  goto <bb 8>; [INV]

  <bb 7> :
  iftmp.6_29 = 0;

  <bb 8> :
  # iftmp.6_16 = PHI <iftmp.6_30(6), iftmp.6_29(7)>
  TofStatus_31 = iftmp.6_16;
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase_22);
  if (ToieStatus_27 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 9> :
  if (TofStatus_31 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 10> :
  Index_33 = 0;
  goto <bb 19>; [INV]

  <bb 11> :
  _4 = (int) Instance_20(D);
  _5 = (int) Index_14;
  _6 = Ftm_Pwm_Ip_aNotifIrq[_4][_5];
  TofState_34 = _6 & 2;
  _7 = (int) Instance_20(D);
  _8 = (int) Index_14;
  _9 = Ftm_Pwm_Ip_aNotifIrq[_7][_8];
  TofNoEdgeState_35 = _9 & 4;
  if (TofState_34 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 12> :
  if (TofNoEdgeState_35 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  ChMode_37 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_22, Index_14);
  if (ChMode_37 != 34)
    goto <bb 14>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 14> :
  if (ChMode_37 != 98)
    goto <bb 15>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 15> :
  if (ChMode_37 != 97)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  if (ChMode_37 != 33)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _10 = Instance_20(D) * 8;
  LgChannelIdx_38 = Index_14 + _10;
  _11 = (int) Instance_20(D);
  _12 = Ftm_Pwm_Ip_pOverflowIrqCallback[_11].FunctionCallback;
  _12 (LgChannelIdx_38);

  <bb 18> :
  Index.7_13 = Index_14;
  Index_40 = Index.7_13 + 1;

  <bb 19> :
  # Index_14 = PHI <Index_33(10), Index_40(18)>
  if (Index_14 <= 7)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  return;

}


Ftm_Pwm_Ip_ProcessErrata (uint8 Instance)
{
  uint32 TemRegVal;
  boolean FaultStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  long unsigned int D.6445;
  long unsigned int D.6441;
  int _1;
  int _2;
  int _3;
  signed char _4;
  unsigned char Ftm_Pwm_Ip_u8FaultCheck.0_5;
  signed char Ftm_Pwm_Ip_u8FaultCheck.1_6;
  signed char _7;
  unsigned char _8;
  short unsigned int _9;
  int _10;
  unsigned int _11;
  unsigned char _12;
  unsigned char Ftm_Pwm_Ip_u8FaultCheck.2_13;
  unsigned char _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  int _18;
  unsigned int _19;
  unsigned char _20;
  unsigned char _21;
  unsigned char Ftm_Pwm_Ip_u8FaultCheck.3_22;
  unsigned char _23;
  long unsigned int _37;
  long unsigned int _46;

  <bb 2> :
  _1 = (int) Instance_25(D);
  FtmBase_27 = Ftm_Pwm_Ip_aFtmBase[_1];
  FaultStatus_29 = Ftm_Pwm_Ip_GetFaultDetectionFlag (FtmBase_27);
  if (FaultStatus_29 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (int) Instance_25(D);
  _3 = 1 << _2;
  _4 = (signed char) _3;
  Ftm_Pwm_Ip_u8FaultCheck.0_5 = Ftm_Pwm_Ip_u8FaultCheck;
  Ftm_Pwm_Ip_u8FaultCheck.1_6 = (signed char) Ftm_Pwm_Ip_u8FaultCheck.0_5;
  _7 = _4 | Ftm_Pwm_Ip_u8FaultCheck.1_6;
  _8 = (unsigned char) _7;
  Ftm_Pwm_Ip_u8FaultCheck = _8;
  _9 = Ftm_Pwm_Ip_GetSoftwareOutputControl (FtmBase_27);
  TemRegVal_44 = (uint32) _9;
  _46 = Ftm_Pwm_Ip_GetOutputMask (FtmBase_27);
  TemRegVal_47 = _46 | TemRegVal_44;
  Ftm_Pwm_Ip_SetOutmaskReg (FtmBase_27, TemRegVal_47);
  TemRegVal_50 = Ftm_Pwm_Ip_GetFaultModeStatus (FtmBase_27);
  Ftm_Pwm_Ip_SetFaultModeStatus (FtmBase_27, 0);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_27, 1);
  goto <bb 6>; [INV]

  <bb 4> :
  _10 = (int) Instance_25(D);
  _11 = 1 << _10;
  _12 = (unsigned char) _11;
  Ftm_Pwm_Ip_u8FaultCheck.2_13 = Ftm_Pwm_Ip_u8FaultCheck;
  _14 = _12 & Ftm_Pwm_Ip_u8FaultCheck.2_13;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _15 = Ftm_Pwm_Ip_GetSoftwareOutputControl (FtmBase_27);
  TemRegVal_31 = (uint32) _15;
  Ftm_Pwm_Ip_SoftwareOutputControl (FtmBase_27, 0);
  _16 = (short unsigned int) TemRegVal_31;
  Ftm_Pwm_Ip_SoftwareOutputControl (FtmBase_27, _16);
  TemRegVal_35 = Ftm_Pwm_Ip_GetOutputMask (FtmBase_27);
  _17 = Ftm_Pwm_Ip_GetSoftwareOutputControl (FtmBase_27);
  _37 = (long unsigned int) _17;
  TemRegVal_38 = _37 & TemRegVal_35;
  Ftm_Pwm_Ip_ClearOutmaskReg (FtmBase_27, TemRegVal_38);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_27, 1);
  _18 = (int) Instance_25(D);
  _19 = 1 << _18;
  _20 = (unsigned char) _19;
  _21 = ~_20;
  Ftm_Pwm_Ip_u8FaultCheck.3_22 = Ftm_Pwm_Ip_u8FaultCheck;
  _23 = _21 & Ftm_Pwm_Ip_u8FaultCheck.3_22;
  Ftm_Pwm_Ip_u8FaultCheck = _23;

  <bb 6> :
  return;

}


Ftm_Pwm_Ip_SetFaultModeStatus (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 Value)
{
  <bb 2> :
  FtmBase_2(D)->FMS ={v} Value_3(D);
  return;

}


Ftm_Pwm_Ip_GetFaultModeStatus (const struct Ftm_Pwm_Ip_HwAddrType * FtmBase)
{
  uint32 D.6448;
  uint32 _3;

  <bb 2> :
  _3 ={v} FtmBase_2(D)->FMS;

  <bb 3> :
<L0>:
  return _3;

}


Ftm_Pwm_Ip_GetFaultDetectionFlag (const struct Ftm_Pwm_Ip_HwAddrType * FtmBase)
{
  boolean D.6446;
  long unsigned int _1;
  long unsigned int _2;
  boolean _5;

  <bb 2> :
  _1 ={v} FtmBase_4(D)->FMS;
  _2 = _1 & 128;
  _5 = _2 != 0;

  <bb 3> :
<L0>:
  return _5;

}


Ftm_Pwm_Ip_GetChannelMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 ChPairId;
  uint8 Mcombine;
  uint8 Combine;
  uint8 RetValue;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  Ftm_Pwm_Ip_ChannelModeType D.6492;
  unsigned char D.6491;
  unsigned char D.6490;
  uint8 iftmp.8;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  <unnamed type> _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  int _22;
  uint8 iftmp.8_24;
  uint8 iftmp.8_31;
  uint8 iftmp.8_32;
  unsigned char _37;
  unsigned char _40;
  Ftm_Pwm_Ip_ChannelModeType _53;

  <bb 2> :
  ChPairId_26 = Channel_25(D) >> 1;
  _1 ={v} FtmBase_28(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_26;
  _3 = _2 * 8;
  _4 = 1 << _3;
  _5 = _1 & _4;
  _6 = (long unsigned int) ChPairId_26;
  _7 = _6 * 8;
  _8 = _5 >> _7;
  Combine_29 = (uint8) _8;
  _9 ={v} FtmBase_28(D)->COMBINE;
  _10 = (long unsigned int) ChPairId_26;
  _11 = _10 * 8;
  _12 = 128 << _11;
  _13 = _9 & _12;
  _14 = (long unsigned int) ChPairId_26;
  _15 = _14 * 8;
  _16 = _13 >> _15;
  Mcombine_30 = (uint8) _16;
  if (Mcombine_30 == 128)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.8_32 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8_31 = 0;

  <bb 5> :
  # iftmp.8_24 = PHI <iftmp.8_32(3), iftmp.8_31(4)>
  Mcombine_33 = iftmp.8_24;
  RetValue_35 = Ftm_Pwm_Ip_GetChnEdgeLevel (FtmBase_28(D), Channel_25(D));
  _17 = Ftm_Pwm_Ip_GetChnMode (FtmBase_28(D), Channel_25(D));
  _37 = _17 << 2;
  RetValue_38 = _37 | RetValue_35;
  _18 = Ftm_Pwm_Ip_GetCpwms (FtmBase_28(D));
  _19 = (unsigned char) _18;
  _40 = _19 << 4;
  RetValue_41 = _40 | RetValue_38;
  _20 = Combine_29 << 5;
  RetValue_42 = RetValue_41 | _20;
  _21 = Mcombine_33 << 6;
  RetValue_43 = RetValue_42 | _21;
  _22 = (int) RetValue_43;
  switch (_22) <default: <L11> [INV], case 9: <L4> [INV], case 10: <L3> [INV], case 17: <L6> [INV], case 18: <L5> [INV], case 33: <L8> [INV], case 34: <L7> [INV], case 97: <L10> [INV], case 98: <L9> [INV]>

  <bb 6> :
<L3>:
  ChMode_50 = 10;
  goto <bb 15>; [INV]

  <bb 7> :
<L4>:
  ChMode_51 = 9;
  goto <bb 15>; [INV]

  <bb 8> :
<L5>:
  ChMode_48 = 18;
  goto <bb 15>; [INV]

  <bb 9> :
<L6>:
  ChMode_49 = 17;
  goto <bb 15>; [INV]

  <bb 10> :
<L7>:
  ChMode_46 = 34;
  goto <bb 15>; [INV]

  <bb 11> :
<L8>:
  ChMode_47 = 33;
  goto <bb 15>; [INV]

  <bb 12> :
<L9>:
  ChMode_44 = 98;
  goto <bb 15>; [INV]

  <bb 13> :
<L10>:
  ChMode_45 = 97;
  goto <bb 15>; [INV]

  <bb 14> :
<L11>:
  ChMode_52 = 255;

  <bb 15> :
  # ChMode_23 = PHI <ChMode_50(6), ChMode_51(7), ChMode_48(8), ChMode_49(9), ChMode_46(10), ChMode_47(11), ChMode_44(12), ChMode_45(13), ChMode_52(14)>
  _53 = ChMode_23;

  <bb 16> :
<L13>:
  return _53;

}


Ftm_Pwm_Ip_GetSoftwareOutputControl (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint16 D.6452;
  long unsigned int _1;
  uint16 _4;

  <bb 2> :
  _1 ={v} FtmBase_3(D)->SWOCTRL;
  _4 = (uint16) _1;

  <bb 3> :
<L0>:
  return _4;

}


Ftm_Pwm_Ip_SoftwareOutputControl (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  long unsigned int _1;

  <bb 2> :
  _1 = (long unsigned int) Value_2(D);
  FtmBase_4(D)->SWOCTRL ={v} _1;
  return;

}


Ftm_Pwm_Ip_GetOutputMask (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint32 D.6450;
  uint32 _3;

  <bb 2> :
  _3 ={v} FtmBase_2(D)->OUTMASK;

  <bb 3> :
<L0>:
  return _3;

}


Ftm_Pwm_Ip_ClearOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> :
  _1 ={v} FtmBase_5(D)->OUTMASK;
  _2 = ~RegVal_6(D);
  _3 = _1 & _2;
  FtmBase_5(D)->OUTMASK ={v} _3;
  return;

}


Ftm_Pwm_Ip_SetOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->OUTMASK;
  _2 = ~RegVal_7(D);
  _3 = _1 & _2;
  _4 = RegVal_7(D) | _3;
  FtmBase_6(D)->OUTMASK ={v} _4;
  return;

}


Ftm_Pwm_Ip_SetSoftwareTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.4;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.4_4;
  long unsigned int iftmp.4_8;
  long unsigned int iftmp.4_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNC;
  _2 = _1 & 4294967167;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.4_9 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4_8 = 0;

  <bb 5> :
  # iftmp.4_4 = PHI <iftmp.4_9(3), iftmp.4_8(4)>
  _3 = iftmp.4_4 | _2;
  FtmBase_6(D)->SYNC ={v} _3;
  return;

}


Ftm_Pwm_Ip_HasChnEventOccurred (const struct Ftm_Pwm_Ip_HwAddrType * FtmBase, uint8 Channel)
{
  boolean D.6527;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean _7;

  <bb 2> :
  _1 = (int) Channel_4(D);
  _2 ={v} FtmBase_6(D)->CONTROLS[_1].CSC;
  _3 = _2 & 128;
  _7 = _3 != 0;

  <bb 3> :
<L0>:
  return _7;

}


Ftm_Pwm_Ip_ClearChnEventFlag (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  int _1;
  long unsigned int _2;
  int _3;
  long unsigned int _4;

  <bb 2> :
  _1 = (int) Channel_5(D);
  _2 ={v} FtmBase_7(D)->CONTROLS[_1].CSC;
  _3 = (int) Channel_5(D);
  _4 = _2 & 4294967167;
  FtmBase_7(D)->CONTROLS[_3].CSC ={v} _4;
  return;

}


Ftm_Pwm_Ip_IsChnIntEnabled (const struct Ftm_Pwm_Ip_HwAddrType * FtmBase, uint8 Channel)
{
  boolean D.6525;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean _7;

  <bb 2> :
  _1 = (int) Channel_4(D);
  _2 ={v} FtmBase_6(D)->CONTROLS[_1].CSC;
  _3 = _2 & 64;
  _7 = _3 != 0;

  <bb 3> :
<L0>:
  return _7;

}


Ftm_Pwm_Ip_GetChnMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.6498;
  unsigned char D.6497;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _14;
  uint8 _16;

  <bb 2> :
  _1 = (int) Channel_10(D);
  _2 ={v} FtmBase_12(D)->CONTROLS[_1].CSC;
  _3 = _2 >> 4;
  _4 = (unsigned char) _3;
  RetValue_13 = _4 & 1;
  _5 = (int) Channel_10(D);
  _6 ={v} FtmBase_12(D)->CONTROLS[_5].CSC;
  _7 = _6 >> 5;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  _14 = _9 & 2;
  RetValue_15 = _14 | RetValue_13;
  _16 = RetValue_15;

  <bb 3> :
<L0>:
  return _16;

}


Ftm_Pwm_Ip_GetChnEdgeLevel (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.6495;
  unsigned char D.6494;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _14;
  uint8 _16;

  <bb 2> :
  _1 = (int) Channel_10(D);
  _2 ={v} FtmBase_12(D)->CONTROLS[_1].CSC;
  _3 = _2 >> 2;
  _4 = (unsigned char) _3;
  RetValue_13 = _4 & 1;
  _5 = (int) Channel_10(D);
  _6 ={v} FtmBase_12(D)->CONTROLS[_5].CSC;
  _7 = _6 >> 3;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  _14 = _9 & 2;
  RetValue_15 = _14 | RetValue_13;
  _16 = RetValue_15;

  <bb 3> :
<L0>:
  return _16;

}


Ftm_Pwm_Ip_ClearTimerOverflow (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> :
  _1 ={v} FtmBase_4(D)->SC;
  _2 = _1 & 4294966783;
  FtmBase_4(D)->SC ={v} _2;
  return;

}


Ftm_Pwm_Ip_GetTimerOverflow (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  boolean D.6484;
  long unsigned int _1;
  long unsigned int _2;
  boolean _5;

  <bb 2> :
  _1 ={v} FtmBase_4(D)->SC;
  _2 = _1 & 512;
  _5 = _2 != 0;

  <bb 3> :
<L0>:
  return _5;

}


Ftm_Pwm_Ip_IsOverflowIntEnabled (const struct Ftm_Pwm_Ip_HwAddrType * FtmBase)
{
  boolean D.6482;
  long unsigned int _1;
  long unsigned int _2;
  boolean _5;

  <bb 2> :
  _1 ={v} FtmBase_4(D)->SC;
  _2 = _1 & 256;
  _5 = _2 != 0;

  <bb 3> :
<L0>:
  return _5;

}


Ftm_Pwm_Ip_GetCpwms (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  Ftm_Pwm_Ip_CounterModeType D.6500;
  long unsigned int _1;
  long unsigned int _2;
  _Bool _3;
  Ftm_Pwm_Ip_CounterModeType _6;

  <bb 2> :
  _1 ={v} FtmBase_5(D)->SC;
  _2 = _1 & 32;
  _3 = _2 != 0;
  _6 = (Ftm_Pwm_Ip_CounterModeType) _3;

  <bb 3> :
<L0>:
  return _6;

}


