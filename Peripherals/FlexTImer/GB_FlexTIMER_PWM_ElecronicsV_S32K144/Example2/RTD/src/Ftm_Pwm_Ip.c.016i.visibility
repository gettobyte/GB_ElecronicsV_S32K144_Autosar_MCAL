
Marking local functions: Ftm_Pwm_Ip_SetSimOutputBufferEn Ftm_Pwm_Ip_SetFaultFilterEn Ftm_Pwm_Ip_SetFaultInputEn Ftm_Pwm_Ip_SetFaultPolarity Ftm_Pwm_Ip_SetFaultOutputState Ftm_Pwm_Ip_SetFaultFilterValue Ftm_Pwm_Ip_SetFaultInterruptEnable Ftm_Pwm_Ip_SetDualChFaultCtr Ftm_Pwm_Ip_SetFaultControlMode Ftm_Pwm_Ip_SetChnTriggerCmd Ftm_Pwm_Ip_Reset Ftm_Pwm_Ip_UpdateWriteProtection Ftm_Pwm_Ip_GetChannelMode Ftm_Pwm_Ip_GetPolInstance Ftm_Pwm_Ip_GetSoftwareOutputControl Ftm_Pwm_Ip_SetHalfCycleCmd Ftm_Pwm_Ip_SetPwmLoadChnSelCmd Ftm_Pwm_Ip_SoftwareOutputControl Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd Ftm_Pwm_Ip_SetChnSoftwareCtrlVal Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd Ftm_Pwm_Ip_SetPwmSyncModeCmd Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd Ftm_Pwm_Ip_SetInitTriggerMode Ftm_Pwm_Ip_SetBdmMode Ftm_Pwm_Ip_SetLoadFreq Ftm_Pwm_Ip_GetChnOutputPolarity Ftm_Pwm_Ip_SetChnOutputPolarityCmd Ftm_Pwm_Ip_EnableTriggerMask Ftm_Pwm_Ip_DisableTriggerMask Ftm_Pwm_Ip_SetInitTriggerCmd Ftm_Pwm_Ip_SetExtDeadtimeValue Ftm_Pwm_Ip_SetDeadtimePrescaler Ftm_Pwm_Ip_SetDeadtimeCount Ftm_Pwm_Ip_SetDualChnMCombineCmd Ftm_Pwm_Ip_SetDualChnPwmSyncCmd Ftm_Pwm_Ip_SetDualChnDeadtimeCmd Ftm_Pwm_Ip_SetDualChnCompCmd Ftm_Pwm_Ip_GetDualChnCombineCmd Ftm_Pwm_Ip_SetDualChnCombineCmd Ftm_Pwm_Ip_ClearOutmaskReg Ftm_Pwm_Ip_SetOutmaskReg Ftm_Pwm_Ip_SetChnOutputMask Ftm_Pwm_Ip_SetChnOutputInitStateCmd Ftm_Pwm_Ip_SetSoftwareTriggerCmd Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd Ftm_Pwm_Ip_SetMaxLoadingCmd Ftm_Pwm_Ip_SetMinLoadingCmd Ftm_Pwm_Ip_SetPwmSyncMode Ftm_Pwm_Ip_Enable Ftm_Pwm_Ip_SetCounterInitVal Ftm_Pwm_Ip_SetChnCountVal Ftm_Pwm_Ip_GetChOutputValue Ftm_Pwm_Ip_ClearChnEventFlag Ftm_Pwm_Ip_UpdateChnInt Ftm_Pwm_Ip_GetChnMode Ftm_Pwm_Ip_SetChnMSBAMode Ftm_Pwm_Ip_SetChnEdgeLevel Ftm_Pwm_Ip_GetChnEdgeLevel Ftm_Pwm_Ip_SetMod Ftm_Pwm_Ip_SetCounter Ftm_Pwm_Ip_EnablePwmChannelOutputs Ftm_Pwm_Ip_ClearTimerOverflow Ftm_Pwm_Ip_SetTimerOverflowInt Ftm_Pwm_Ip_GetCpwms Ftm_Pwm_Ip_SetCpwms Ftm_Pwm_Ip_SetClockSource Ftm_Pwm_Ip_SetClockPs


Marking externally visible functions: Ftm_Pwm_Ip_SetChannelDeadTime Ftm_Pwm_Ip_SyncUpdate Ftm_Pwm_Ip_EnableTrigger Ftm_Pwm_Ip_DisableTrigger Ftm_Pwm_Ip_SetDutyPhaseShift Ftm_Pwm_Ip_SetPhaseShift Ftm_Pwm_Ip_UnMaskOutputChannels Ftm_Pwm_Ip_MaskOutputChannels Ftm_Pwm_Ip_FastUpdatePwmDuty Ftm_Pwm_Ip_GetChannelState Ftm_Pwm_Ip_ResetCounter Ftm_Pwm_Ip_SetClockMode Ftm_Pwm_Ip_SetPowerState Ftm_Pwm_Ip_EnableNotification Ftm_Pwm_Ip_DisableNotification Ftm_Pwm_Ip_GetOutputState Ftm_Pwm_Ip_UpdatePwmPeriod Ftm_Pwm_Ip_UpdatePwmChannel Ftm_Pwm_Ip_SwOutputControl Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel Ftm_Pwm_Ip_DeInit Ftm_Pwm_Ip_Init


Marking externally visible variables: Ftm_Pwm_Ip_aSimBase Ftm_Pwm_Ip_aFtmBase Ftm_Pwm_Ip_aNotifIrq Ftm_Pwm_Ip_aPreviousChannelState Ftm_Pwm_Ip_aChannelState Ftm_Pwm_Ip_pOverflowIrqCallback Ftm_Pwm_Ip_aChIrqCallbacks Ftm_Pwm_Ip_pFaultIrqCallback Ftm_Pwm_Ip_aPeriod Ftm_Pwm_Ip_u8FaultCheck


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13/212 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13) @06cb02a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13/211 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13) @06cb01c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12/210 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12) @06cb0000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12/209 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12) @06ca9ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11/208 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11) @06ca9c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11/207 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11) @06ca9b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10/206 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10) @06ca98c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10/205 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10) @06ca97e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09/204 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09) @06ca9540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09/203 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09) @06ca9460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08/202 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08) @06ca91c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08/201 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08) @06ca90e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07/200 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07) @06c95e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07/199 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07) @06c95d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05/198 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05) @06c95700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05/197 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05) @06c95540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04/196 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04) @06c952a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableNotification/173 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04/195 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04) @06c951c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableNotification/173 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03/194 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03) @06c82ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03/193 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03) @06c82e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01/192 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01) @06c82540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01/191 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01) @06c82460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00/190 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00) @06c70ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00/189 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00) @06c70d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
Ftm_Pwm_Ip_SetChannelDeadTime/188 (Ftm_Pwm_Ip_SetChannelDeadTime) @06bf22a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13/212 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13/211 
Ftm_Pwm_Ip_SyncUpdate/187 (Ftm_Pwm_Ip_SyncUpdate) @06bf2ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12/210 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12/209 
Ftm_Pwm_Ip_EnableTrigger/186 (Ftm_Pwm_Ip_EnableTrigger) @06bf2c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11/208 Ftm_Pwm_Ip_EnableTriggerMask/68 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11/207 
Ftm_Pwm_Ip_DisableTrigger/185 (Ftm_Pwm_Ip_DisableTrigger) @06bf29a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10/206 Ftm_Pwm_Ip_DisableTriggerMask/67 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10/205 
Ftm_Pwm_Ip_SetDutyPhaseShift/184 (Ftm_Pwm_Ip_SetDutyPhaseShift) @06bf2700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPhaseShift/134 (write)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_CalculatePhaseShift/148 
Ftm_Pwm_Ip_SetPhaseShift/183 (Ftm_Pwm_Ip_SetPhaseShift) @06bf2460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09/204 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_GetCpwms/6 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09/203 
Ftm_Pwm_Ip_UnMaskOutputChannels/182 (Ftm_Pwm_Ip_UnMaskOutputChannels) @06bf21c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08/202 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_ClearOutmaskReg/51 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08/201 
Ftm_Pwm_Ip_MaskOutputChannels/181 (Ftm_Pwm_Ip_MaskOutputChannels) @06be7e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07/200 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetOutmaskReg/50 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07/199 
Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (Ftm_Pwm_Ip_FastUpdatePwmDuty) @06be78c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 
Ftm_Pwm_Ip_GetChannelState/179 (Ftm_Pwm_Ip_GetChannelState) @06be7380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aDutyCycle/133 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Ftm_Pwm_Ip_ResetCounter/178 (Ftm_Pwm_Ip_ResetCounter) @06be7d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 
Ftm_Pwm_Ip_SetClockMode/177 (Ftm_Pwm_Ip_SetClockMode) @06be7a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (read)Ftm_Pwm_Ip_aClockPrescaler/144 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetClockPs/1 Ftm_Pwm_Ip_SetClockPs/1 
Ftm_Pwm_Ip_SetPowerState/176 (Ftm_Pwm_Ip_SetPowerState) @06be77e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aClockSource/143 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_SetClockSource/3 
Ftm_Pwm_Ip_EnableNotification/175 (Ftm_Pwm_Ip_EnableNotification) @06be7540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05/198 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 Ftm_Pwm_Ip_UpdateNotificationState/151 Ftm_Pwm_Ip_GetChannelMode/109 Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_ClearChnEventFlag/29 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05/197 
Ftm_Pwm_Ip_SetNormalNotificationCase/174 (Ftm_Pwm_Ip_SetNormalNotificationCase) @06be72a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_ClearChnEventFlag/29 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_GetChannelMode/109 
Ftm_Pwm_Ip_DisableNotification/173 (Ftm_Pwm_Ip_DisableNotification) @06be7000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04/196 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_GetChannelMode/109 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04/195 
Ftm_Pwm_Ip_GetOutputState/172 (Ftm_Pwm_Ip_GetOutputState) @06bd8b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03/194 Ftm_Pwm_Ip_GetChOutputValue/31 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03/193 
Ftm_Pwm_Ip_UpdatePwmPeriod/171 (Ftm_Pwm_Ip_UpdatePwmPeriod) @06bd8620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_GetCpwms/6 
Ftm_Pwm_Ip_UpdatePwmChannel/170 (Ftm_Pwm_Ip_UpdatePwmChannel) @06bd80e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_SetDutyPhaseShift/184 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_GetCpwms/6 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_GetDualChnCombineCmd/54 
Ftm_Pwm_Ip_SwOutputControl/169 (Ftm_Pwm_Ip_SwOutputControl) @06bd8d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SoftwareOutputControl/98 Ftm_Pwm_Ip_GetPolInstance/106 Ftm_Pwm_Ip_GetSoftwareOutputControl/105 Ftm_Pwm_Ip_GetChannelMode/109 
Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty) @06bd8a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aPeriod/132 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01/192 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_SwOutputControl/169 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01/191 
Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel) @06bd87e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aPhaseShift/134 (read)Ftm_Pwm_Ip_aPhaseShift/134 (read)Ftm_Pwm_Ip_aPhaseShift/134 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_InitChannel/161 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00/190 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_CalculatePhaseShift/148 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_GetChannelMode/109 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00/189 
Ftm_Pwm_Ip_DeInit/166 (Ftm_Pwm_Ip_DeInit) @06bd8540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_Reset/111 
Ftm_Pwm_Ip_Init/165 (Ftm_Pwm_Ip_Init) @06bd82a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_u8FaultCheck/131 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_InitChFault/164 Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitInstance/157 
Ftm_Pwm_Ip_InitChFault/164 (Ftm_Pwm_Ip_InitChFault) @06bd8000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_pFaultIrqCallback/135 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetFaultInputEn/128 Ftm_Pwm_Ip_SetFaultFilterEn/129 Ftm_Pwm_Ip_SetFaultPolarity/127 
Ftm_Pwm_Ip_DeInitChannel/163 (Ftm_Pwm_Ip_DeInitChannel) @06bcfd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aIdleState/141 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_DeInit/166 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnOutputMask/49 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_DisableCmpIrq/150 
Ftm_Pwm_Ip_DeInitInstance/162 (Ftm_Pwm_Ip_DeInitInstance) @06bcfa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_DeInit/166 
  Calls: Ftm_Pwm_Ip_SetCounter/17 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_SetBdmMode/73 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetDeadtimePrescaler/61 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetClockSource/3 
Ftm_Pwm_Ip_InitChannel/161 (Ftm_Pwm_Ip_InitChannel) @06bcf7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)Ftm_Pwm_Ip_aIdleState/141 (write)Ftm_Pwm_Ip_aPolarity/142 (write)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aChIrqCallbacks/136 (write)Ftm_Pwm_Ip_aChIrqCallbacks/136 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_SetChnMSBAMode/25 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 
Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 (Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl) @06bcf540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 Ftm_Pwm_Ip_SetChnTriggerCmd/112 
Ftm_Pwm_Ip_ConfigurePairedChannel/159 (Ftm_Pwm_Ip_ConfigurePairedChannel) @06bcf2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 Ftm_Pwm_Ip_SetDualChnCombineCmd/53 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetDualChnCombineCmd/53 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetDualChFaultCtr/114 Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 
Ftm_Pwm_Ip_InitInstanceStart/158 (Ftm_Pwm_Ip_InitInstanceStart) @06bcf000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_SetClockPs/1 Ftm_Pwm_Ip_SetPwmSyncMode/41 Ftm_Pwm_Ip_Enable/38 Ftm_Pwm_Ip_SetFaultInterruptEnable/115 Ftm_Pwm_Ip_SetFaultControlMode/113 Ftm_Pwm_Ip_SetFaultOutputState/126 Ftm_Pwm_Ip_SetFaultFilterValue/125 
Ftm_Pwm_Ip_InitInstance/157 (Ftm_Pwm_Ip_InitInstance) @068d2540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)Ftm_Pwm_Ip_aClockSource/143 (write)Ftm_Pwm_Ip_aClockPrescaler/144 (write)Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (write)Ftm_Pwm_Ip_pOverflowIrqCallback/137 (write)Ftm_Pwm_Ip_pOverflowIrqCallback/137 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetInitTriggerMode/76 Ftm_Pwm_Ip_SetInitTriggerCmd/64 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetCounterInitVal/34 Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 Ftm_Pwm_Ip_SetSimOutputBufferEn/130 
Ftm_Pwm_Ip_ResetAndFirstConfigure/156 (Ftm_Pwm_Ip_ResetAndFirstConfigure) @068d2ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: Ftm_Pwm_Ip_SetDeadtimePrescaler/61 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetBdmMode/73 Ftm_Pwm_Ip_Enable/38 Ftm_Pwm_Ip_SetCpwms/5 Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_Reset/111 
Ftm_Pwm_Ip_UpdateSync/155 (Ftm_Pwm_Ip_UpdateSync) @068d2c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: Ftm_Pwm_Ip_ConfigureSyncType/154 Ftm_Pwm_Ip_SetLoadFreq/72 Ftm_Pwm_Ip_SetHalfCycleCmd/100 Ftm_Pwm_Ip_SetMinLoadingCmd/42 Ftm_Pwm_Ip_SetMaxLoadingCmd/43 Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
Ftm_Pwm_Ip_ConfigureSyncType/154 (Ftm_Pwm_Ip_ConfigureSyncType) @068d29a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 
Ftm_Pwm_Ip_ConfigureSWandHWSync/153 (Ftm_Pwm_Ip_ConfigureSWandHWSync) @068d2700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 
Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (Ftm_Pwm_Ip_UpdateNotificationStateCombine) @068d2460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
Ftm_Pwm_Ip_UpdateNotificationState/151 (Ftm_Pwm_Ip_UpdateNotificationState) @068d21c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
Ftm_Pwm_Ip_DisableCmpIrq/150 (Ftm_Pwm_Ip_DisableCmpIrq) @068c8d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_ClearChnEventFlag/29 Ftm_Pwm_Ip_UpdateChnInt/27 
Ftm_Pwm_Ip_InitPair/149 (Ftm_Pwm_Ip_InitPair) @068c8ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPhaseShift/134 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnTriggerCmd/112 Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_GetChnOutputPolarity/70 Ftm_Pwm_Ip_SetDualChnCompCmd/55 
Ftm_Pwm_Ip_CalculatePhaseShift/148 (Ftm_Pwm_Ip_CalculatePhaseShift) @068c8c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aPeriod/132 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_SetDutyPhaseShift/184 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
Ftm_Pwm_Ip_aSimBase/147 (Ftm_Pwm_Ip_aSimBase) @06a3a900
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Ftm_Pwm_Ip_aFtmBase/146 (Ftm_Pwm_Ip_aFtmBase) @06a3a870
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitPair/149 (read)Ftm_Pwm_Ip_DisableCmpIrq/150 (read)Ftm_Pwm_Ip_ConfigureSWandHWSync/153 (read)Ftm_Pwm_Ip_ConfigureSyncType/154 (read)Ftm_Pwm_Ip_UpdateSync/155 (read)Ftm_Pwm_Ip_ResetAndFirstConfigure/156 (read)Ftm_Pwm_Ip_InitInstance/157 (read)Ftm_Pwm_Ip_InitInstanceStart/158 (read)Ftm_Pwm_Ip_ConfigurePairedChannel/159 (read)Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 (read)Ftm_Pwm_Ip_InitChannel/161 (read)Ftm_Pwm_Ip_DeInitInstance/162 (read)Ftm_Pwm_Ip_DeInitChannel/163 (read)Ftm_Pwm_Ip_InitChFault/164 (read)Ftm_Pwm_Ip_DeInit/166 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (read)Ftm_Pwm_Ip_SwOutputControl/169 (read)Ftm_Pwm_Ip_UpdatePwmChannel/170 (read)Ftm_Pwm_Ip_UpdatePwmPeriod/171 (read)Ftm_Pwm_Ip_GetOutputState/172 (read)Ftm_Pwm_Ip_DisableNotification/173 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_SetPowerState/176 (read)Ftm_Pwm_Ip_SetClockMode/177 (read)Ftm_Pwm_Ip_ResetCounter/178 (read)Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (read)Ftm_Pwm_Ip_MaskOutputChannels/181 (read)Ftm_Pwm_Ip_UnMaskOutputChannels/182 (read)Ftm_Pwm_Ip_SetPhaseShift/183 (read)Ftm_Pwm_Ip_DisableTrigger/185 (read)Ftm_Pwm_Ip_EnableTrigger/186 (read)Ftm_Pwm_Ip_SyncUpdate/187 (read)Ftm_Pwm_Ip_SetChannelDeadTime/188 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (Ftm_Pwm_Ip_aAlternateClockPrescaler) @06a3a7e0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetClockMode/177 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aClockPrescaler/144 (Ftm_Pwm_Ip_aClockPrescaler) @06a3a750
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetClockMode/177 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aClockSource/143 (Ftm_Pwm_Ip_aClockSource) @06a3a6c0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetPowerState/176 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPolarity/142 (Ftm_Pwm_Ip_aPolarity) @06a3a630
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_InitChannel/161 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aIdleState/141 (Ftm_Pwm_Ip_aIdleState) @06a3a5a0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_DeInitChannel/163 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aNotifIrq/140 (Ftm_Pwm_Ip_aNotifIrq) @06a3a510
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_DisableCmpIrq/150 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_DeInitChannel/163 (write)Ftm_Pwm_Ip_DeInitChannel/163 (write)Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPreviousChannelState/139 (Ftm_Pwm_Ip_aPreviousChannelState) @06a3a480
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aChannelState/138 (Ftm_Pwm_Ip_aChannelState) @06a3a3f0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_DeInit/166 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (write)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (read)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (write)Ftm_Pwm_Ip_SwOutputControl/169 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_pOverflowIrqCallback/137 (Ftm_Pwm_Ip_pOverflowIrqCallback) @06a3a360
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_InitInstance/157 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aChIrqCallbacks/136 (Ftm_Pwm_Ip_aChIrqCallbacks) @06a3a2d0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_InitChannel/161 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_pFaultIrqCallback/135 (Ftm_Pwm_Ip_pFaultIrqCallback) @06a3a240
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitChFault/164 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPhaseShift/134 (Ftm_Pwm_Ip_aPhaseShift) @06a3a1b0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitPair/149 (write)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_SetDutyPhaseShift/184 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aDutyCycle/133 (Ftm_Pwm_Ip_aDutyCycle) @06a3a120
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_InitChannel/161 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (write)Ftm_Pwm_Ip_SwOutputControl/169 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_GetChannelState/179 (read)Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (write)Ftm_Pwm_Ip_SetPhaseShift/183 (write)Ftm_Pwm_Ip_SetDutyPhaseShift/184 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPeriod/132 (Ftm_Pwm_Ip_aPeriod) @06a3a090
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (write)Ftm_Pwm_Ip_UpdatePwmChannel/170 (read)Ftm_Pwm_Ip_UpdatePwmPeriod/171 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_SetPhaseShift/183 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_u8FaultCheck/131 (Ftm_Pwm_Ip_u8FaultCheck) @06a3a000
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_Init/165 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_SetSimOutputBufferEn/130 (Ftm_Pwm_Ip_SetSimOutputBufferEn) @069c1000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetFaultFilterEn/129 (Ftm_Pwm_Ip_SetFaultFilterEn) @069bcd20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultInputEn/128 (Ftm_Pwm_Ip_SetFaultInputEn) @069bca80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultPolarity/127 (Ftm_Pwm_Ip_SetFaultPolarity) @069bc7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultOutputState/126 (Ftm_Pwm_Ip_SetFaultOutputState) @069bc540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetFaultFilterValue/125 (Ftm_Pwm_Ip_SetFaultFilterValue) @069bc2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetFaultInterruptEnable/115 (Ftm_Pwm_Ip_SetFaultInterruptEnable) @069b5620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetDualChFaultCtr/114 (Ftm_Pwm_Ip_SetDualChFaultCtr) @069b5380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_SetFaultControlMode/113 (Ftm_Pwm_Ip_SetFaultControlMode) @069b50e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetChnTriggerCmd/112 (Ftm_Pwm_Ip_SetChnTriggerCmd) @069aea80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_Reset/111 (Ftm_Pwm_Ip_Reset) @069ae7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInit/166 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: Ftm_Pwm_Ip_UpdateWriteProtection/110 
Ftm_Pwm_Ip_UpdateWriteProtection/110 (Ftm_Pwm_Ip_UpdateWriteProtection) @069ae2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_Reset/111 
  Calls: 
Ftm_Pwm_Ip_GetChannelMode/109 (Ftm_Pwm_Ip_GetChannelMode) @069a3e00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: Ftm_Pwm_Ip_GetCpwms/6 Ftm_Pwm_Ip_GetChnMode/26 Ftm_Pwm_Ip_GetChnEdgeLevel/23 
Ftm_Pwm_Ip_GetPolInstance/106 (Ftm_Pwm_Ip_GetPolInstance) @069a3620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_GetSoftwareOutputControl/105 (Ftm_Pwm_Ip_GetSoftwareOutputControl) @069a3380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_SetHalfCycleCmd/100 (Ftm_Pwm_Ip_SetHalfCycleCmd) @069a0620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 (Ftm_Pwm_Ip_SetPwmLoadChnSelCmd) @069a0380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SoftwareOutputControl/98 (Ftm_Pwm_Ip_SoftwareOutputControl) @069a00e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 (Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd) @0699de00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 (Ftm_Pwm_Ip_SetChnSoftwareCtrlVal) @0699d8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 (Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd) @06998b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 (Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd) @069988c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 (Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd) @06998620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 (Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd) @06998380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 (Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd) @069980e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 (Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd) @06993e00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 (Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd) @06993b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 (Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd) @069938c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 (Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd) @06993620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ResetCounter/178 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 (Ftm_Pwm_Ip_SetPwmSyncModeCmd) @06993380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 (Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd) @069930e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 (Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd) @0698fe00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 (Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd) @0698fb60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 (Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd) @0698f8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetInitTriggerMode/76 (Ftm_Pwm_Ip_SetInitTriggerMode) @0698f620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetBdmMode/73 (Ftm_Pwm_Ip_SetBdmMode) @0698ad20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetLoadFreq/72 (Ftm_Pwm_Ip_SetLoadFreq) @0698a9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_GetChnOutputPolarity/70 (Ftm_Pwm_Ip_GetChnOutputPolarity) @0698a380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 (Ftm_Pwm_Ip_SetChnOutputPolarityCmd) @0698a0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_EnableTriggerMask/68 (Ftm_Pwm_Ip_EnableTriggerMask) @06987e00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
Ftm_Pwm_Ip_DisableTriggerMask/67 (Ftm_Pwm_Ip_DisableTriggerMask) @06987b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
Ftm_Pwm_Ip_SetInitTriggerCmd/64 (Ftm_Pwm_Ip_SetInitTriggerCmd) @069872a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetExtDeadtimeValue/63 (Ftm_Pwm_Ip_SetExtDeadtimeValue) @06987000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDeadtimePrescaler/61 (Ftm_Pwm_Ip_SetDeadtimePrescaler) @069839a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDeadtimeCount/60 (Ftm_Pwm_Ip_SetDeadtimeCount) @06983620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 (Ftm_Pwm_Ip_SetDualChnMCombineCmd) @06983000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 (Ftm_Pwm_Ip_SetDualChnPwmSyncCmd) @0697dd20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 (Ftm_Pwm_Ip_SetDualChnDeadtimeCmd) @0697da80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetDualChnCompCmd/55 (Ftm_Pwm_Ip_SetDualChnCompCmd) @0697d7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_GetDualChnCombineCmd/54 (Ftm_Pwm_Ip_GetDualChnCombineCmd) @0697d540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdatePwmChannel/170 
  Calls: 
Ftm_Pwm_Ip_SetDualChnCombineCmd/53 (Ftm_Pwm_Ip_SetDualChnCombineCmd) @0697d2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_ClearOutmaskReg/51 (Ftm_Pwm_Ip_ClearOutmaskReg) @06978d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskReg/50 (Ftm_Pwm_Ip_SetOutmaskReg) @06978a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputMask/49 (Ftm_Pwm_Ip_SetChnOutputMask) @069787e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 (Ftm_Pwm_Ip_SetChnOutputInitStateCmd) @06978540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: 
Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 (Ftm_Pwm_Ip_SetSoftwareTriggerCmd) @069782a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UnMaskOutputChannels/182 Ftm_Pwm_Ip_MaskOutputChannels/181 Ftm_Pwm_Ip_FastUpdatePwmDuty/180 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 (Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc) @06978000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 (Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd) @068f9d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetMaxLoadingCmd/43 (Ftm_Pwm_Ip_SetMaxLoadingCmd) @068f97e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetMinLoadingCmd/42 (Ftm_Pwm_Ip_SetMinLoadingCmd) @068f9540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetPwmSyncMode/41 (Ftm_Pwm_Ip_SetPwmSyncMode) @068f92a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_Enable/38 (Ftm_Pwm_Ip_Enable) @068f7a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetCounterInitVal/34 (Ftm_Pwm_Ip_SetCounterInitVal) @068f7000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetChnCountVal/32 (Ftm_Pwm_Ip_SetChnCountVal) @068f39a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_FastUpdatePwmDuty/180 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 
  Calls: 
Ftm_Pwm_Ip_GetChOutputValue/31 (Ftm_Pwm_Ip_GetChOutputValue) @068f3700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
Ftm_Pwm_Ip_ClearChnEventFlag/29 (Ftm_Pwm_Ip_ClearChnEventFlag) @068f31c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_UpdateChnInt/27 (Ftm_Pwm_Ip_UpdateChnInt) @068eeb60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_GetChnMode/26 (Ftm_Pwm_Ip_GetChnMode) @068ee8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetChnMSBAMode/25 (Ftm_Pwm_Ip_SetChnMSBAMode) @068ee620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: 
Ftm_Pwm_Ip_SetChnEdgeLevel/24 (Ftm_Pwm_Ip_SetChnEdgeLevel) @068ee380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_GetChnEdgeLevel/23 (Ftm_Pwm_Ip_GetChnEdgeLevel) @068ee0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetMod/19 (Ftm_Pwm_Ip_SetMod) @06894620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_InitInstance/157 Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetCounter/17 (Ftm_Pwm_Ip_SetCounter) @06894000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 
  Calls: 
Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 (Ftm_Pwm_Ip_EnablePwmChannelOutputs) @068909a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_ClearTimerOverflow/14 (Ftm_Pwm_Ip_ClearTimerOverflow) @06890700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_SetTimerOverflowInt/11 (Ftm_Pwm_Ip_SetTimerOverflowInt) @0688be00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_GetCpwms/6 (Ftm_Pwm_Ip_GetCpwms) @0688b000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetCpwms/5 (Ftm_Pwm_Ip_SetCpwms) @06858d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetClockSource/3 (Ftm_Pwm_Ip_SetClockSource) @068587e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPowerState/176 Ftm_Pwm_Ip_SetPowerState/176 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetClockPs/1 (Ftm_Pwm_Ip_SetClockPs) @068581c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetClockMode/177 Ftm_Pwm_Ip_SetClockMode/177 Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetChannelDeadTime (uint8 Instance, uint8 Channel, uint16 DeadTimeVal)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13 ();
  if (DeadTimeVal <= 63)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (unsigned char) DeadTimeVal;
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase, _2);
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase, 0);
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = (unsigned char) DeadTimeVal;
  _4 = _3 & 63;
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase, _4);
  _5 = DeadTimeVal >> 6;
  _6 = (unsigned char) _5;
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase, _6);

  <bb 5> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13 ();
  return;

}


Ftm_Pwm_Ip_SyncUpdate (uint8 Instance)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12 ();
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 1);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12 ();
  return;

}


Ftm_Pwm_Ip_EnableTrigger (uint8 Instance, uint32 TriggerMask)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11 ();
  Ftm_Pwm_Ip_EnableTriggerMask (FtmBase, TriggerMask);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11 ();
  return;

}


Ftm_Pwm_Ip_DisableTrigger (uint8 Instance, uint32 TriggerMask)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10 ();
  Ftm_Pwm_Ip_DisableTriggerMask (FtmBase, TriggerMask);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10 ();
  return;

}


Ftm_Pwm_Ip_SetDutyPhaseShift (uint8 Instance, uint8 Channel, uint16 DutyCycle, uint16 PhaseShift, boolean SyncUpdate)
{
  boolean SoftwareTrigger;
  uint8 PairId;
  uint16 SecondEdgeEdge;
  uint16 FirstEdge;

  <bb 2> :
  PairId = Channel >> 1;
  _1 = (int) Instance;
  _2 = (int) PairId;
  Ftm_Pwm_Ip_aPhaseShift[_1][_2] = PhaseShift;
  _3 = (int) Instance;
  _4 = (int) Channel;
  Ftm_Pwm_Ip_aDutyCycle[_3][_4] = DutyCycle;
  if (PhaseShift == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  FirstEdge = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  FirstEdge = PhaseShift;

  <bb 5> :
  SecondEdgeEdge = Ftm_Pwm_Ip_CalculatePhaseShift (Instance, DutyCycle, PhaseShift);
  if (SyncUpdate != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  SoftwareTrigger = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  SoftwareTrigger = 1;

  <bb 8> :
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance, Channel, FirstEdge, SecondEdgeEdge, SoftwareTrigger);
  return;

}


Ftm_Pwm_Ip_SetPhaseShift (uint8 Instance, uint8 Channel, uint16 Period, uint16 PhaseShift, boolean SoftwareTrigger)
{
  uint16 DutyCycleVal;
  uint8 PairChId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId = Channel >> 1;
  _2 = (int) Instance;
  Ftm_Pwm_Ip_aPeriod[_2] = Period;
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09 ();
  _3 = Ftm_Pwm_Ip_GetCpwms (FtmBase);
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = Period >> 1;
  Ftm_Pwm_Ip_SetMod (FtmBase, _4);
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = Period + 65535;
  Ftm_Pwm_Ip_SetMod (FtmBase, _5);

  <bb 5> :
  _6 = PairChId * 2;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, _6, PhaseShift);
  DutyCycleVal = Period >> 1;
  _7 = (int) Instance;
  _8 = (int) Channel;
  Ftm_Pwm_Ip_aDutyCycle[_7][_8] = DutyCycleVal;
  _9 = PairChId * 2;
  _10 = _9 + 1;
  _11 = PhaseShift + DutyCycleVal;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, _10, _11);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09 ();
  return;

}


Ftm_Pwm_Ip_UnMaskOutputChannels (uint8 Instance, uint32 ChannelsMask, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08 ();
  Ftm_Pwm_Ip_ClearOutmaskReg (FtmBase, ChannelsMask);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08 ();
  return;

}


Ftm_Pwm_Ip_MaskOutputChannels (uint8 Instance, uint32 ChannelsMask, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07 ();
  Ftm_Pwm_Ip_SetOutmaskReg (FtmBase, ChannelsMask);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07 ();
  return;

}


Ftm_Pwm_Ip_FastUpdatePwmDuty (uint8 Instance, uint8 NumberOfChannels, const uint8 * Channels, const uint16 * Duty, boolean SoftwareTrigger)
{
  uint8 Index;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  Index = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) Index;
  _3 = Channels + _2;
  _4 = *_3;
  _5 = (unsigned int) Index;
  _6 = _5 * 2;
  _7 = Duty + _6;
  _8 = *_7;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, _4, _8);
  _9 = (unsigned int) Index;
  _10 = _9 * 2;
  _11 = Duty + _10;
  _12 = (int) Instance;
  _13 = (sizetype) Index;
  _14 = Channels + _13;
  _15 = *_14;
  _16 = (int) _15;
  _17 = *_11;
  Ftm_Pwm_Ip_aDutyCycle[_12][_16] = _17;
  Index.35_18 = Index;
  Index = Index.35_18 + 1;

  <bb 4> :
  if (Index < NumberOfChannels)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  return;

}


Ftm_Pwm_Ip_GetChannelState (uint8 Instance, uint8 Channel)
{
  uint16 DutyCycle;
  uint16 D.7291;

  <bb 2> :
  _1 = (int) Instance;
  _2 = (int) Channel;
  DutyCycle = Ftm_Pwm_Ip_aDutyCycle[_1][_2];
  D.7291 = DutyCycle;

  <bb 3> :
<L0>:
  return D.7291;

}


Ftm_Pwm_Ip_ResetCounter (uint8 Instance, boolean IsResetCnt)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase, IsResetCnt);
  return;

}


Ftm_Pwm_Ip_SetClockMode (uint8 Instance, Ftm_Pwm_Ip_PrescalerType Prescaler)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  if (Prescaler == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (int) Instance;
  _3 = Ftm_Pwm_Ip_aAlternateClockPrescaler[_2];
  Ftm_Pwm_Ip_SetClockPs (FtmBase, _3);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = (int) Instance;
  _5 = Ftm_Pwm_Ip_aClockPrescaler[_4];
  Ftm_Pwm_Ip_SetClockPs (FtmBase, _5);

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetPowerState (uint8 Instance, Ftm_Pwm_Ip_PowerStateType PowerState)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  if (PowerState == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetClockSource (FtmBase, 0);
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (int) Instance;
  _3 = Ftm_Pwm_Ip_aClockSource[_2];
  Ftm_Pwm_Ip_SetClockSource (FtmBase, _3);

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_EnableNotification (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05 ();
  _2 = (int) Instance;
  _3 = (int) Channel;
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  _5 = (int) Instance;
  _6 = (int) Channel;
  _7 = _4 & 252;
  Ftm_Pwm_Ip_aNotifIrq[_5][_6] = _7;
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase, Channel);
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase);
  ChMode = Ftm_Pwm_Ip_GetChannelMode (FtmBase, Channel);
  if (ChMode == 10)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ChMode == 9)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (ChMode == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode == 17)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_UpdateNotificationState (Instance, Channel, EdgeNotif);
  goto <bb 8>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_UpdateNotificationStateCombine (Instance, Channel, EdgeNotif);

  <bb 8> :
  _8 = (int) Instance;
  _9 = (int) Channel;
  _10 = Ftm_Pwm_Ip_aDutyCycle[_8][_9];
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _11 = (int) Instance;
  _12 = Ftm_Pwm_Ip_aPeriod[_11];
  _13 = (int) Instance;
  _14 = (int) Channel;
  _15 = Ftm_Pwm_Ip_aDutyCycle[_13][_14];
  if (_12 != _15)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Ftm_Pwm_Ip_SetNormalNotificationCase (Instance, Channel);
  goto <bb 12>; [INV]

  <bb 11> :
  _16 = (int) Instance;
  _17 = (int) Channel;
  _18 = Ftm_Pwm_Ip_aNotifIrq[_16][_17];
  _19 = (int) Instance;
  _20 = (int) Channel;
  _21 = _18 | 4;
  Ftm_Pwm_Ip_aNotifIrq[_19][_20] = _21;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance, Channel);

  <bb 12> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05 ();
  return;

}


Ftm_Pwm_Ip_SetNormalNotificationCase (uint8 Instance, uint8 Channel)
{
  uint8 PairChId;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId = Channel >> 1;
  ChMode = Ftm_Pwm_Ip_GetChannelMode (FtmBase, Channel);
  _2 = (int) Instance;
  _3 = (int) Channel;
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  _5 = (int) _4;
  _6 = _5 & 2;
  if (_6 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase, 1);

  <bb 4> :
  _7 = (int) Instance;
  _8 = (int) Channel;
  _9 = Ftm_Pwm_Ip_aNotifIrq[_7][_8];
  _10 = (int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, Channel, 1);
  goto <bb 7>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, Channel, 0);

  <bb 7> :
  if (ChMode == 34)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (ChMode == 98)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (ChMode == 97)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (ChMode == 33)
    goto <bb 11>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 11> :
  _12 = PairChId * 2;
  _13 = _12 + 1;
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase, _13);
  _14 = (int) Instance;
  _15 = PairChId * 2;
  _16 = (int) _15;
  _17 = Ftm_Pwm_Ip_aNotifIrq[_14][_16];
  _18 = (int) _17;
  _19 = _18 & 1;
  if (_19 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _20 = PairChId * 2;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, _20, 1);
  goto <bb 14>; [INV]

  <bb 13> :
  _21 = PairChId * 2;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, _21, 0);

  <bb 14> :
  _22 = (int) Instance;
  _23 = PairChId * 2;
  _24 = _23 + 1;
  _25 = (int) _24;
  _26 = Ftm_Pwm_Ip_aNotifIrq[_22][_25];
  _27 = (int) _26;
  _28 = _27 & 1;
  if (_28 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _29 = PairChId * 2;
  _30 = _29 + 1;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, _30, 1);
  goto <bb 17>; [INV]

  <bb 16> :
  _31 = PairChId * 2;
  _32 = _31 + 1;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, _32, 0);

  <bb 17> :
  return;

}


Ftm_Pwm_Ip_DisableNotification (uint8 Instance, uint8 Channel)
{
  uint8 PairChId;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId = Channel >> 1;
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04 ();
  ChMode = Ftm_Pwm_Ip_GetChannelMode (FtmBase, Channel);
  _2 = (int) Instance;
  _3 = (int) Channel;
  Ftm_Pwm_Ip_aNotifIrq[_2][_3] = 0;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance, Channel);
  if (ChMode == 34)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ChMode == 98)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (ChMode == 97)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode == 33)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = (int) Instance;
  _5 = PairChId * 2;
  _6 = (int) _5;
  Ftm_Pwm_Ip_aNotifIrq[_4][_6] = 0;
  _7 = (int) Instance;
  _8 = PairChId * 2;
  _9 = _8 + 1;
  _10 = (int) _9;
  Ftm_Pwm_Ip_aNotifIrq[_7][_10] = 0;
  _11 = PairChId * 2;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance, _11);
  _12 = PairChId * 2;
  _13 = _12 + 1;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance, _13);

  <bb 7> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04 ();
  return;

}


Ftm_Pwm_Ip_GetOutputState (uint8 Instance, uint8 Channel)
{
  Ftm_Pwm_Ip_OutputStateType OutputValue;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  Ftm_Pwm_Ip_OutputStateType D.7249;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03 ();
  _2 = Ftm_Pwm_Ip_GetChOutputValue (FtmBase, Channel);
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  OutputValue = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  OutputValue = 0;

  <bb 5> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03 ();
  D.7249 = OutputValue;

  <bb 6> :
<L3>:
  return D.7249;

}


Ftm_Pwm_Ip_UpdatePwmPeriod (uint8 Instance, uint32 NewValue, boolean SoftwareTrigger)
{
  uint32 FtmPeriod;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7244;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  FtmPeriod = 0;
  FtmPeriod = NewValue;
  _2 = (int) Instance;
  _3 = (short unsigned int) NewValue;
  Ftm_Pwm_Ip_aPeriod[_2] = _3;
  _4 = Ftm_Pwm_Ip_GetCpwms (FtmBase);
  if (_4 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  FtmPeriod = FtmPeriod >> 1;
  goto <bb 5>; [INV]

  <bb 4> :
  FtmPeriod = FtmPeriod + 4294967295;

  <bb 5> :
  _5 = (short unsigned int) FtmPeriod;
  Ftm_Pwm_Ip_SetMod (FtmBase, _5);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  D.7244 = 0;

  <bb 6> :
<L3>:
  return D.7244;

}


Ftm_Pwm_Ip_UpdatePwmChannel (uint8 Instance, uint8 Channel, uint16 FirstEdge, uint16 SecondEdge, boolean SoftwareTrigger)
{
  uint8 ChPairId;
  uint16 FtmPeriod;
  uint16 HwSecondEdge;
  uint16 HwFirstEdge;
  Ftm_Pwm_Ip_StatusType RetStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7237;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  RetStatus = 0;
  HwFirstEdge = 0;
  HwSecondEdge = 0;
  FtmPeriod = 0;
  ChPairId = Channel >> 1;
  _2 = (int) Instance;
  FtmPeriod = Ftm_Pwm_Ip_aPeriod[_2];
  if (FirstEdge <= FtmPeriod)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  if (SecondEdge <= FtmPeriod)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (FtmPeriod == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  HwFirstEdge = FirstEdge;
  HwSecondEdge = SecondEdge;
  goto <bb 7>; [INV]

  <bb 6> :
  RetStatus = 1;

  <bb 7> :
  if (RetStatus == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  _3 = Ftm_Pwm_Ip_GetDualChnCombineCmd (FtmBase, ChPairId);
  if (_3 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _4 = ChPairId * 2;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, _4, HwFirstEdge);
  _5 = ChPairId * 2;
  _6 = _5 + 1;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, _6, HwSecondEdge);
  goto <bb 13>; [INV]

  <bb 10> :
  _7 = Ftm_Pwm_Ip_GetCpwms (FtmBase);
  if (_7 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _8 = HwFirstEdge >> 1;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, Channel, _8);
  goto <bb 13>; [INV]

  <bb 12> :
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase, Channel, HwFirstEdge);

  <bb 13> :
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);

  <bb 14> :
  D.7237 = RetStatus;

  <bb 15> :
<L13>:
  return D.7237;

}


Ftm_Pwm_Ip_SwOutputControl (uint8 Instance, uint8 Channel, Ftm_Pwm_Ip_OutputStateType OutputState, boolean ActiveState)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint16 TempPolVal;
  uint16 SwoCtrlBitMask;
  uint16 ChannelMask;
  uint16 SwoCtrlRegVal;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SwoCtrlRegVal = 0;
  ChannelMask = 0;
  SwoCtrlBitMask = 0;
  TempPolVal = 0;
  ChMode = Ftm_Pwm_Ip_GetChannelMode (FtmBase, Channel);
  _2 = (int) Instance;
  _3 = (int) Channel;
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = (int) Instance;
  _6 = (int) Channel;
  Ftm_Pwm_Ip_aDutyCycle[_5][_6] = 0;

  <bb 4> :
  SwoCtrlRegVal = Ftm_Pwm_Ip_GetSoftwareOutputControl (FtmBase);
  if (ChMode == 34)
    goto <bb 8>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode == 98)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (ChMode == 97)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (ChMode == 33)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  ChannelMask = 3;
  goto <bb 10>; [INV]

  <bb 9> :
  ChannelMask = 1;

  <bb 10> :
  _7 = Ftm_Pwm_Ip_GetPolInstance (FtmBase);
  _8 = (long unsigned int) ChannelMask;
  _9 = (int) Channel;
  _10 = _8 << _9;
  _11 = (short unsigned int) _10;
  TempPolVal = _7 & _11;
  TempPolVal = TempPolVal << 8;
  _12 = (long unsigned int) ChannelMask;
  _13 = (unsigned int) Channel;
  _14 = _13 + 8;
  _15 = _12 << _14;
  _16 = (short unsigned int) _15;
  _17 = ~_16;
  SwoCtrlRegVal = SwoCtrlRegVal & _17;
  if (ActiveState != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  if (OutputState == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = (long unsigned int) ChannelMask;
  _19 = (unsigned int) Channel;
  _20 = _19 + 8;
  _21 = _18 << _20;
  SwoCtrlBitMask = (uint16) _21;
  goto <bb 14>; [INV]

  <bb 13> :
  SwoCtrlBitMask = 0;

  <bb 14> :
  _22 = SwoCtrlBitMask ^ TempPolVal;
  SwoCtrlRegVal = SwoCtrlRegVal | _22;
  _23 = (long unsigned int) ChannelMask;
  _24 = (int) Channel;
  _25 = _23 << _24;
  _26 = (short unsigned int) _25;
  SwoCtrlRegVal = SwoCtrlRegVal | _26;
  goto <bb 16>; [INV]

  <bb 15> :
  _27 = (long unsigned int) ChannelMask;
  _28 = (int) Channel;
  _29 = _27 << _28;
  _30 = (short unsigned int) _29;
  _31 = ~_30;
  SwoCtrlRegVal = SwoCtrlRegVal & _31;

  <bb 16> :
  Ftm_Pwm_Ip_SoftwareOutputControl (FtmBase, SwoCtrlRegVal);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 1);
  return;

}


Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty (uint8 Instance, uint8 Channel, uint16 Period, uint16 DutyCycle, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  uint16 TempDutyCycle;

  <bb 2> :
  TempDutyCycle = 0;
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01 ();
  _2 = (int) Instance;
  _3 = (int) Channel;
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = (int) Instance;
  _6 = (int) Channel;
  Ftm_Pwm_Ip_aChannelState[_5][_6] = 1;
  Ftm_Pwm_Ip_SwOutputControl (Instance, Channel, 0, 0);

  <bb 4> :
  _7 = (long unsigned int) Period;
  Ftm_Pwm_Ip_UpdatePwmPeriod (Instance, _7, 0);
  _8 = (int) Instance;
  Ftm_Pwm_Ip_aPeriod[_8] = Period;
  if (Period == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  TempDutyCycle = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  TempDutyCycle = DutyCycle;

  <bb 7> :
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (Instance, Channel, TempDutyCycle, SoftwareTrigger);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, SoftwareTrigger);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01 ();
  return;

}


Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (uint8 Instance, uint8 Channel, uint16 DutyCycle, boolean SoftwareTrigger)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint8 PairId;
  uint16 FirstEdge;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  FirstEdge = DutyCycle;
  PairId = Channel >> 1;
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00 ();
  _2 = (int) Instance;
  _3 = (int) Channel;
  Ftm_Pwm_Ip_aDutyCycle[_2][_3] = DutyCycle;
  ChMode = Ftm_Pwm_Ip_GetChannelMode (FtmBase, Channel);
  _4 = (int) Instance;
  _5 = (int) Channel;
  _6 = Ftm_Pwm_Ip_aChannelState[_4][_5];
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _7 = (int) Instance;
  _8 = (int) Channel;
  Ftm_Pwm_Ip_aChannelState[_7][_8] = 1;
  Ftm_Pwm_Ip_SwOutputControl (Instance, Channel, 0, 0);

  <bb 4> :
  if (ChMode == 10)
    goto <bb 8>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode == 9)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (ChMode == 18)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (ChMode == 17)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance, Channel, FirstEdge, 0, SoftwareTrigger);
  goto <bb 16>; [INV]

  <bb 9> :
  if (ChMode == 34)
    goto <bb 13>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (ChMode == 98)
    goto <bb 13>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (ChMode == 97)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (ChMode == 33)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 13> :
  _9 = (int) Instance;
  _10 = (int) PairId;
  _11 = Ftm_Pwm_Ip_aPhaseShift[_9][_10];
  if (_11 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance, Channel, 0, FirstEdge, SoftwareTrigger);
  goto <bb 16>; [INV]

  <bb 15> :
  _12 = (int) Instance;
  _13 = (int) PairId;
  _14 = Ftm_Pwm_Ip_aPhaseShift[_12][_13];
  FirstEdge = Ftm_Pwm_Ip_CalculatePhaseShift (Instance, DutyCycle, _14);
  _15 = (int) Instance;
  _16 = (int) PairId;
  _17 = Ftm_Pwm_Ip_aPhaseShift[_15][_16];
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance, Channel, _17, FirstEdge, SoftwareTrigger);

  <bb 16> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00 ();
  return;

}


Ftm_Pwm_Ip_DeInit (uint8 Instance)
{
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId = 0;
  Ftm_Pwm_Ip_Reset (FtmBase);
  ChannelId = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _2 = (int) Instance;
  _3 = (int) ChannelId;
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Ftm_Pwm_Ip_DeInitChannel (Instance, ChannelId);

  <bb 5> :
  ChannelId.33_5 = ChannelId;
  ChannelId = ChannelId.33_5 + 1;

  <bb 6> :
  if (ChannelId <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_DeInitInstance (Instance);
  return;

}


Ftm_Pwm_Ip_Init (uint8 Instance, const struct Ftm_Pwm_Ip_UserCfgType * UserCfg)
{
  uint8 Index;

  <bb 2> :
  Index = 0;
  Ftm_Pwm_Ip_u8FaultCheck = 0;
  _1 = UserCfg->InstanceCfg;
  Ftm_Pwm_Ip_InitInstance (Instance, _1);
  Index = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = UserCfg->ConfiguredChArray;
  _3 = (unsigned int) Index;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = *_5;
  Ftm_Pwm_Ip_InitChannel (Instance, _6);
  Index.31_7 = Index;
  Index = Index.31_7 + 1;

  <bb 4> :
  _8 = UserCfg->NoOfConfiguredCh;
  if (Index < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = UserCfg->NoOfFaultCfg;
  if (_9 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  Index = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _10 = UserCfg->ConfiguredFaultArray;
  _11 = (unsigned int) Index;
  _12 = _11 * 4;
  _13 = _10 + _12;
  _14 = *_13;
  Ftm_Pwm_Ip_InitChFault (Instance, _14);
  Index.32_15 = Index;
  Index = Index.32_15 + 1;

  <bb 8> :
  _16 = UserCfg->NoOfFaultCfg;
  if (Index < _16)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _17 = UserCfg->InstanceCfg;
  Ftm_Pwm_Ip_InitInstanceStart (Instance, _17);
  return;

}


Ftm_Pwm_Ip_InitChFault (uint8 Instance, const struct Ftm_Pwm_Ip_FaultChCfgType * FaultChCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = FaultChCfg->FaultId;
  _3 = FaultChCfg->FaultPol;
  Ftm_Pwm_Ip_SetFaultPolarity (FtmBase, _2, _3);
  _4 = FaultChCfg->FaultId;
  _5 = FaultChCfg->FaultFilEn;
  Ftm_Pwm_Ip_SetFaultFilterEn (FtmBase, _4, _5);
  _6 = FaultChCfg->FaultId;
  Ftm_Pwm_Ip_SetFaultInputEn (FtmBase, _6, 1);
  _7 = (int) Instance;
  _8 = FaultChCfg->FaultId;
  _9 = (int) _8;
  _10 = FaultChCfg->FaultCb;
  Ftm_Pwm_Ip_pFaultIrqCallback[_7][_9] = _10;
  return;

}


Ftm_Pwm_Ip_DeInitChannel (uint8 Instance, uint8 Channel)
{
  uint8 PairId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  PairId = Channel >> 1;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance, Channel);
  _2 = (int) Instance;
  _3 = (int) Channel;
  _4 = Ftm_Pwm_Ip_aIdleState[_2][_3];
  Ftm_Pwm_Ip_SwOutputControl (Instance, Channel, _4, 1);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 0);
  Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (FtmBase, 1);
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase, 1);
  Ftm_Pwm_Ip_SetChnOutputMask (FtmBase, Channel, 0);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 1);
  _5 = (int) Instance;
  _6 = (unsigned int) PairId;
  _7 = _6 * 2;
  Ftm_Pwm_Ip_aNotifIrq[_5][_7] = 0;
  _8 = (int) Instance;
  _9 = (unsigned int) PairId;
  _10 = _9 * 2;
  _11 = _10 + 1;
  Ftm_Pwm_Ip_aNotifIrq[_8][_11] = 0;
  return;

}


Ftm_Pwm_Ip_DeInitInstance (uint8 Instance)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_SetClockSource (FtmBase, 0);
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase, 0);
  Ftm_Pwm_Ip_SetDeadtimePrescaler (FtmBase, 1);
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase, 0);
  Ftm_Pwm_Ip_SetBdmMode (FtmBase, 0);
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase, 0);
  Ftm_Pwm_Ip_SetMod (FtmBase, 0);
  Ftm_Pwm_Ip_SetCounter (FtmBase, 0);
  return;

}


Ftm_Pwm_Ip_InitChannel (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId = 0;
  ChannelId = UserChCfg->ChannelId;
  _2 = (int) Instance;
  _3 = (int) ChannelId;
  _4 = UserChCfg->DutyCycle;
  Ftm_Pwm_Ip_aDutyCycle[_2][_3] = _4;
  _5 = (int) Instance;
  _6 = (int) ChannelId;
  _7 = UserChCfg->InitOut;
  Ftm_Pwm_Ip_aIdleState[_5][_6] = _7;
  _8 = (int) Instance;
  _9 = (int) ChannelId;
  _10 = UserChCfg->Polarity;
  Ftm_Pwm_Ip_aPolarity[_8][_9] = _10;
  _11 = UserChCfg->Polarity;
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase, ChannelId, _11);
  _12 = UserChCfg->InitOut;
  Ftm_Pwm_Ip_SetChnOutputInitStateCmd (FtmBase, ChannelId, _12);
  _13 = UserChCfg->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase, ChannelId, _13);
  _14 = UserChCfg->ChannelMode;
  Ftm_Pwm_Ip_SetChnMSBAMode (FtmBase, ChannelId, _14);
  Ftm_Pwm_Ip_ConfigurePairedChannel (Instance, UserChCfg);
  _15 = (int) Instance;
  _16 = (int) ChannelId;
  _17 = Ftm_Pwm_Ip_aDutyCycle[_15][_16];
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (Instance, ChannelId, _17, 1);
  Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl (Instance, UserChCfg);
  _18 = UserChCfg->ChOutputEn;
  if (_18 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_EnablePwmChannelOutputs (FtmBase, ChannelId);

  <bb 4> :
  _19 = (int) Instance;
  _20 = (int) ChannelId;
  Ftm_Pwm_Ip_aChannelState[_19][_20] = 1;
  _21 = UserChCfg->ChIrqEn;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _22 = (int) Instance;
  _23 = (int) ChannelId;
  _24 = UserChCfg->ChannelCb.FunctionCallback;
  Ftm_Pwm_Ip_aChIrqCallbacks[_22][_23].FunctionCallback = _24;
  _25 = (int) Instance;
  _26 = (int) ChannelId;
  _27 = UserChCfg->ChannelCb.CbParam;
  Ftm_Pwm_Ip_aChIrqCallbacks[_25][_26].CbParam = _27;

  <bb 6> :
  return;

}


Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = UserChCfg->ChannelId;
  _3 = UserChCfg->ExtTrigEn;
  Ftm_Pwm_Ip_SetChnTriggerCmd (FtmBase, _2, _3);
  _4 = UserChCfg->ChannelId;
  _5 = UserChCfg->ChMatchLoadEn;
  Ftm_Pwm_Ip_SetPwmLoadChnSelCmd (FtmBase, _4, _5);
  _6 = UserChCfg->ChannelId;
  _7 = UserChCfg->SwControlEn;
  Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd (FtmBase, _6, _7);
  _8 = UserChCfg->ChannelId;
  _9 = UserChCfg->SwControlVal;
  Ftm_Pwm_Ip_SetChnSoftwareCtrlVal (FtmBase, _8, _9);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 1);
  return;

}


Ftm_Pwm_Ip_ConfigurePairedChannel (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  uint8 ChPairId;
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId = 0;
  ChPairId = 0;
  ChannelId = UserChCfg->ChannelId;
  ChPairId = ChannelId >> 1;
  Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (FtmBase, ChPairId, 1);
  Ftm_Pwm_Ip_SetDualChFaultCtr (FtmBase, ChPairId, 1);
  _2 = UserChCfg->ChannelMode;
  if (_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = UserChCfg->ChannelMode;
  if (_3 == 33)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = ChPairId * 2;
  _5 = _4 + 1;
  _6 = UserChCfg->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase, _5, _6);
  Ftm_Pwm_Ip_SetDualChnCombineCmd (FtmBase, ChPairId, 1);
  goto <bb 8>; [INV]

  <bb 5> :
  _7 = UserChCfg->ChannelMode;
  if (_7 == 98)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _8 = UserChCfg->ChannelMode;
  if (_8 == 97)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _9 = ChPairId * 2;
  _10 = _9 + 1;
  _11 = UserChCfg->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase, _10, _11);
  Ftm_Pwm_Ip_SetDualChnCombineCmd (FtmBase, ChPairId, 1);
  Ftm_Pwm_Ip_SetDualChnMCombineCmd (FtmBase, ChPairId, 1);

  <bb 8> :
  _12 = UserChCfg->PairCfg;
  if (_12 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _13 = UserChCfg->PairCfg;
  Ftm_Pwm_Ip_InitPair (Instance, _13);

  <bb 10> :
  return;

}


Ftm_Pwm_Ip_InitInstanceStart (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = UserInstCfg->FaultInFilter;
  Ftm_Pwm_Ip_SetFaultFilterValue (FtmBase, _2);
  _3 = UserInstCfg->FaultOutState;
  Ftm_Pwm_Ip_SetFaultOutputState (FtmBase, _3);
  _4 = UserInstCfg->FaultCtrMode;
  Ftm_Pwm_Ip_SetFaultControlMode (FtmBase, _4);
  _5 = UserInstCfg->FaultIrqEn;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetFaultInterruptEnable (FtmBase, 1);

  <bb 4> :
  Ftm_Pwm_Ip_Enable (FtmBase, 1);
  Ftm_Pwm_Ip_SetPwmSyncMode (FtmBase, 1);
  _6 = UserInstCfg->ClkPs;
  Ftm_Pwm_Ip_SetClockPs (FtmBase, _6);
  _7 = UserInstCfg->ClkSrc;
  Ftm_Pwm_Ip_SetClockSource (FtmBase, _7);
  return;

}


Ftm_Pwm_Ip_InitInstance (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_SimType * SimBase;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  SimBase = 1074036736B;
  Ftm_Pwm_Ip_SetSimOutputBufferEn (SimBase, Instance);
  Ftm_Pwm_Ip_ResetAndFirstConfigure (Instance, UserInstCfg);
  _2 = UserInstCfg->SyncCfg;
  Ftm_Pwm_Ip_UpdateSync (Instance, _2);
  Ftm_Pwm_Ip_SetCounterInitVal (FtmBase, 0);
  _3 = (int) Instance;
  _4 = UserInstCfg->PwmPeriod;
  Ftm_Pwm_Ip_aPeriod[_3] = _4;
  _5 = (int) Instance;
  _6 = UserInstCfg->ClkSrc;
  Ftm_Pwm_Ip_aClockSource[_5] = _6;
  _7 = (int) Instance;
  _8 = UserInstCfg->ClkPs;
  Ftm_Pwm_Ip_aClockPrescaler[_7] = _8;
  _9 = (int) Instance;
  _10 = UserInstCfg->AlternateClkPs;
  Ftm_Pwm_Ip_aAlternateClockPrescaler[_9] = _10;
  _11 = UserInstCfg->OverflowIrqEn;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = (int) Instance;
  _13 = UserInstCfg->OverflowCb.FunctionCallback;
  Ftm_Pwm_Ip_pOverflowIrqCallback[_12].FunctionCallback = _13;
  _14 = (int) Instance;
  _15 = UserInstCfg->OverflowCb.CbParam;
  Ftm_Pwm_Ip_pOverflowIrqCallback[_14].CbParam = _15;

  <bb 4> :
  _16 = UserInstCfg->CntMode;
  if (_16 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _17 = UserInstCfg->PwmPeriod;
  _18 = _17 >> 1;
  Ftm_Pwm_Ip_SetMod (FtmBase, _18);
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = UserInstCfg->PwmPeriod;
  _20 = _19 + 65535;
  Ftm_Pwm_Ip_SetMod (FtmBase, _20);

  <bb 7> :
  _21 = UserInstCfg->InitTriggerEn;
  Ftm_Pwm_Ip_SetInitTriggerCmd (FtmBase, _21);
  _22 = UserInstCfg->InitTrigMode;
  Ftm_Pwm_Ip_SetInitTriggerMode (FtmBase, _22);
  return;

}


Ftm_Pwm_Ip_ResetAndFirstConfigure (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_Reset (FtmBase);
  Ftm_Pwm_Ip_SetClockSource (FtmBase, 0);
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase);
  _2 = UserInstCfg->CntMode;
  _3 = _2 != 0;
  Ftm_Pwm_Ip_SetCpwms (FtmBase, _3);
  Ftm_Pwm_Ip_Enable (FtmBase, 0);
  _4 = UserInstCfg->DebugMode;
  Ftm_Pwm_Ip_SetBdmMode (FtmBase, _4);
  _5 = UserInstCfg->DeadTimeValue;
  _6 = (unsigned char) _5;
  _7 = _6 & 63;
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase, _7);
  _8 = UserInstCfg->DeadTimeValue;
  _9 = _8 >> 6;
  _10 = (unsigned char) _9;
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase, _10);
  _11 = UserInstCfg->DeadTimePs;
  Ftm_Pwm_Ip_SetDeadtimePrescaler (FtmBase, _11);
  return;

}


Ftm_Pwm_Ip_UpdateSync (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  boolean HardwareSync;
  Ftm_Pwm_Ip_StatusType RetStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7057;
  int iftmp.17;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  RetStatus = 0;
  HardwareSync = 0;
  _2 = SyncCfg->HwSync0;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = SyncCfg->HwSync1;
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _4 = SyncCfg->HwSync2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.17 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.17 = 0;

  <bb 7> :
  HardwareSync = (boolean) iftmp.17;
  _5 = SyncCfg->SyncMode;
  if (_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (HardwareSync != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  RetStatus = 1;

  <bb 10> :
  _6 = SyncCfg->CounterSync;
  if (_6 == 2)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  RetStatus = 1;

  <bb 12> :
  if (RetStatus == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Ftm_Pwm_Ip_ConfigureSWandHWSync (Instance, SyncCfg);
  Ftm_Pwm_Ip_SetPwmSyncModeCmd (FtmBase, 1);
  _7 = SyncCfg->HwSync0;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase, 0, _7);
  _8 = SyncCfg->HwSync1;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase, 1, _8);
  _9 = SyncCfg->HwSync2;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase, 2, _9);
  _10 = SyncCfg->HwTriggerAutoClear;
  Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd (FtmBase, _10);
  _11 = SyncCfg->MaxLoadPoint;
  Ftm_Pwm_Ip_SetMaxLoadingCmd (FtmBase, _11);
  _12 = SyncCfg->MinLoadPoint;
  Ftm_Pwm_Ip_SetMinLoadingCmd (FtmBase, _12);
  _13 = SyncCfg->HalfCycleLoadPoint;
  Ftm_Pwm_Ip_SetHalfCycleCmd (FtmBase, _13);
  _14 = SyncCfg->LoadPointFreq;
  Ftm_Pwm_Ip_SetLoadFreq (FtmBase, _14);
  Ftm_Pwm_Ip_ConfigureSyncType (Instance, SyncCfg);

  <bb 14> :
  D.7057 = RetStatus;

  <bb 15> :
<L13>:
  return D.7057;

}


Ftm_Pwm_Ip_ConfigureSyncType (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = SyncCfg->OutMaskSync;
  _3 = _2 != 0;
  Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (FtmBase, _3);
  _4 = SyncCfg->InverterSync;
  _5 = _4 != 0;
  Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd (FtmBase, _5);
  _6 = SyncCfg->OutRegSync;
  _7 = _6 != 0;
  Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd (FtmBase, _7);
  _8 = SyncCfg->InitCounterSync;
  _9 = _8 != 0;
  Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd (FtmBase, _9);
  return;

}


Ftm_Pwm_Ip_ConfigureSWandHWSync (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = SyncCfg->SyncMode;
  switch (_2) <default: <L2> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  _3 = SyncCfg->OutMaskSync;
  _4 = _3 != 0;
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase, _4);
  Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (FtmBase, 0);
  _5 = SyncCfg->InverterSync;
  _6 = _5 != 0;
  Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (FtmBase, _6);
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase, 0);
  _7 = SyncCfg->OutRegSync;
  _8 = _7 != 0;
  Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (FtmBase, _8);
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase, 0);
  _9 = SyncCfg->InitCounterSync;
  _10 = _9 != 0;
  Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (FtmBase, _10);
  Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (FtmBase, 0);
  _11 = SyncCfg->CounterSync;
  _12 = _11 != 0;
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase, _12);
  Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (FtmBase, 0);
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase, 0);
  _13 = SyncCfg->OutMaskSync;
  _14 = _13 != 0;
  Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (FtmBase, _14);
  Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (FtmBase, 0);
  _15 = SyncCfg->InverterSync;
  _16 = _15 != 0;
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase, _16);
  Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (FtmBase, 0);
  _17 = SyncCfg->OutRegSync;
  _18 = _17 != 0;
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase, _18);
  Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (FtmBase, 0);
  _19 = SyncCfg->InitCounterSync;
  _20 = _19 != 0;
  Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (FtmBase, _20);
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase, 0);
  _21 = SyncCfg->CounterSync;
  _22 = _21 != 0;
  Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (FtmBase, _22);
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


Ftm_Pwm_Ip_UpdateNotificationStateCombine (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  <bb 2> :
  switch (EdgeNotif) <default: <L9> [INV], case 1: <L1> [INV], case 2: <L5> [INV], case 3: <L0> [INV]>

  <bb 3> :
<L0>:
  _1 = (int) Instance;
  _2 = (int) Channel;
  _3 = Ftm_Pwm_Ip_aNotifIrq[_1][_2];
  _4 = (int) Instance;
  _5 = (int) Channel;
  _6 = _3 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_4][_5] = _6;
  _7 = (int) Instance;
  _8 = (unsigned int) Channel;
  _9 = _8 + 1;
  _10 = Ftm_Pwm_Ip_aNotifIrq[_7][_9];
  _11 = (int) Instance;
  _12 = (unsigned int) Channel;
  _13 = _12 + 1;
  _14 = _10 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_11][_13] = _14;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  _15 = (int) Instance;
  _16 = (int) Channel;
  _17 = Ftm_Pwm_Ip_aPolarity[_15][_16];
  if (_17 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _18 = (int) Instance;
  _19 = (int) Channel;
  _20 = Ftm_Pwm_Ip_aNotifIrq[_18][_19];
  _21 = (int) Instance;
  _22 = (int) Channel;
  _23 = _20 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_21][_22] = _23;
  goto <bb 7>; [INV]

  <bb 6> :
  _24 = (int) Instance;
  _25 = (unsigned int) Channel;
  _26 = _25 + 1;
  _27 = Ftm_Pwm_Ip_aNotifIrq[_24][_26];
  _28 = (int) Instance;
  _29 = (unsigned int) Channel;
  _30 = _29 + 1;
  _31 = _27 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_28][_30] = _31;

  <bb 7> :
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  _32 = (int) Instance;
  _33 = (int) Channel;
  _34 = Ftm_Pwm_Ip_aPolarity[_32][_33];
  if (_34 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _35 = (int) Instance;
  _36 = (unsigned int) Channel;
  _37 = _36 + 1;
  _38 = Ftm_Pwm_Ip_aNotifIrq[_35][_37];
  _39 = (int) Instance;
  _40 = (unsigned int) Channel;
  _41 = _40 + 1;
  _42 = _38 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_39][_41] = _42;
  goto <bb 11>; [INV]

  <bb 10> :
  _43 = (int) Instance;
  _44 = (int) Channel;
  _45 = Ftm_Pwm_Ip_aNotifIrq[_43][_44];
  _46 = (int) Instance;
  _47 = (int) Channel;
  _48 = _45 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_46][_47] = _48;

  <bb 11> :
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  return;

}


Ftm_Pwm_Ip_UpdateNotificationState (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  <bb 2> :
  switch (EdgeNotif) <default: <L9> [INV], case 1: <L1> [INV], case 2: <L5> [INV], case 3: <L0> [INV]>

  <bb 3> :
<L0>:
  _1 = (int) Instance;
  _2 = (int) Channel;
  _3 = Ftm_Pwm_Ip_aNotifIrq[_1][_2];
  _4 = (int) Instance;
  _5 = (int) Channel;
  _6 = _3 | 3;
  Ftm_Pwm_Ip_aNotifIrq[_4][_5] = _6;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  _7 = (int) Instance;
  _8 = (int) Channel;
  _9 = Ftm_Pwm_Ip_aPolarity[_7][_8];
  if (_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _10 = (int) Instance;
  _11 = (int) Channel;
  _12 = Ftm_Pwm_Ip_aNotifIrq[_10][_11];
  _13 = (int) Instance;
  _14 = (int) Channel;
  _15 = _12 | 2;
  Ftm_Pwm_Ip_aNotifIrq[_13][_14] = _15;
  goto <bb 7>; [INV]

  <bb 6> :
  _16 = (int) Instance;
  _17 = (int) Channel;
  _18 = Ftm_Pwm_Ip_aNotifIrq[_16][_17];
  _19 = (int) Instance;
  _20 = (int) Channel;
  _21 = _18 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_19][_20] = _21;

  <bb 7> :
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  _22 = (int) Instance;
  _23 = (int) Channel;
  _24 = Ftm_Pwm_Ip_aPolarity[_22][_23];
  if (_24 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _25 = (int) Instance;
  _26 = (int) Channel;
  _27 = Ftm_Pwm_Ip_aNotifIrq[_25][_26];
  _28 = (int) Instance;
  _29 = (int) Channel;
  _30 = _27 | 2;
  Ftm_Pwm_Ip_aNotifIrq[_28][_29] = _30;
  goto <bb 11>; [INV]

  <bb 10> :
  _31 = (int) Instance;
  _32 = (int) Channel;
  _33 = Ftm_Pwm_Ip_aNotifIrq[_31][_32];
  _34 = (int) Instance;
  _35 = (int) Channel;
  _36 = _33 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_34][_35] = _36;

  <bb 11> :
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  return;

}


Ftm_Pwm_Ip_DisableCmpIrq (uint8 Instance, uint8 Channel)
{
  uint8 Index;
  Ftm_Pwm_Ip_EdgeInterruptType NotifyState;
  Ftm_Pwm_Ip_OutputStateType OutputValue;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  OutputValue = 0;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase, Channel, 0);
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase, Channel);
  Index = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _2 = (int) Instance;
  _3 = (int) Index;
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  NotifyState = _4 & 10;
  if (NotifyState != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  OutputValue = 1;
  goto <bb 7>; [INV]

  <bb 5> :
  Index.1_5 = Index;
  Index = Index.1_5 + 1;

  <bb 6> :
  if (Index <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (OutputValue == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase, 0);

  <bb 9> :
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase);
  return;

}


Ftm_Pwm_Ip_InitPair (uint8 Instance, const struct Ftm_Pwm_Ip_PairCfgType * UserPairCfg)
{
  uint8 PairChId;
  uint8 MainChId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;

  <bb 2> :
  _1 = (int) Instance;
  FtmBase = Ftm_Pwm_Ip_aFtmBase[_1];
  MainChId = 0;
  PairChId = 0;
  _2 = UserPairCfg->PairId;
  MainChId = _2 * 2;
  PairChId = MainChId + 1;
  _3 = (int) Instance;
  _4 = UserPairCfg->PairId;
  _5 = (int) _4;
  _6 = UserPairCfg->PhaseShiftValue;
  Ftm_Pwm_Ip_aPhaseShift[_3][_5] = _6;
  _7 = UserPairCfg->PairId;
  _8 = UserPairCfg->ComplementaryModeEn;
  Ftm_Pwm_Ip_SetDualChnCompCmd (FtmBase, _7, _8);
  _9 = UserPairCfg->ComplementaryModeEn;
  if (_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  _10 = Ftm_Pwm_Ip_GetChnOutputPolarity (FtmBase, MainChId);
  if (_10 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _11 = UserPairCfg->PairChPolarity;
  if (_11 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase, PairChId, 0);
  goto <bb 10>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase, PairChId, 1);
  goto <bb 10>; [INV]

  <bb 7> :
  _12 = UserPairCfg->PairChPolarity;
  if (_12 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase, PairChId, 1);
  goto <bb 10>; [INV]

  <bb 9> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase, PairChId, 0);

  <bb 10> :
  Ftm_Pwm_Ip_EnablePwmChannelOutputs (FtmBase, PairChId);
  _13 = UserPairCfg->PairId;
  _14 = UserPairCfg->PairSyncEn;
  Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (FtmBase, _13, _14);
  _15 = UserPairCfg->PairId;
  _16 = UserPairCfg->DeadtimeEn;
  Ftm_Pwm_Ip_SetDualChnDeadtimeCmd (FtmBase, _15, _16);
  _17 = UserPairCfg->PairExtTrigEn;
  Ftm_Pwm_Ip_SetChnTriggerCmd (FtmBase, PairChId, _17);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase, 1);
  return;

}


Ftm_Pwm_Ip_CalculatePhaseShift (uint8 Instance, uint16 DutyCycle, uint16 PhaseShift)
{
  uint16 CnVValue;
  uint16 D.6927;

  <bb 2> :
  CnVValue = 0;
  _1 = (int) Instance;
  _2 = Ftm_Pwm_Ip_aPeriod[_1];
  if (DutyCycle == _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = (int) Instance;
  CnVValue = Ftm_Pwm_Ip_aPeriod[_3];
  goto <bb 7>; [INV]

  <bb 4> :
  if (DutyCycle == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CnVValue = PhaseShift;
  goto <bb 7>; [INV]

  <bb 6> :
  _4 = (int) PhaseShift;
  _5 = (int) DutyCycle;
  _6 = _4 + _5;
  _7 = (int) Instance;
  _8 = Ftm_Pwm_Ip_aPeriod[_7];
  _9 = (int) _8;
  _10 = _6 % _9;
  CnVValue = (uint16) _10;

  <bb 7> :
  D.6927 = CnVValue;

  <bb 8> :
<L6>:
  return D.6927;

}


Ftm_Pwm_Ip_SetSimOutputBufferEn (struct Ftm_Pwm_Ip_SimType * const SimBase, uint8 Instance)
{
  <bb 2> :
  _1 = (int) Instance;
  _2 = 65536 << _1;
  _3 = SimBase->MISCTRL0;
  _4 = _2 | _3;
  SimBase->MISCTRL0 = _4;
  return;

}


Ftm_Pwm_Ip_SetFaultFilterEn (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, boolean FaultFilEn)
{
  uint32 FaultFilterEn;
  long unsigned int iftmp.29;

  <bb 2> :
  if (FaultFilEn != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.29 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.29 = 0;

  <bb 5> :
  FaultFilterEn = iftmp.29;
  _1 = FtmBase->FLTCTRL;
  _2 = (int) FaultId;
  _3 = 16 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  _6 = (int) FaultId;
  _7 = FaultFilterEn << _6;
  _8 = _7 << 4;
  _9 = _5 | _8;
  FtmBase->FLTCTRL = _9;
  return;

}


Ftm_Pwm_Ip_SetFaultInputEn (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, boolean FaultEn)
{
  uint32 FaultInEn;
  long unsigned int iftmp.30;

  <bb 2> :
  if (FaultEn != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.30 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.30 = 0;

  <bb 5> :
  FaultInEn = iftmp.30;
  _1 = FtmBase->FLTCTRL;
  _2 = (int) FaultId;
  _3 = 1 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  _6 = (int) FaultId;
  _7 = FaultInEn << _6;
  _8 = _5 | _7;
  FtmBase->FLTCTRL = _8;
  return;

}


Ftm_Pwm_Ip_SetFaultPolarity (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, Ftm_Pwm_Ip_PolarityType FaultPol)
{
  uint32 FaultInPol;

  <bb 2> :
  _1 = FaultPol != 0;
  _2 = (int) _1;
  FaultInPol = (uint32) _2;
  _3 = FtmBase->FLTPOL;
  _4 = (int) FaultId;
  _5 = 1 << _4;
  _6 = ~_5;
  _7 = _3 & _6;
  _8 = (int) FaultId;
  _9 = FaultInPol << _8;
  _10 = _7 | _9;
  FtmBase->FLTPOL = _10;
  return;

}


Ftm_Pwm_Ip_SetFaultOutputState (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_FaultOutputStateType FaultState)
{
  long unsigned int iftmp.26;

  <bb 2> :
  _1 = FtmBase->FLTCTRL;
  _2 = _1 & 4294934527;
  if (FaultState != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.26 = 32768;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.26 = 0;

  <bb 5> :
  _3 = iftmp.26 | _2;
  FtmBase->FLTCTRL = _3;
  return;

}


Ftm_Pwm_Ip_SetFaultFilterValue (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultFilterValue)
{
  <bb 2> :
  _1 = FtmBase->FLTCTRL;
  _2 = _1 & 4294963455;
  _3 = (long unsigned int) FaultFilterValue;
  _4 = _3 << 8;
  _5 = _4 & 3840;
  _6 = _2 | _5;
  FtmBase->FLTCTRL = _6;
  return;

}


Ftm_Pwm_Ip_SetFaultInterruptEnable (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.27;

  <bb 2> :
  _1 = FtmBase->MODE;
  _2 = _1 & 4294967167;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.27 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.27 = 0;

  <bb 5> :
  _3 = iftmp.27 | _2;
  FtmBase->MODE = _3;
  return;

}


Ftm_Pwm_Ip_SetDualChFaultCtr (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (long unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 64 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (long unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 64 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetFaultControlMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_FaultControlModeType FaultMode)
{
  <bb 2> :
  switch (FaultMode) <default: <L4> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 3: <L3> [INV]>

  <bb 3> :
<L0>:
  _1 = FtmBase->MODE;
  _2 = _1 & 4294967199;
  FtmBase->MODE = _2;
  goto <bb 8>; [INV]

  <bb 4> :
<L1>:
  _3 = FtmBase->MODE;
  _4 = _3 & 4294967199;
  _5 = _4 | 32;
  FtmBase->MODE = _5;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  _6 = FtmBase->MODE;
  _7 = _6 & 4294967199;
  _8 = _7 | 64;
  FtmBase->MODE = _8;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  _9 = FtmBase->MODE;
  _10 = _9 | 96;
  FtmBase->MODE = _10;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Ftm_Pwm_Ip_SetChnTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  uint32 Value;

  <bb 2> :
  Value = 0;
  if (Channel <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) Channel;
  Value = 16 << _1;
  goto <bb 7>; [INV]

  <bb 4> :
  if (Channel <= 5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = (long unsigned int) Channel;
  _3 = _2 + 4294967294;
  Value = 1 << _3;
  goto <bb 7>; [INV]

  <bb 6> :
  _4 = (long unsigned int) Channel;
  _5 = _4 + 4294967290;
  Value = 256 << _5;

  <bb 7> :
  if (Enable != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 = FtmBase->EXTTRIG;
  _7 = Value | _6;
  FtmBase->EXTTRIG = _7;
  goto <bb 10>; [INV]

  <bb 9> :
  _8 = FtmBase->EXTTRIG;
  _9 = ~Value;
  _10 = _8 & _9;
  FtmBase->EXTTRIG = _10;

  <bb 10> :
  return;

}


Ftm_Pwm_Ip_Reset (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint8 ChnIndex;

  <bb 2> :
  Ftm_Pwm_Ip_UpdateWriteProtection (FtmBase, 0);
  _1 = FtmBase->SC;
  FtmBase->SC = _1;
  FtmBase->CNT = 0;
  FtmBase->MOD = 0;
  FtmBase->CNTIN = 0;
  _2 = FtmBase->STATUS;
  FtmBase->STATUS = _2;
  FtmBase->MODE = 4;
  FtmBase->SYNC = 0;
  FtmBase->OUTINIT = 0;
  FtmBase->OUTMASK = 0;
  FtmBase->COMBINE = 0;
  FtmBase->DEADTIME = 0;
  _3 = FtmBase->EXTTRIG;
  FtmBase->EXTTRIG = _3;
  FtmBase->POL = 0;
  FtmBase->FMS = 0;
  FtmBase->FILTER = 0;
  FtmBase->QDCTRL = 0;
  FtmBase->CONF = 0;
  FtmBase->SYNCONF = 0;
  FtmBase->INVCTRL = 0;
  FtmBase->SWOCTRL = 0;
  FtmBase->PWMLOAD = 0;
  FtmBase->HCR = 0;
  ChnIndex = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _4 = (int) ChnIndex;
  FtmBase->CONTROLS[_4].CSC = 0;
  _5 = (int) ChnIndex;
  FtmBase->CONTROLS[_5].CV = 0;
  ChnIndex.22_6 = ChnIndex;
  ChnIndex = ChnIndex.22_6 + 1;

  <bb 4> :
  if (ChnIndex <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_UpdateWriteProtection (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->FMS;
  _2 = _1 | 64;
  FtmBase->FMS = _2;
  goto <bb 6>; [INV]

  <bb 4> :
  _3 = FtmBase->FMS;
  _4 = _3 & 64;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _5 = FtmBase->MODE;
  _6 = _5 | 4;
  FtmBase->MODE = _6;

  <bb 6> :
  return;

}


Ftm_Pwm_Ip_GetChannelMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 ChPairId;
  uint8 Mcombine;
  uint8 Combine;
  uint8 RetValue;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  Ftm_Pwm_Ip_ChannelModeType D.7189;
  unsigned char D.7188;
  unsigned char D.7187;
  uint8 iftmp.34;

  <bb 2> :
  ChPairId = Channel >> 1;
  _1 = FtmBase->COMBINE;
  _2 = (long unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 1 << _3;
  _5 = _1 & _4;
  _6 = (long unsigned int) ChPairId;
  _7 = _6 * 8;
  _8 = _5 >> _7;
  Combine = (uint8) _8;
  _9 = FtmBase->COMBINE;
  _10 = (long unsigned int) ChPairId;
  _11 = _10 * 8;
  _12 = 128 << _11;
  _13 = _9 & _12;
  _14 = (long unsigned int) ChPairId;
  _15 = _14 * 8;
  _16 = _13 >> _15;
  Mcombine = (uint8) _16;
  if (Mcombine == 128)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.34 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.34 = 0;

  <bb 5> :
  Mcombine = iftmp.34;
  RetValue = Ftm_Pwm_Ip_GetChnEdgeLevel (FtmBase, Channel);
  _17 = Ftm_Pwm_Ip_GetChnMode (FtmBase, Channel);
  D.7187 = _17 << 2;
  RetValue = D.7187 | RetValue;
  _18 = Ftm_Pwm_Ip_GetCpwms (FtmBase);
  _19 = (unsigned char) _18;
  D.7188 = _19 << 4;
  RetValue = D.7188 | RetValue;
  _20 = Combine << 5;
  RetValue = RetValue | _20;
  _21 = Mcombine << 6;
  RetValue = RetValue | _21;
  _22 = (int) RetValue;
  switch (_22) <default: <L11> [INV], case 9: <L4> [INV], case 10: <L3> [INV], case 17: <L6> [INV], case 18: <L5> [INV], case 33: <L8> [INV], case 34: <L7> [INV], case 97: <L10> [INV], case 98: <L9> [INV]>

  <bb 6> :
<L3>:
  ChMode = 10;
  goto <bb 15>; [INV]

  <bb 7> :
<L4>:
  ChMode = 9;
  goto <bb 15>; [INV]

  <bb 8> :
<L5>:
  ChMode = 18;
  goto <bb 15>; [INV]

  <bb 9> :
<L6>:
  ChMode = 17;
  goto <bb 15>; [INV]

  <bb 10> :
<L7>:
  ChMode = 34;
  goto <bb 15>; [INV]

  <bb 11> :
<L8>:
  ChMode = 33;
  goto <bb 15>; [INV]

  <bb 12> :
<L9>:
  ChMode = 98;
  goto <bb 15>; [INV]

  <bb 13> :
<L10>:
  ChMode = 97;
  goto <bb 15>; [INV]

  <bb 14> :
<L11>:
  ChMode = 255;

  <bb 15> :
  D.7189 = ChMode;

  <bb 16> :
<L13>:
  return D.7189;

}


Ftm_Pwm_Ip_GetPolInstance (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint16 D.7222;

  <bb 2> :
  _1 = FtmBase->POL;
  D.7222 = (uint16) _1;

  <bb 3> :
<L0>:
  return D.7222;

}


Ftm_Pwm_Ip_GetSoftwareOutputControl (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint16 D.7220;

  <bb 2> :
  _1 = FtmBase->SWOCTRL;
  D.7220 = (uint16) _1;

  <bb 3> :
<L0>:
  return D.7220;

}


Ftm_Pwm_Ip_SetHalfCycleCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->PWMLOAD;
  _2 = _1 | 256;
  FtmBase->PWMLOAD = _2;
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = FtmBase->PWMLOAD;
  _4 = _3 & 4294967039;
  FtmBase->PWMLOAD = _4;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetPwmLoadChnSelCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->PWMLOAD;
  _2 = (int) Channel;
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase->PWMLOAD = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = FtmBase->PWMLOAD;
  _6 = (int) Channel;
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase->PWMLOAD = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SoftwareOutputControl (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  <bb 2> :
  _1 = (long unsigned int) Value;
  FtmBase->SWOCTRL = _1;
  return;

}


Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->SWOCTRL;
  _2 = (int) Channel;
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase->SWOCTRL = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = FtmBase->SWOCTRL;
  _6 = (int) Channel;
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase->SWOCTRL = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetChnSoftwareCtrlVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  boolean StatusPol;
  uint8 ChPol;

  <bb 2> :
  _1 = FtmBase->POL;
  _2 = (long unsigned int) Channel;
  _3 = _1 >> _2;
  _4 = (unsigned char) _3;
  ChPol = _4 & 1;
  StatusPol = ChPol != 0;
  if (Enable != StatusPol)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = FtmBase->SWOCTRL;
  _6 = (unsigned int) Channel;
  _7 = _6 + 8;
  _8 = 1 << _7;
  _9 = _5 | _8;
  FtmBase->SWOCTRL = _9;
  goto <bb 5>; [INV]

  <bb 4> :
  _10 = FtmBase->SWOCTRL;
  _11 = (unsigned int) Channel;
  _12 = _11 + 8;
  _13 = 1 << _12;
  _14 = ~_13;
  _15 = _10 & _14;
  FtmBase->SWOCTRL = _15;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.8;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294443007;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.8 = 524288;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8 = 0;

  <bb 5> :
  _3 = iftmp.8 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.5;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294705151;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.5 = 262144;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.5 = 0;

  <bb 5> :
  _3 = iftmp.5 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.10;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294836223;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.10 = 131072;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.10 = 0;

  <bb 5> :
  _3 = iftmp.10 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.12;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294901759;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.12 = 65536;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.12 = 0;

  <bb 5> :
  _3 = iftmp.12 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.7;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294963199;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.7 = 4096;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.7 = 0;

  <bb 5> :
  _3 = iftmp.7 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.6;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294965247;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.6 = 2048;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.6 = 0;

  <bb 5> :
  _3 = iftmp.6 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.4;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294966271;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.4 = 1024;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4 = 0;

  <bb 5> :
  _3 = iftmp.4 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.9;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294966783;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.9 = 512;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.9 = 0;

  <bb 5> :
  _3 = iftmp.9 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.11;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967039;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.11 = 256;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.11 = 0;

  <bb 5> :
  _3 = iftmp.11 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Mode)
{
  long unsigned int iftmp.18;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967167;
  if (Mode != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.18 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.18 = 0;

  <bb 5> :
  _3 = iftmp.18 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.15;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967263;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.15 = 32;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.15 = 0;

  <bb 5> :
  _3 = iftmp.15 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.14;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967279;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.14 = 16;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.14 = 0;

  <bb 5> :
  _3 = iftmp.14 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.16;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967291;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.16 = 4;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16 = 0;

  <bb 5> :
  _3 = iftmp.16 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.19;

  <bb 2> :
  _1 = FtmBase->SYNCONF;
  _2 = _1 & 4294967294;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.19 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.19 = 0;

  <bb 5> :
  _3 = iftmp.19 | _2;
  FtmBase->SYNCONF = _3;
  return;

}


Ftm_Pwm_Ip_SetInitTriggerMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_InitTriggModeType InitTrigMode)
{
  <bb 2> :
  _1 = FtmBase->CONF;
  _2 = _1 & 4294965247;
  _3 = InitTrigMode << 11;
  _4 = _3 & 2048;
  _5 = _2 | _4;
  FtmBase->CONF = _5;
  return;

}


Ftm_Pwm_Ip_SetBdmMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_DebugModeType Val)
{
  <bb 2> :
  _1 = FtmBase->CONF;
  _2 = _1 & 4294967103;
  _3 = Val << 6;
  _4 = _3 & 255;
  _5 = _2 | _4;
  FtmBase->CONF = _5;
  return;

}


Ftm_Pwm_Ip_SetLoadFreq (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Val)
{
  <bb 2> :
  _1 = FtmBase->CONF;
  _2 = _1 & 4294967264;
  _3 = (long unsigned int) Val;
  _4 = _3 & 31;
  _5 = _2 | _4;
  FtmBase->CONF = _5;
  return;

}


Ftm_Pwm_Ip_GetChnOutputPolarity (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  Ftm_Pwm_Ip_PolarityType D.6943;

  <bb 2> :
  _1 = FtmBase->POL;
  _2 = (int) Channel;
  _3 = _1 >> _2;
  _4 = _3 & 1;
  _5 = _4 == 1;
  D.6943 = (Ftm_Pwm_Ip_PolarityType) _5;

  <bb 3> :
<L0>:
  return D.6943;

}


Ftm_Pwm_Ip_SetChnOutputPolarityCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_PolarityType Polarity)
{
  <bb 2> :
  if (Polarity == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->POL;
  _2 = (int) Channel;
  _3 = 1 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  FtmBase->POL = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->POL;
  _7 = (int) Channel;
  _8 = 1 << _7;
  _9 = _6 | _8;
  FtmBase->POL = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_EnableTriggerMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 TriggerMask)
{
  <bb 2> :
  _1 = FtmBase->EXTTRIG;
  _2 = ~TriggerMask;
  _3 = _1 & _2;
  _4 = TriggerMask | _3;
  FtmBase->EXTTRIG = _4;
  return;

}


Ftm_Pwm_Ip_DisableTriggerMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 TriggerMask)
{
  <bb 2> :
  _1 = FtmBase->EXTTRIG;
  _2 = ~TriggerMask;
  _3 = _1 & _2;
  FtmBase->EXTTRIG = _3;
  return;

}


Ftm_Pwm_Ip_SetInitTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.25;

  <bb 2> :
  _1 = FtmBase->EXTTRIG;
  _2 = _1 & 4294967231;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.25 = 64;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.25 = 0;

  <bb 5> :
  _3 = iftmp.25 | _2;
  FtmBase->EXTTRIG = _3;
  return;

}


Ftm_Pwm_Ip_SetExtDeadtimeValue (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Value)
{
  <bb 2> :
  _1 = FtmBase->DEADTIME;
  _2 = _1 & 4293984255;
  _3 = (long unsigned int) Value;
  _4 = _3 << 16;
  _5 = _4 & 983040;
  _6 = _2 | _5;
  FtmBase->DEADTIME = _6;
  return;

}


Ftm_Pwm_Ip_SetDeadtimePrescaler (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_DeadtimePrescalerType Divider)
{
  <bb 2> :
  _1 = FtmBase->DEADTIME;
  _2 = _1 & 4294967103;
  _3 = (unsigned char) Divider;
  _4 = (long unsigned int) _3;
  _5 = _4 << 6;
  _6 = _5 & 255;
  _7 = _2 | _6;
  FtmBase->DEADTIME = _7;
  return;

}


Ftm_Pwm_Ip_SetDeadtimeCount (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Count)
{
  <bb 2> :
  _1 = FtmBase->DEADTIME;
  _2 = _1 & 4294967232;
  _3 = (long unsigned int) Count;
  _4 = _3 & 63;
  _5 = _2 | _4;
  FtmBase->DEADTIME = _5;
  return;

}


Ftm_Pwm_Ip_SetDualChnMCombineCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 128 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 128 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 32 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 32 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetDualChnDeadtimeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 16 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 16 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetDualChnCompCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (long unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 2 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (long unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 2 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_GetDualChnCombineCmd (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId)
{
  boolean D.7239;

  <bb 2> :
  _1 = FtmBase->COMBINE;
  _2 = (long unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = _1 >> _3;
  _5 = _4 & 1;
  D.7239 = _5 != 0;

  <bb 3> :
<L0>:
  return D.7239;

}


Ftm_Pwm_Ip_SetDualChnCombineCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->COMBINE;
  _2 = (long unsigned int) ChPairId;
  _3 = _2 * 8;
  _4 = 1 << _3;
  _5 = _1 | _4;
  FtmBase->COMBINE = _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = FtmBase->COMBINE;
  _7 = (long unsigned int) ChPairId;
  _8 = _7 * 8;
  _9 = 1 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase->COMBINE = _11;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_ClearOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  <bb 2> :
  _1 = FtmBase->OUTMASK;
  _2 = ~RegVal;
  _3 = _1 & _2;
  FtmBase->OUTMASK = _3;
  return;

}


Ftm_Pwm_Ip_SetOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  <bb 2> :
  _1 = FtmBase->OUTMASK;
  _2 = ~RegVal;
  _3 = _1 & _2;
  _4 = RegVal | _3;
  FtmBase->OUTMASK = _4;
  return;

}


Ftm_Pwm_Ip_SetChnOutputMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean EnableMask)
{
  <bb 2> :
  if (EnableMask != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->OUTMASK;
  _2 = (int) Channel;
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase->OUTMASK = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = FtmBase->OUTMASK;
  _6 = (int) Channel;
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase->OUTMASK = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetChnOutputInitStateCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_OutputStateType State)
{
  <bb 2> :
  if (State == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->OUTINIT;
  _2 = (int) Channel;
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase->OUTINIT = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = FtmBase->OUTINIT;
  _6 = (int) Channel;
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase->OUTINIT = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetSoftwareTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.0;

  <bb 2> :
  _1 = FtmBase->SYNC;
  _2 = _1 & 4294967167;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.0 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 0;

  <bb 5> :
  _3 = iftmp.0 | _2;
  FtmBase->SYNC = _3;
  return;

}


Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 TriggerNumber, boolean Enable)
{
  <bb 2> :
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = FtmBase->SYNC;
  _2 = (int) TriggerNumber;
  _3 = 16 << _2;
  _4 = _1 | _3;
  FtmBase->SYNC = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = FtmBase->SYNC;
  _6 = (int) TriggerNumber;
  _7 = 16 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase->SYNC = _9;

  <bb 5> :
  return;

}


Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.13;

  <bb 2> :
  _1 = FtmBase->SYNC;
  _2 = _1 & 4294967287;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.13 = 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.13 = 0;

  <bb 5> :
  _3 = iftmp.13 | _2;
  FtmBase->SYNC = _3;
  return;

}


Ftm_Pwm_Ip_SetMaxLoadingCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.20;

  <bb 2> :
  _1 = FtmBase->SYNC;
  _2 = _1 & 4294967293;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.20 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.20 = 0;

  <bb 5> :
  _3 = iftmp.20 | _2;
  FtmBase->SYNC = _3;
  return;

}


Ftm_Pwm_Ip_SetMinLoadingCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.21;

  <bb 2> :
  _1 = FtmBase->SYNC;
  _2 = _1 & 4294967294;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.21 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.21 = 0;

  <bb 5> :
  _3 = iftmp.21 | _2;
  FtmBase->SYNC = _3;
  return;

}


Ftm_Pwm_Ip_SetPwmSyncMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.28;

  <bb 2> :
  _1 = FtmBase->MODE;
  _2 = _1 & 4294967287;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.28 = 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.28 = 0;

  <bb 5> :
  _3 = iftmp.28 | _2;
  FtmBase->MODE = _3;
  return;

}


Ftm_Pwm_Ip_Enable (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.24;

  <bb 2> :
  _1 = FtmBase->MODE;
  _2 = _1 & 4294967294;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.24 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.24 = 0;

  <bb 5> :
  _3 = iftmp.24 | _2;
  FtmBase->MODE = _3;
  return;

}


Ftm_Pwm_Ip_SetCounterInitVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  <bb 2> :
  _1 = FtmBase->CNTIN;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value;
  _4 = _2 | _3;
  FtmBase->CNTIN = _4;
  return;

}


Ftm_Pwm_Ip_SetChnCountVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, uint16 Value)
{
  <bb 2> :
  _1 = (int) Channel;
  _2 = (long unsigned int) Value;
  FtmBase->CONTROLS[_1].CV = _2;
  return;

}


Ftm_Pwm_Ip_GetChOutputValue (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  boolean D.7251;

  <bb 2> :
  _1 = (int) Channel;
  _2 = FtmBase->CONTROLS[_1].CSC;
  _3 = _2 & 1024;
  D.7251 = _3 != 0;

  <bb 3> :
<L0>:
  return D.7251;

}


Ftm_Pwm_Ip_ClearChnEventFlag (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  <bb 2> :
  _1 = (int) Channel;
  _2 = FtmBase->CONTROLS[_1].CSC;
  _3 = (int) Channel;
  _4 = _2 & 4294967167;
  FtmBase->CONTROLS[_3].CSC = _4;
  return;

}


Ftm_Pwm_Ip_UpdateChnInt (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  long unsigned int iftmp.2;

  <bb 2> :
  _1 = (int) Channel;
  _2 = FtmBase->CONTROLS[_1].CSC;
  _3 = _2 & 4294967231;
  if (Enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2 = 64;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2 = 0;

  <bb 5> :
  _4 = (int) Channel;
  _5 = iftmp.2 | _3;
  FtmBase->CONTROLS[_4].CSC = _5;
  return;

}


Ftm_Pwm_Ip_GetChnMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.7195;
  unsigned char D.7194;

  <bb 2> :
  _1 = (int) Channel;
  _2 = FtmBase->CONTROLS[_1].CSC;
  _3 = _2 >> 4;
  _4 = (unsigned char) _3;
  RetValue = _4 & 1;
  _5 = (int) Channel;
  _6 = FtmBase->CONTROLS[_5].CSC;
  _7 = _6 >> 5;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  D.7194 = _9 & 2;
  RetValue = D.7194 | RetValue;
  D.7195 = RetValue;

  <bb 3> :
<L0>:
  return D.7195;

}


Ftm_Pwm_Ip_SetChnMSBAMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_ChannelModeType Selection)
{
  uint32 SelectionB;
  uint32 SelectionA;

  <bb 2> :
  _1 = Selection << 2;
  SelectionA = _1 & 16;
  _2 = Selection << 2;
  SelectionB = _2 & 32;
  _3 = (int) Channel;
  _4 = FtmBase->CONTROLS[_3].CSC;
  _5 = _4 & 4294967279;
  _6 = (int) Channel;
  _7 = SelectionA | _5;
  FtmBase->CONTROLS[_6].CSC = _7;
  _8 = (int) Channel;
  _9 = FtmBase->CONTROLS[_8].CSC;
  _10 = _9 & 4294967263;
  _11 = (int) Channel;
  _12 = SelectionB | _10;
  FtmBase->CONTROLS[_11].CSC = _12;
  return;

}


Ftm_Pwm_Ip_SetChnEdgeLevel (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_ChannelModeType Level)
{
  uint32 LevelB;
  uint32 LevelA;

  <bb 2> :
  _1 = Level << 2;
  LevelA = _1 & 4;
  _2 = Level << 2;
  LevelB = _2 & 8;
  _3 = (int) Channel;
  _4 = FtmBase->CONTROLS[_3].CSC;
  _5 = _4 & 4294967291;
  _6 = (int) Channel;
  _7 = LevelA | _5;
  FtmBase->CONTROLS[_6].CSC = _7;
  _8 = (int) Channel;
  _9 = FtmBase->CONTROLS[_8].CSC;
  _10 = _9 & 4294967287;
  _11 = (int) Channel;
  _12 = LevelB | _10;
  FtmBase->CONTROLS[_11].CSC = _12;
  return;

}


Ftm_Pwm_Ip_GetChnEdgeLevel (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.7192;
  unsigned char D.7191;

  <bb 2> :
  _1 = (int) Channel;
  _2 = FtmBase->CONTROLS[_1].CSC;
  _3 = _2 >> 2;
  _4 = (unsigned char) _3;
  RetValue = _4 & 1;
  _5 = (int) Channel;
  _6 = FtmBase->CONTROLS[_5].CSC;
  _7 = _6 >> 3;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  D.7191 = _9 & 2;
  RetValue = D.7191 | RetValue;
  D.7192 = RetValue;

  <bb 3> :
<L0>:
  return D.7192;

}


Ftm_Pwm_Ip_SetMod (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  <bb 2> :
  _1 = FtmBase->MOD;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value;
  _4 = _2 | _3;
  FtmBase->MOD = _4;
  return;

}


Ftm_Pwm_Ip_SetCounter (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  <bb 2> :
  _1 = FtmBase->CNT;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value;
  _4 = _2 | _3;
  FtmBase->CNT = _4;
  return;

}


Ftm_Pwm_Ip_EnablePwmChannelOutputs (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  <bb 2> :
  _1 = (unsigned int) Channel;
  _2 = _1 + 16;
  _3 = 1 << _2;
  _4 = FtmBase->SC;
  _5 = _3 | _4;
  FtmBase->SC = _5;
  return;

}


Ftm_Pwm_Ip_ClearTimerOverflow (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 4294966783;
  FtmBase->SC = _2;
  return;

}


Ftm_Pwm_Ip_SetTimerOverflowInt (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean State)
{
  long unsigned int iftmp.3;

  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 4294967039;
  if (State != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.3 = 256;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.3 = 0;

  <bb 5> :
  _3 = iftmp.3 | _2;
  FtmBase->SC = _3;
  return;

}


Ftm_Pwm_Ip_GetCpwms (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  Ftm_Pwm_Ip_CounterModeType D.7197;

  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 32;
  _3 = _2 != 0;
  D.7197 = (Ftm_Pwm_Ip_CounterModeType) _3;

  <bb 3> :
<L0>:
  return D.7197;

}


Ftm_Pwm_Ip_SetCpwms (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Mode)
{
  long unsigned int iftmp.23;

  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 4294967263;
  if (Mode != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.23 = 32;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.23 = 0;

  <bb 5> :
  _3 = iftmp.23 | _2;
  FtmBase->SC = _3;
  return;

}


Ftm_Pwm_Ip_SetClockSource (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_ClkSourceType ClockSrc)
{
  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 4294967271;
  _3 = ClockSrc << 3;
  _4 = _3 & 24;
  _5 = _2 | _4;
  FtmBase->SC = _5;
  return;

}


Ftm_Pwm_Ip_SetClockPs (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_ClkPrescalerType Prescaler)
{
  <bb 2> :
  _1 = FtmBase->SC;
  _2 = _1 & 4294967288;
  _3 = Prescaler & 7;
  _4 = _2 | _3;
  FtmBase->SC = _4;
  return;

}


