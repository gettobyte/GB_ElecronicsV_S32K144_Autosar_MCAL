Symbol table:

Clock_Ip_GetClockFrequency/11 (Clock_Ip_GetClockFrequency) @0570e380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Ftm_Pwm_Ip_BOARD_InitPeripherals_UserCfg0/10 (Ftm_Pwm_Ip_BOARD_InitPeripherals_UserCfg0) @05709ab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: main/4 (addr)
  Availability: not_available
  Varpool flags: read-only
Ftm_Pwm_Ip_Init/9 (Ftm_Pwm_Ip_Init) @0570e2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Port_Init/8 (Port_Init) @0570e1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Clock_Ip_aClockConfig/7 (Clock_Ip_aClockConfig) @05709990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: main/4 (addr)main/4 (addr)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_Init/6 (Clock_Ip_Init) @0570e0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 main/4 
  Calls: 
DelayTimer.6363/5 (DelayTimer) @05709558
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: TestDelay/2 (read)TestDelay/2 (write)TestDelay/2 (read)TestDelay/2 (write)
  Availability: available
  Varpool flags: initialized
main/4 (main) @05708c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_aClockConfig/7 (addr)Clock_Ip_aClockConfig/7 (addr)Ftm_Pwm_Ip_BOARD_InitPeripherals_UserCfg0/10 (addr)FTM_Clk/3 (write)exit_code/1 (read)exit_code/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_GetClockFrequency/11 Ftm_Pwm_Ip_Init/9 Port_Init/8 Clock_Ip_Init/6 Clock_Ip_Init/6 
FTM_Clk/3 (FTM_Clk) @05709048
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: main/4 (write)
  Availability: available
  Varpool flags: initialized
TestDelay/2 (TestDelay) @057088c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: DelayTimer.6363/5 (read)DelayTimer.6363/5 (write)DelayTimer.6363/5 (read)DelayTimer.6363/5 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
exit_code/1 (exit_code) @05d6ddc8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: main/4 (read)main/4 (read)
  Availability: available
  Varpool flags: initialized
main ()
{
  Clock_Ip_StatusType clockStatus;
  int D.6383;
  long unsigned int _1;
  int exit_code.2_2;
  int _12;

  <bb 2> :
  clockStatus_7 = Clock_Ip_Init (&Clock_Ip_aClockConfig[0]);
  goto <bb 4>; [INV]

  <bb 3> :
  clockStatus_14 = Clock_Ip_Init (&Clock_Ip_aClockConfig[0]);

  <bb 4> :
  # clockStatus_3 = PHI <clockStatus_7(2), clockStatus_14(3)>
  if (clockStatus_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Port_Init (0B);
  Ftm_Pwm_Ip_Init (0, &Ftm_Pwm_Ip_BOARD_InitPeripherals_UserCfg0);
  _1 = Clock_Ip_GetClockFrequency (63);
  FTM_Clk = _1;

  <bb 6> :
  exit_code.2_2 ={v} exit_code;
  if (exit_code.2_2 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  goto <bb 9>; [INV]

  <bb 8> :
  goto <bb 6>; [INV]

  <bb 9> :
  _12 ={v} exit_code;

  <bb 10> :
<L7>:
  return _12;

}


TestDelay (uint32 delay)
{
  static volatile uint32 DelayTimer = 0;
  long unsigned int DelayTimer.0_1;
  long unsigned int _2;
  long unsigned int DelayTimer.1_3;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  DelayTimer.0_1 ={v} DelayTimer;
  _2 = DelayTimer.0_1 + 1;
  DelayTimer ={v} _2;

  <bb 4> :
  DelayTimer.1_3 ={v} DelayTimer;
  if (delay_6(D) > DelayTimer.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  DelayTimer ={v} 0;
  return;

}


