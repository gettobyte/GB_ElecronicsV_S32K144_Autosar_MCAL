IPA summary for Ftm_Pwm_Ip_SetChannelDeadTime/188 is missing.
IPA summary for Ftm_Pwm_Ip_SyncUpdate/187 is missing.
IPA summary for Ftm_Pwm_Ip_EnableTrigger/186 is missing.
IPA summary for Ftm_Pwm_Ip_DisableTrigger/185 is missing.
IPA summary for Ftm_Pwm_Ip_SetDutyPhaseShift/184 is missing.
IPA summary for Ftm_Pwm_Ip_SetPhaseShift/183 is missing.
IPA summary for Ftm_Pwm_Ip_UnMaskOutputChannels/182 is missing.
IPA summary for Ftm_Pwm_Ip_MaskOutputChannels/181 is missing.
IPA summary for Ftm_Pwm_Ip_FastUpdatePwmDuty/180 is missing.
IPA summary for Ftm_Pwm_Ip_GetChannelState/179 is missing.
IPA summary for Ftm_Pwm_Ip_ResetCounter/178 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockMode/177 is missing.
IPA summary for Ftm_Pwm_Ip_SetPowerState/176 is missing.
IPA summary for Ftm_Pwm_Ip_EnableNotification/175 is missing.
IPA summary for Ftm_Pwm_Ip_SetNormalNotificationCase/174 is missing.
IPA summary for Ftm_Pwm_Ip_DisableNotification/173 is missing.
IPA summary for Ftm_Pwm_Ip_GetOutputState/172 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmPeriod/171 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmChannel/170 is missing.
IPA summary for Ftm_Pwm_Ip_SwOutputControl/169 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 is missing.
IPA summary for Ftm_Pwm_Ip_DeInit/166 is missing.
IPA summary for Ftm_Pwm_Ip_Init/165 is missing.
IPA summary for Ftm_Pwm_Ip_InitChFault/164 is missing.
IPA summary for Ftm_Pwm_Ip_DeInitChannel/163 is missing.
IPA summary for Ftm_Pwm_Ip_DeInitInstance/162 is missing.
IPA summary for Ftm_Pwm_Ip_InitChannel/161 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigurePairedChannel/159 is missing.
IPA summary for Ftm_Pwm_Ip_InitInstanceStart/158 is missing.
IPA summary for Ftm_Pwm_Ip_InitInstance/157 is missing.
IPA summary for Ftm_Pwm_Ip_ResetAndFirstConfigure/156 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateSync/155 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigureSyncType/154 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigureSWandHWSync/153 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateNotificationState/151 is missing.
IPA summary for Ftm_Pwm_Ip_DisableCmpIrq/150 is missing.
IPA summary for Ftm_Pwm_Ip_InitPair/149 is missing.
IPA summary for Ftm_Pwm_Ip_CalculatePhaseShift/148 is missing.
IPA summary for Ftm_Pwm_Ip_SetSimOutputBufferEn/130 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultFilterEn/129 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultInputEn/128 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultPolarity/127 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultOutputState/126 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultFilterValue/125 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultInterruptEnable/115 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChFaultCtr/114 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultControlMode/113 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnTriggerCmd/112 is missing.
IPA summary for Ftm_Pwm_Ip_Reset/111 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateWriteProtection/110 is missing.
IPA summary for Ftm_Pwm_Ip_GetChannelMode/109 is missing.
IPA summary for Ftm_Pwm_Ip_GetPolInstance/106 is missing.
IPA summary for Ftm_Pwm_Ip_GetSoftwareOutputControl/105 is missing.
IPA summary for Ftm_Pwm_Ip_SetHalfCycleCmd/100 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 is missing.
IPA summary for Ftm_Pwm_Ip_SoftwareOutputControl/98 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 is missing.
IPA summary for Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 is missing.
IPA summary for Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 is missing.
IPA summary for Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 is missing.
IPA summary for Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 is missing.
IPA summary for Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 is missing.
IPA summary for Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 is missing.
IPA summary for Ftm_Pwm_Ip_SetInitTriggerMode/76 is missing.
IPA summary for Ftm_Pwm_Ip_SetBdmMode/73 is missing.
IPA summary for Ftm_Pwm_Ip_SetLoadFreq/72 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnOutputPolarity/70 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 is missing.
IPA summary for Ftm_Pwm_Ip_EnableTriggerMask/68 is missing.
IPA summary for Ftm_Pwm_Ip_DisableTriggerMask/67 is missing.
IPA summary for Ftm_Pwm_Ip_SetInitTriggerCmd/64 is missing.
IPA summary for Ftm_Pwm_Ip_SetExtDeadtimeValue/63 is missing.
IPA summary for Ftm_Pwm_Ip_SetDeadtimePrescaler/61 is missing.
IPA summary for Ftm_Pwm_Ip_SetDeadtimeCount/60 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnCompCmd/55 is missing.
IPA summary for Ftm_Pwm_Ip_GetDualChnCombineCmd/54 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnCombineCmd/53 is missing.
IPA summary for Ftm_Pwm_Ip_ClearOutmaskReg/51 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskReg/50 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputMask/49 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 is missing.
IPA summary for Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 is missing.
IPA summary for Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 is missing.
IPA summary for Ftm_Pwm_Ip_SetMaxLoadingCmd/43 is missing.
IPA summary for Ftm_Pwm_Ip_SetMinLoadingCmd/42 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmSyncMode/41 is missing.
IPA summary for Ftm_Pwm_Ip_Enable/38 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterInitVal/34 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnCountVal/32 is missing.
IPA summary for Ftm_Pwm_Ip_GetChOutputValue/31 is missing.
IPA summary for Ftm_Pwm_Ip_ClearChnEventFlag/29 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateChnInt/27 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnMode/26 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnMSBAMode/25 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnEdgeLevel/24 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnEdgeLevel/23 is missing.
IPA summary for Ftm_Pwm_Ip_SetMod/19 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounter/17 is missing.
IPA summary for Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 is missing.
IPA summary for Ftm_Pwm_Ip_ClearTimerOverflow/14 is missing.
IPA summary for Ftm_Pwm_Ip_SetTimerOverflowInt/11 is missing.
IPA summary for Ftm_Pwm_Ip_GetCpwms/6 is missing.
IPA summary for Ftm_Pwm_Ip_SetCpwms/5 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockSource/3 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockPs/1 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :      197 calls, 197.000000 freq, 0 count
function body not available                       :       24 calls, 24.000000 freq, 0 count
IPA summary for Ftm_Pwm_Ip_SetChannelDeadTime/188 is missing.
IPA summary for Ftm_Pwm_Ip_SyncUpdate/187 is missing.
IPA summary for Ftm_Pwm_Ip_EnableTrigger/186 is missing.
IPA summary for Ftm_Pwm_Ip_DisableTrigger/185 is missing.
IPA summary for Ftm_Pwm_Ip_SetDutyPhaseShift/184 is missing.
IPA summary for Ftm_Pwm_Ip_SetPhaseShift/183 is missing.
IPA summary for Ftm_Pwm_Ip_UnMaskOutputChannels/182 is missing.
IPA summary for Ftm_Pwm_Ip_MaskOutputChannels/181 is missing.
IPA summary for Ftm_Pwm_Ip_FastUpdatePwmDuty/180 is missing.
IPA summary for Ftm_Pwm_Ip_GetChannelState/179 is missing.
IPA summary for Ftm_Pwm_Ip_ResetCounter/178 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockMode/177 is missing.
IPA summary for Ftm_Pwm_Ip_SetPowerState/176 is missing.
IPA summary for Ftm_Pwm_Ip_EnableNotification/175 is missing.
IPA summary for Ftm_Pwm_Ip_SetNormalNotificationCase/174 is missing.
IPA summary for Ftm_Pwm_Ip_DisableNotification/173 is missing.
IPA summary for Ftm_Pwm_Ip_GetOutputState/172 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmPeriod/171 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmChannel/170 is missing.
IPA summary for Ftm_Pwm_Ip_SwOutputControl/169 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 is missing.
IPA summary for Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 is missing.
IPA summary for Ftm_Pwm_Ip_DeInit/166 is missing.
IPA summary for Ftm_Pwm_Ip_Init/165 is missing.
IPA summary for Ftm_Pwm_Ip_InitChFault/164 is missing.
IPA summary for Ftm_Pwm_Ip_DeInitChannel/163 is missing.
IPA summary for Ftm_Pwm_Ip_DeInitInstance/162 is missing.
IPA summary for Ftm_Pwm_Ip_InitChannel/161 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigurePairedChannel/159 is missing.
IPA summary for Ftm_Pwm_Ip_InitInstanceStart/158 is missing.
IPA summary for Ftm_Pwm_Ip_InitInstance/157 is missing.
IPA summary for Ftm_Pwm_Ip_ResetAndFirstConfigure/156 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateSync/155 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigureSyncType/154 is missing.
IPA summary for Ftm_Pwm_Ip_ConfigureSWandHWSync/153 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateNotificationState/151 is missing.
IPA summary for Ftm_Pwm_Ip_DisableCmpIrq/150 is missing.
IPA summary for Ftm_Pwm_Ip_InitPair/149 is missing.
IPA summary for Ftm_Pwm_Ip_CalculatePhaseShift/148 is missing.
IPA summary for Ftm_Pwm_Ip_SetSimOutputBufferEn/130 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultFilterEn/129 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultInputEn/128 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultPolarity/127 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultOutputState/126 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultFilterValue/125 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultInterruptEnable/115 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChFaultCtr/114 is missing.
IPA summary for Ftm_Pwm_Ip_SetFaultControlMode/113 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnTriggerCmd/112 is missing.
IPA summary for Ftm_Pwm_Ip_Reset/111 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateWriteProtection/110 is missing.
IPA summary for Ftm_Pwm_Ip_GetChannelMode/109 is missing.
IPA summary for Ftm_Pwm_Ip_GetPolInstance/106 is missing.
IPA summary for Ftm_Pwm_Ip_GetSoftwareOutputControl/105 is missing.
IPA summary for Ftm_Pwm_Ip_SetHalfCycleCmd/100 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 is missing.
IPA summary for Ftm_Pwm_Ip_SoftwareOutputControl/98 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 is missing.
IPA summary for Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 is missing.
IPA summary for Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 is missing.
IPA summary for Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 is missing.
IPA summary for Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 is missing.
IPA summary for Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 is missing.
IPA summary for Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 is missing.
IPA summary for Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 is missing.
IPA summary for Ftm_Pwm_Ip_SetInitTriggerMode/76 is missing.
IPA summary for Ftm_Pwm_Ip_SetBdmMode/73 is missing.
IPA summary for Ftm_Pwm_Ip_SetLoadFreq/72 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnOutputPolarity/70 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 is missing.
IPA summary for Ftm_Pwm_Ip_EnableTriggerMask/68 is missing.
IPA summary for Ftm_Pwm_Ip_DisableTriggerMask/67 is missing.
IPA summary for Ftm_Pwm_Ip_SetInitTriggerCmd/64 is missing.
IPA summary for Ftm_Pwm_Ip_SetExtDeadtimeValue/63 is missing.
IPA summary for Ftm_Pwm_Ip_SetDeadtimePrescaler/61 is missing.
IPA summary for Ftm_Pwm_Ip_SetDeadtimeCount/60 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnCompCmd/55 is missing.
IPA summary for Ftm_Pwm_Ip_GetDualChnCombineCmd/54 is missing.
IPA summary for Ftm_Pwm_Ip_SetDualChnCombineCmd/53 is missing.
IPA summary for Ftm_Pwm_Ip_ClearOutmaskReg/51 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskReg/50 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputMask/49 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 is missing.
IPA summary for Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 is missing.
IPA summary for Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 is missing.
IPA summary for Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 is missing.
IPA summary for Ftm_Pwm_Ip_SetMaxLoadingCmd/43 is missing.
IPA summary for Ftm_Pwm_Ip_SetMinLoadingCmd/42 is missing.
IPA summary for Ftm_Pwm_Ip_SetPwmSyncMode/41 is missing.
IPA summary for Ftm_Pwm_Ip_Enable/38 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounterInitVal/34 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnCountVal/32 is missing.
IPA summary for Ftm_Pwm_Ip_GetChOutputValue/31 is missing.
IPA summary for Ftm_Pwm_Ip_ClearChnEventFlag/29 is missing.
IPA summary for Ftm_Pwm_Ip_UpdateChnInt/27 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnMode/26 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnMSBAMode/25 is missing.
IPA summary for Ftm_Pwm_Ip_SetChnEdgeLevel/24 is missing.
IPA summary for Ftm_Pwm_Ip_GetChnEdgeLevel/23 is missing.
IPA summary for Ftm_Pwm_Ip_SetMod/19 is missing.
IPA summary for Ftm_Pwm_Ip_SetCounter/17 is missing.
IPA summary for Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 is missing.
IPA summary for Ftm_Pwm_Ip_ClearTimerOverflow/14 is missing.
IPA summary for Ftm_Pwm_Ip_SetTimerOverflowInt/11 is missing.
IPA summary for Ftm_Pwm_Ip_GetCpwms/6 is missing.
IPA summary for Ftm_Pwm_Ip_SetCpwms/5 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockSource/3 is missing.
IPA summary for Ftm_Pwm_Ip_SetClockPs/1 is missing.
Symbol table:

SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13/212 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13) @06cbf2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13/211 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13) @06cbf1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12/210 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12) @06cbf000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12/209 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12) @06cb8ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11/208 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11) @06cb8c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11/207 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11) @06cb8b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10/206 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10) @06cb88c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10/205 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10) @06cb87e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09/204 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09) @06cb8540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09/203 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09) @06cb8460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08/202 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08) @06cb81c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08/201 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08) @06cb80e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07/200 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07) @06ca5e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07/199 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07) @06ca5d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05/198 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05) @06ca5700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05/197 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05) @06ca5540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04/196 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04) @06ca52a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableNotification/173 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04/195 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04) @06ca51c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_DisableNotification/173 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03/194 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03) @06c92ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03/193 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03) @06c92e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01/192 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01) @06c92540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01/191 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01) @06c92460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: 
SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00/190 (SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00) @06c80ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00/189 (SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00) @06c80d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
Ftm_Pwm_Ip_SetChannelDeadTime/188 (Ftm_Pwm_Ip_SetChannelDeadTime) @06c022a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13/212 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13/211 
Ftm_Pwm_Ip_SyncUpdate/187 (Ftm_Pwm_Ip_SyncUpdate) @06c02ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12/210 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12/209 
Ftm_Pwm_Ip_EnableTrigger/186 (Ftm_Pwm_Ip_EnableTrigger) @06c02c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11/208 Ftm_Pwm_Ip_EnableTriggerMask/68 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11/207 
Ftm_Pwm_Ip_DisableTrigger/185 (Ftm_Pwm_Ip_DisableTrigger) @06c029a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10/206 Ftm_Pwm_Ip_DisableTriggerMask/67 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10/205 
Ftm_Pwm_Ip_SetDutyPhaseShift/184 (Ftm_Pwm_Ip_SetDutyPhaseShift) @06c02700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPhaseShift/134 (write)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_CalculatePhaseShift/148 
Ftm_Pwm_Ip_SetPhaseShift/183 (Ftm_Pwm_Ip_SetPhaseShift) @06c02460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09/204 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_GetCpwms/6 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09/203 
Ftm_Pwm_Ip_UnMaskOutputChannels/182 (Ftm_Pwm_Ip_UnMaskOutputChannels) @06c021c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08/202 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_ClearOutmaskReg/51 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08/201 
Ftm_Pwm_Ip_MaskOutputChannels/181 (Ftm_Pwm_Ip_MaskOutputChannels) @06bf7e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07/200 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetOutmaskReg/50 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07/199 
Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (Ftm_Pwm_Ip_FastUpdatePwmDuty) @06bf78c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 
Ftm_Pwm_Ip_GetChannelState/179 (Ftm_Pwm_Ip_GetChannelState) @06bf7380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aDutyCycle/133 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Ftm_Pwm_Ip_ResetCounter/178 (Ftm_Pwm_Ip_ResetCounter) @06bf7d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 
Ftm_Pwm_Ip_SetClockMode/177 (Ftm_Pwm_Ip_SetClockMode) @06bf7a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (read)Ftm_Pwm_Ip_aClockPrescaler/144 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetClockPs/1 Ftm_Pwm_Ip_SetClockPs/1 
Ftm_Pwm_Ip_SetPowerState/176 (Ftm_Pwm_Ip_SetPowerState) @06bf77e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aClockSource/143 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_SetClockSource/3 
Ftm_Pwm_Ip_EnableNotification/175 (Ftm_Pwm_Ip_EnableNotification) @06bf7540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05/198 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 Ftm_Pwm_Ip_UpdateNotificationState/151 Ftm_Pwm_Ip_GetChannelMode/109 Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_ClearChnEventFlag/29 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05/197 
Ftm_Pwm_Ip_SetNormalNotificationCase/174 (Ftm_Pwm_Ip_SetNormalNotificationCase) @06bf72a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_ClearChnEventFlag/29 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_UpdateChnInt/27 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_GetChannelMode/109 
Ftm_Pwm_Ip_DisableNotification/173 (Ftm_Pwm_Ip_DisableNotification) @06bf7000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04/196 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_DisableCmpIrq/150 Ftm_Pwm_Ip_GetChannelMode/109 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04/195 
Ftm_Pwm_Ip_GetOutputState/172 (Ftm_Pwm_Ip_GetOutputState) @06be8b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03/194 Ftm_Pwm_Ip_GetChOutputValue/31 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03/193 
Ftm_Pwm_Ip_UpdatePwmPeriod/171 (Ftm_Pwm_Ip_UpdatePwmPeriod) @06be8620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_GetCpwms/6 
Ftm_Pwm_Ip_UpdatePwmChannel/170 (Ftm_Pwm_Ip_UpdatePwmChannel) @06be80e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_SetDutyPhaseShift/184 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_GetCpwms/6 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_SetChnCountVal/32 Ftm_Pwm_Ip_GetDualChnCombineCmd/54 
Ftm_Pwm_Ip_SwOutputControl/169 (Ftm_Pwm_Ip_SwOutputControl) @06be8d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SoftwareOutputControl/98 Ftm_Pwm_Ip_GetPolInstance/106 Ftm_Pwm_Ip_GetSoftwareOutputControl/105 Ftm_Pwm_Ip_GetChannelMode/109 
Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty) @06be8a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aPeriod/132 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01/192 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_SwOutputControl/169 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01/191 
Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel) @06be87e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)Ftm_Pwm_Ip_aChannelState/138 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aPhaseShift/134 (read)Ftm_Pwm_Ip_aPhaseShift/134 (read)Ftm_Pwm_Ip_aPhaseShift/134 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_InitChannel/161 
  Calls: SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00/190 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_CalculatePhaseShift/148 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_GetChannelMode/109 SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00/189 
Ftm_Pwm_Ip_DeInit/166 (Ftm_Pwm_Ip_DeInit) @06be8540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aChannelState/138 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_Reset/111 
Ftm_Pwm_Ip_Init/165 (Ftm_Pwm_Ip_Init) @06be82a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_u8FaultCheck/131 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_InitChFault/164 Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitInstance/157 
Ftm_Pwm_Ip_InitChFault/164 (Ftm_Pwm_Ip_InitChFault) @06be8000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_pFaultIrqCallback/135 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetFaultInputEn/128 Ftm_Pwm_Ip_SetFaultFilterEn/129 Ftm_Pwm_Ip_SetFaultPolarity/127 
Ftm_Pwm_Ip_DeInitChannel/163 (Ftm_Pwm_Ip_DeInitChannel) @06bdfd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aIdleState/141 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_DeInit/166 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnOutputMask/49 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_DisableCmpIrq/150 
Ftm_Pwm_Ip_DeInitInstance/162 (Ftm_Pwm_Ip_DeInitInstance) @06bdfa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_DeInit/166 
  Calls: Ftm_Pwm_Ip_SetCounter/17 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_SetBdmMode/73 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetDeadtimePrescaler/61 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetClockSource/3 
Ftm_Pwm_Ip_InitChannel/161 (Ftm_Pwm_Ip_InitChannel) @06bdf7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aDutyCycle/133 (write)Ftm_Pwm_Ip_aIdleState/141 (write)Ftm_Pwm_Ip_aPolarity/142 (write)Ftm_Pwm_Ip_aDutyCycle/133 (read)Ftm_Pwm_Ip_aChannelState/138 (write)Ftm_Pwm_Ip_aChIrqCallbacks/136 (write)Ftm_Pwm_Ip_aChIrqCallbacks/136 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_SetChnMSBAMode/25 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 
Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 (Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl) @06bdf540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 Ftm_Pwm_Ip_SetChnTriggerCmd/112 
Ftm_Pwm_Ip_ConfigurePairedChannel/159 (Ftm_Pwm_Ip_ConfigurePairedChannel) @06bdf2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 Ftm_Pwm_Ip_SetDualChnCombineCmd/53 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetDualChnCombineCmd/53 Ftm_Pwm_Ip_SetChnEdgeLevel/24 Ftm_Pwm_Ip_SetDualChFaultCtr/114 Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 
Ftm_Pwm_Ip_InitInstanceStart/158 (Ftm_Pwm_Ip_InitInstanceStart) @06bdf000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_SetClockPs/1 Ftm_Pwm_Ip_SetPwmSyncMode/41 Ftm_Pwm_Ip_Enable/38 Ftm_Pwm_Ip_SetFaultInterruptEnable/115 Ftm_Pwm_Ip_SetFaultControlMode/113 Ftm_Pwm_Ip_SetFaultOutputState/126 Ftm_Pwm_Ip_SetFaultFilterValue/125 
Ftm_Pwm_Ip_InitInstance/157 (Ftm_Pwm_Ip_InitInstance) @068e3540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPeriod/132 (write)Ftm_Pwm_Ip_aClockSource/143 (write)Ftm_Pwm_Ip_aClockPrescaler/144 (write)Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (write)Ftm_Pwm_Ip_pOverflowIrqCallback/137 (write)Ftm_Pwm_Ip_pOverflowIrqCallback/137 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_Init/165 
  Calls: Ftm_Pwm_Ip_SetInitTriggerMode/76 Ftm_Pwm_Ip_SetInitTriggerCmd/64 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetMod/19 Ftm_Pwm_Ip_SetCounterInitVal/34 Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 Ftm_Pwm_Ip_SetSimOutputBufferEn/130 
Ftm_Pwm_Ip_ResetAndFirstConfigure/156 (Ftm_Pwm_Ip_ResetAndFirstConfigure) @068e3ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: Ftm_Pwm_Ip_SetDeadtimePrescaler/61 Ftm_Pwm_Ip_SetExtDeadtimeValue/63 Ftm_Pwm_Ip_SetDeadtimeCount/60 Ftm_Pwm_Ip_SetBdmMode/73 Ftm_Pwm_Ip_Enable/38 Ftm_Pwm_Ip_SetCpwms/5 Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_SetClockSource/3 Ftm_Pwm_Ip_Reset/111 
Ftm_Pwm_Ip_UpdateSync/155 (Ftm_Pwm_Ip_UpdateSync) @068e3c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: Ftm_Pwm_Ip_ConfigureSyncType/154 Ftm_Pwm_Ip_SetLoadFreq/72 Ftm_Pwm_Ip_SetHalfCycleCmd/100 Ftm_Pwm_Ip_SetMinLoadingCmd/42 Ftm_Pwm_Ip_SetMaxLoadingCmd/43 Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
Ftm_Pwm_Ip_ConfigureSyncType/154 (Ftm_Pwm_Ip_ConfigureSyncType) @068e39a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 
Ftm_Pwm_Ip_ConfigureSWandHWSync/153 (Ftm_Pwm_Ip_ConfigureSWandHWSync) @068e3700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 
Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (Ftm_Pwm_Ip_UpdateNotificationStateCombine) @068e3460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
Ftm_Pwm_Ip_UpdateNotificationState/151 (Ftm_Pwm_Ip_UpdateNotificationState) @068e31c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aPolarity/142 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)Ftm_Pwm_Ip_aNotifIrq/140 (read)Ftm_Pwm_Ip_aNotifIrq/140 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 
  Calls: 
Ftm_Pwm_Ip_DisableCmpIrq/150 (Ftm_Pwm_Ip_DisableCmpIrq) @068d9d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aNotifIrq/140 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: Ftm_Pwm_Ip_ClearTimerOverflow/14 Ftm_Pwm_Ip_SetTimerOverflowInt/11 Ftm_Pwm_Ip_ClearChnEventFlag/29 Ftm_Pwm_Ip_UpdateChnInt/27 
Ftm_Pwm_Ip_InitPair/149 (Ftm_Pwm_Ip_InitPair) @068d9ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aFtmBase/146 (read)Ftm_Pwm_Ip_aPhaseShift/134 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 Ftm_Pwm_Ip_SetChnTriggerCmd/112 Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 Ftm_Pwm_Ip_GetChnOutputPolarity/70 Ftm_Pwm_Ip_SetDualChnCompCmd/55 
Ftm_Pwm_Ip_CalculatePhaseShift/148 (Ftm_Pwm_Ip_CalculatePhaseShift) @068d9c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aPeriod/132 (read)Ftm_Pwm_Ip_aPeriod/132 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Ftm_Pwm_Ip_SetDutyPhaseShift/184 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 
  Calls: 
Ftm_Pwm_Ip_aSimBase/147 (Ftm_Pwm_Ip_aSimBase) @06a458b8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Ftm_Pwm_Ip_aFtmBase/146 (Ftm_Pwm_Ip_aFtmBase) @06a45828
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_EnableTrigger/186 (read)Ftm_Pwm_Ip_SyncUpdate/187 (read)Ftm_Pwm_Ip_InitPair/149 (read)Ftm_Pwm_Ip_DisableCmpIrq/150 (read)Ftm_Pwm_Ip_ConfigureSWandHWSync/153 (read)Ftm_Pwm_Ip_ConfigureSyncType/154 (read)Ftm_Pwm_Ip_UpdateSync/155 (read)Ftm_Pwm_Ip_ResetAndFirstConfigure/156 (read)Ftm_Pwm_Ip_InitInstance/157 (read)Ftm_Pwm_Ip_InitInstanceStart/158 (read)Ftm_Pwm_Ip_UpdatePwmChannel/170 (read)Ftm_Pwm_Ip_ConfigurePairedChannel/159 (read)Ftm_Pwm_Ip_InitChFault/164 (read)Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 (read)Ftm_Pwm_Ip_SwOutputControl/169 (read)Ftm_Pwm_Ip_DeInit/166 (read)Ftm_Pwm_Ip_InitChannel/161 (read)Ftm_Pwm_Ip_DeInitInstance/162 (read)Ftm_Pwm_Ip_DeInitChannel/163 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmPeriod/171 (read)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (read)Ftm_Pwm_Ip_GetOutputState/172 (read)Ftm_Pwm_Ip_DisableNotification/173 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_SetPowerState/176 (read)Ftm_Pwm_Ip_SetClockMode/177 (read)Ftm_Pwm_Ip_ResetCounter/178 (read)Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (read)Ftm_Pwm_Ip_MaskOutputChannels/181 (read)Ftm_Pwm_Ip_UnMaskOutputChannels/182 (read)Ftm_Pwm_Ip_SetPhaseShift/183 (read)Ftm_Pwm_Ip_DisableTrigger/185 (read)Ftm_Pwm_Ip_SetChannelDeadTime/188 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Ftm_Pwm_Ip_aAlternateClockPrescaler/145 (Ftm_Pwm_Ip_aAlternateClockPrescaler) @06a45798
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetClockMode/177 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aClockPrescaler/144 (Ftm_Pwm_Ip_aClockPrescaler) @06a45708
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetClockMode/177 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aClockSource/143 (Ftm_Pwm_Ip_aClockSource) @06a45678
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_SetPowerState/176 (read)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPolarity/142 (Ftm_Pwm_Ip_aPolarity) @06a455e8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_InitChannel/161 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aIdleState/141 (Ftm_Pwm_Ip_aIdleState) @06a45558
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_DeInitChannel/163 (read)Ftm_Pwm_Ip_InitChannel/161 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aNotifIrq/140 (Ftm_Pwm_Ip_aNotifIrq) @06a454c8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_DeInitChannel/163 (write)Ftm_Pwm_Ip_DeInitChannel/163 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_DisableNotification/173 (write)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (write)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_SetNormalNotificationCase/174 (read)Ftm_Pwm_Ip_DisableCmpIrq/150 (read)Ftm_Pwm_Ip_UpdateNotificationState/151 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (read)Ftm_Pwm_Ip_UpdateNotificationStateCombine/152 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPreviousChannelState/139 (Ftm_Pwm_Ip_aPreviousChannelState) @06a45438
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aChannelState/138 (Ftm_Pwm_Ip_aChannelState) @06a453a8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_DeInit/166 (read)Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (write)Ftm_Pwm_Ip_SwOutputControl/169 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (read)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_pOverflowIrqCallback/137 (Ftm_Pwm_Ip_pOverflowIrqCallback) @06a45318
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_InitInstance/157 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aChIrqCallbacks/136 (Ftm_Pwm_Ip_aChIrqCallbacks) @06a45288
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_InitChannel/161 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_pFaultIrqCallback/135 (Ftm_Pwm_Ip_pFaultIrqCallback) @06a451f8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitChFault/164 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPhaseShift/134 (Ftm_Pwm_Ip_aPhaseShift) @06a45168
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_InitPair/149 (write)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (read)Ftm_Pwm_Ip_SetDutyPhaseShift/184 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aDutyCycle/133 (Ftm_Pwm_Ip_aDutyCycle) @06a450d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Ftm_Pwm_Ip_GetChannelState/179 (read)Ftm_Pwm_Ip_SwOutputControl/169 (write)Ftm_Pwm_Ip_SetPhaseShift/183 (write)Ftm_Pwm_Ip_FastUpdatePwmDuty/180 (write)Ftm_Pwm_Ip_InitChannel/161 (write)Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 (write)Ftm_Pwm_Ip_InitChannel/161 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_SetDutyPhaseShift/184 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPeriod/132 (Ftm_Pwm_Ip_aPeriod) @06a45048
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_InitInstance/157 (write)Ftm_Pwm_Ip_UpdatePwmPeriod/171 (write)Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 (write)Ftm_Pwm_Ip_EnableNotification/175 (read)Ftm_Pwm_Ip_UpdatePwmChannel/170 (read)Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_CalculatePhaseShift/148 (read)Ftm_Pwm_Ip_SetPhaseShift/183 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_u8FaultCheck/131 (Ftm_Pwm_Ip_u8FaultCheck) @068d4f78
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Ftm_Pwm_Ip_Init/165 (write)
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_SetSimOutputBufferEn/130 (Ftm_Pwm_Ip_SetSimOutputBufferEn) @069cc000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetFaultFilterEn/129 (Ftm_Pwm_Ip_SetFaultFilterEn) @069c7d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultInputEn/128 (Ftm_Pwm_Ip_SetFaultInputEn) @069c7a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultPolarity/127 (Ftm_Pwm_Ip_SetFaultPolarity) @069c77e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChFault/164 
  Calls: 
Ftm_Pwm_Ip_SetFaultOutputState/126 (Ftm_Pwm_Ip_SetFaultOutputState) @069c7540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetFaultFilterValue/125 (Ftm_Pwm_Ip_SetFaultFilterValue) @069c72a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetFaultInterruptEnable/115 (Ftm_Pwm_Ip_SetFaultInterruptEnable) @069c0620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetDualChFaultCtr/114 (Ftm_Pwm_Ip_SetDualChFaultCtr) @069c0380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_SetFaultControlMode/113 (Ftm_Pwm_Ip_SetFaultControlMode) @069c00e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_SetChnTriggerCmd/112 (Ftm_Pwm_Ip_SetChnTriggerCmd) @069b9a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_Reset/111 (Ftm_Pwm_Ip_Reset) @069b97e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInit/166 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: Ftm_Pwm_Ip_UpdateWriteProtection/110 
Ftm_Pwm_Ip_UpdateWriteProtection/110 (Ftm_Pwm_Ip_UpdateWriteProtection) @069b92a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_Reset/111 
  Calls: 
Ftm_Pwm_Ip_GetChannelMode/109 (Ftm_Pwm_Ip_GetChannelMode) @069aee00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableNotification/173 Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/167 Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: Ftm_Pwm_Ip_GetCpwms/6 Ftm_Pwm_Ip_GetChnMode/26 Ftm_Pwm_Ip_GetChnEdgeLevel/23 
Ftm_Pwm_Ip_GetPolInstance/106 (Ftm_Pwm_Ip_GetPolInstance) @069ae620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_GetSoftwareOutputControl/105 (Ftm_Pwm_Ip_GetSoftwareOutputControl) @069ae380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_SetHalfCycleCmd/100 (Ftm_Pwm_Ip_SetHalfCycleCmd) @069ab620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetPwmLoadChnSelCmd/99 (Ftm_Pwm_Ip_SetPwmLoadChnSelCmd) @069ab380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SoftwareOutputControl/98 (Ftm_Pwm_Ip_SoftwareOutputControl) @069ab0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SwOutputControl/169 
  Calls: 
Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd/97 (Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd) @069a8e00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SetChnSoftwareCtrlVal/95 (Ftm_Pwm_Ip_SetChnSoftwareCtrlVal) @069a88c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd/90 (Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd) @069a3b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd/89 (Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd) @069a38c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd/88 (Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd) @069a3620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd/87 (Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd) @069a3380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd/86 (Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd) @069a30e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd/85 (Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd) @0699ee00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd/84 (Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd) @0699eb60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd/83 (Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd) @0699e8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd/82 (Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd) @0699e620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ResetCounter/178 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 Ftm_Pwm_Ip_ConfigureSWandHWSync/153 
  Calls: 
Ftm_Pwm_Ip_SetPwmSyncModeCmd/81 (Ftm_Pwm_Ip_SetPwmSyncModeCmd) @0699e380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd/80 (Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd) @0699e0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd/79 (Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd) @0699ae00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd/78 (Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd) @0699ab60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd/77 (Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd) @0699a8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetInitTriggerMode/76 (Ftm_Pwm_Ip_SetInitTriggerMode) @0699a620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetBdmMode/73 (Ftm_Pwm_Ip_SetBdmMode) @06995d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetLoadFreq/72 (Ftm_Pwm_Ip_SetLoadFreq) @069959a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_GetChnOutputPolarity/70 (Ftm_Pwm_Ip_GetChnOutputPolarity) @06995380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputPolarityCmd/69 (Ftm_Pwm_Ip_SetChnOutputPolarityCmd) @069950e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_EnableTriggerMask/68 (Ftm_Pwm_Ip_EnableTriggerMask) @06992e00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableTrigger/186 
  Calls: 
Ftm_Pwm_Ip_DisableTriggerMask/67 (Ftm_Pwm_Ip_DisableTriggerMask) @06992b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DisableTrigger/185 
  Calls: 
Ftm_Pwm_Ip_SetInitTriggerCmd/64 (Ftm_Pwm_Ip_SetInitTriggerCmd) @069922a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetExtDeadtimeValue/63 (Ftm_Pwm_Ip_SetExtDeadtimeValue) @06992000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDeadtimePrescaler/61 (Ftm_Pwm_Ip_SetDeadtimePrescaler) @0698e9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDeadtimeCount/60 (Ftm_Pwm_Ip_SetDeadtimeCount) @0698e620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_SetChannelDeadTime/188 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetDualChnMCombineCmd/58 (Ftm_Pwm_Ip_SetDualChnMCombineCmd) @0698e000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_SetDualChnPwmSyncCmd/57 (Ftm_Pwm_Ip_SetDualChnPwmSyncCmd) @06988d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetDualChnDeadtimeCmd/56 (Ftm_Pwm_Ip_SetDualChnDeadtimeCmd) @06988a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetDualChnCompCmd/55 (Ftm_Pwm_Ip_SetDualChnCompCmd) @069887e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_GetDualChnCombineCmd/54 (Ftm_Pwm_Ip_GetDualChnCombineCmd) @06988540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdatePwmChannel/170 
  Calls: 
Ftm_Pwm_Ip_SetDualChnCombineCmd/53 (Ftm_Pwm_Ip_SetDualChnCombineCmd) @069882a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_ClearOutmaskReg/51 (Ftm_Pwm_Ip_ClearOutmaskReg) @06983d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UnMaskOutputChannels/182 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskReg/50 (Ftm_Pwm_Ip_SetOutmaskReg) @06983a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_MaskOutputChannels/181 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputMask/49 (Ftm_Pwm_Ip_SetChnOutputMask) @069837e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 
  Calls: 
Ftm_Pwm_Ip_SetChnOutputInitStateCmd/48 (Ftm_Pwm_Ip_SetChnOutputInitStateCmd) @06983540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: 
Ftm_Pwm_Ip_SetSoftwareTriggerCmd/47 (Ftm_Pwm_Ip_SetSoftwareTriggerCmd) @069832a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SyncUpdate/187 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UnMaskOutputChannels/182 Ftm_Pwm_Ip_MaskOutputChannels/181 Ftm_Pwm_Ip_FastUpdatePwmDuty/180 Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/168 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_SwOutputControl/169 Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl/160 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc/46 (Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc) @06983000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_UpdateSync/155 Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd/45 (Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd) @0690ad20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitChannel/163 Ftm_Pwm_Ip_ConfigureSyncType/154 
  Calls: 
Ftm_Pwm_Ip_SetMaxLoadingCmd/43 (Ftm_Pwm_Ip_SetMaxLoadingCmd) @0690a7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetMinLoadingCmd/42 (Ftm_Pwm_Ip_SetMinLoadingCmd) @0690a540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_UpdateSync/155 
  Calls: 
Ftm_Pwm_Ip_SetPwmSyncMode/41 (Ftm_Pwm_Ip_SetPwmSyncMode) @0690a2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 
Ftm_Pwm_Ip_Enable/38 (Ftm_Pwm_Ip_Enable) @06908a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetCounterInitVal/34 (Ftm_Pwm_Ip_SetCounterInitVal) @06908000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetChnCountVal/32 (Ftm_Pwm_Ip_SetChnCountVal) @069049a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_FastUpdatePwmDuty/180 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_UpdatePwmChannel/170 
  Calls: 
Ftm_Pwm_Ip_GetChOutputValue/31 (Ftm_Pwm_Ip_GetChOutputValue) @06904700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetOutputState/172 
  Calls: 
Ftm_Pwm_Ip_ClearChnEventFlag/29 (Ftm_Pwm_Ip_ClearChnEventFlag) @069041c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_UpdateChnInt/27 (Ftm_Pwm_Ip_UpdateChnInt) @068ffb60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_GetChnMode/26 (Ftm_Pwm_Ip_GetChnMode) @068ff8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetChnMSBAMode/25 (Ftm_Pwm_Ip_SetChnMSBAMode) @068ff620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 
  Calls: 
Ftm_Pwm_Ip_SetChnEdgeLevel/24 (Ftm_Pwm_Ip_SetChnEdgeLevel) @068ff380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_ConfigurePairedChannel/159 Ftm_Pwm_Ip_ConfigurePairedChannel/159 
  Calls: 
Ftm_Pwm_Ip_GetChnEdgeLevel/23 (Ftm_Pwm_Ip_GetChnEdgeLevel) @068ff0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetMod/19 (Ftm_Pwm_Ip_SetMod) @068a4620
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_InitInstance/157 Ftm_Pwm_Ip_InitInstance/157 
  Calls: 
Ftm_Pwm_Ip_SetCounter/17 (Ftm_Pwm_Ip_SetCounter) @068a4000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_DeInitInstance/162 
  Calls: 
Ftm_Pwm_Ip_EnablePwmChannelOutputs/15 (Ftm_Pwm_Ip_EnablePwmChannelOutputs) @068a09a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_InitChannel/161 Ftm_Pwm_Ip_InitPair/149 
  Calls: 
Ftm_Pwm_Ip_ClearTimerOverflow/14 (Ftm_Pwm_Ip_ClearTimerOverflow) @068a0700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_EnableNotification/175 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_SetTimerOverflowInt/11 (Ftm_Pwm_Ip_SetTimerOverflowInt) @0689be00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetNormalNotificationCase/174 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_DisableCmpIrq/150 
  Calls: 
Ftm_Pwm_Ip_GetCpwms/6 (Ftm_Pwm_Ip_GetCpwms) @0689b000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPhaseShift/183 Ftm_Pwm_Ip_UpdatePwmPeriod/171 Ftm_Pwm_Ip_UpdatePwmChannel/170 Ftm_Pwm_Ip_GetChannelMode/109 
  Calls: 
Ftm_Pwm_Ip_SetCpwms/5 (Ftm_Pwm_Ip_SetCpwms) @06869d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetClockSource/3 (Ftm_Pwm_Ip_SetClockSource) @068697e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetPowerState/176 Ftm_Pwm_Ip_SetPowerState/176 Ftm_Pwm_Ip_DeInitInstance/162 Ftm_Pwm_Ip_InitInstanceStart/158 Ftm_Pwm_Ip_ResetAndFirstConfigure/156 
  Calls: 
Ftm_Pwm_Ip_SetClockPs/1 (Ftm_Pwm_Ip_SetClockPs) @068691c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Ftm_Pwm_Ip_SetClockMode/177 Ftm_Pwm_Ip_SetClockMode/177 Ftm_Pwm_Ip_InitInstanceStart/158 
  Calls: 

;; Function Ftm_Pwm_Ip_SetClockPs (Ftm_Pwm_Ip_SetClockPs, funcdef_no=1, decl_uid=5882, cgraph_uid=2, symbol_order=1)

Ftm_Pwm_Ip_SetClockPs (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_ClkPrescalerType Prescaler)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SC;
  _2 = _1 & 4294967288;
  _3 = Prescaler_7(D) & 7;
  _4 = _2 | _3;
  FtmBase_6(D)->SC ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_SetClockSource (Ftm_Pwm_Ip_SetClockSource, funcdef_no=3, decl_uid=5889, cgraph_uid=4, symbol_order=3)

Ftm_Pwm_Ip_SetClockSource (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_ClkSourceType ClockSrc)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->SC;
  _2 = _1 & 4294967271;
  _3 = ClockSrc_8(D) << 3;
  _4 = _3 & 24;
  _5 = _2 | _4;
  FtmBase_7(D)->SC ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetCpwms (Ftm_Pwm_Ip_SetCpwms, funcdef_no=5, decl_uid=5896, cgraph_uid=6, symbol_order=5)

Ftm_Pwm_Ip_SetCpwms (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Mode)
{
  long unsigned int iftmp.23;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.23_4;
  long unsigned int iftmp.23_8;
  long unsigned int iftmp.23_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SC;
  _2 = _1 & 4294967263;
  if (Mode_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.23_9 = 32;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.23_8 = 0;

  <bb 5> :
  # iftmp.23_4 = PHI <iftmp.23_9(3), iftmp.23_8(4)>
  _3 = iftmp.23_4 | _2;
  FtmBase_6(D)->SC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_GetCpwms (Ftm_Pwm_Ip_GetCpwms, funcdef_no=6, decl_uid=5899, cgraph_uid=7, symbol_order=6)

Ftm_Pwm_Ip_GetCpwms (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  Ftm_Pwm_Ip_CounterModeType D.7197;
  long unsigned int _1;
  long unsigned int _2;
  _Bool _3;
  Ftm_Pwm_Ip_CounterModeType _6;

  <bb 2> :
  _1 ={v} FtmBase_5(D)->SC;
  _2 = _1 & 32;
  _3 = _2 != 0;
  _6 = (Ftm_Pwm_Ip_CounterModeType) _3;

  <bb 3> :
<L0>:
  return _6;

}



;; Function Ftm_Pwm_Ip_SetTimerOverflowInt (Ftm_Pwm_Ip_SetTimerOverflowInt, funcdef_no=11, decl_uid=5916, cgraph_uid=12, symbol_order=11)

Ftm_Pwm_Ip_SetTimerOverflowInt (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean State)
{
  long unsigned int iftmp.3;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.3_4;
  long unsigned int iftmp.3_8;
  long unsigned int iftmp.3_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SC;
  _2 = _1 & 4294967039;
  if (State_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.3_9 = 256;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.3_8 = 0;

  <bb 5> :
  # iftmp.3_4 = PHI <iftmp.3_9(3), iftmp.3_8(4)>
  _3 = iftmp.3_4 | _2;
  FtmBase_6(D)->SC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_ClearTimerOverflow (Ftm_Pwm_Ip_ClearTimerOverflow, funcdef_no=14, decl_uid=5925, cgraph_uid=15, symbol_order=14)

Ftm_Pwm_Ip_ClearTimerOverflow (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> :
  _1 ={v} FtmBase_4(D)->SC;
  _2 = _1 & 4294966783;
  FtmBase_4(D)->SC ={v} _2;
  return;

}



;; Function Ftm_Pwm_Ip_EnablePwmChannelOutputs (Ftm_Pwm_Ip_EnablePwmChannelOutputs, funcdef_no=15, decl_uid=5929, cgraph_uid=16, symbol_order=15)

Ftm_Pwm_Ip_EnablePwmChannelOutputs (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  unsigned int _1;
  unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 = (unsigned int) Channel_6(D);
  _2 = _1 + 16;
  _3 = 1 << _2;
  _4 ={v} FtmBase_8(D)->SC;
  _5 = _3 | _4;
  FtmBase_8(D)->SC ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetCounter (Ftm_Pwm_Ip_SetCounter, funcdef_no=17, decl_uid=5938, cgraph_uid=18, symbol_order=17)

Ftm_Pwm_Ip_SetCounter (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->CNT;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value_7(D);
  _4 = _2 | _3;
  FtmBase_6(D)->CNT ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_SetMod (Ftm_Pwm_Ip_SetMod, funcdef_no=19, decl_uid=5945, cgraph_uid=20, symbol_order=19)

Ftm_Pwm_Ip_SetMod (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->MOD;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value_7(D);
  _4 = _2 | _3;
  FtmBase_6(D)->MOD ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_GetChnEdgeLevel (Ftm_Pwm_Ip_GetChnEdgeLevel, funcdef_no=23, decl_uid=5961, cgraph_uid=24, symbol_order=23)

Ftm_Pwm_Ip_GetChnEdgeLevel (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.7192;
  unsigned char D.7191;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _14;
  uint8 _16;

  <bb 2> :
  _1 = (int) Channel_10(D);
  _2 ={v} FtmBase_12(D)->CONTROLS[_1].CSC;
  _3 = _2 >> 2;
  _4 = (unsigned char) _3;
  RetValue_13 = _4 & 1;
  _5 = (int) Channel_10(D);
  _6 ={v} FtmBase_12(D)->CONTROLS[_5].CSC;
  _7 = _6 >> 3;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  _14 = _9 & 2;
  RetValue_15 = _14 | RetValue_13;
  _16 = RetValue_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Ftm_Pwm_Ip_SetChnEdgeLevel (Ftm_Pwm_Ip_SetChnEdgeLevel, funcdef_no=24, decl_uid=5967, cgraph_uid=25, symbol_order=24)

Ftm_Pwm_Ip_SetChnEdgeLevel (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_ChannelModeType Level)
{
  uint32 LevelB;
  uint32 LevelA;
  long unsigned int _1;
  long unsigned int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  long unsigned int _12;

  <bb 2> :
  _1 = Level_13(D) << 2;
  LevelA_14 = _1 & 4;
  _2 = Level_13(D) << 2;
  LevelB_15 = _2 & 8;
  _3 = (int) Channel_16(D);
  _4 ={v} FtmBase_18(D)->CONTROLS[_3].CSC;
  _5 = _4 & 4294967291;
  _6 = (int) Channel_16(D);
  _7 = LevelA_14 | _5;
  FtmBase_18(D)->CONTROLS[_6].CSC ={v} _7;
  _8 = (int) Channel_16(D);
  _9 ={v} FtmBase_18(D)->CONTROLS[_8].CSC;
  _10 = _9 & 4294967287;
  _11 = (int) Channel_16(D);
  _12 = LevelB_15 | _10;
  FtmBase_18(D)->CONTROLS[_11].CSC ={v} _12;
  return;

}



;; Function Ftm_Pwm_Ip_SetChnMSBAMode (Ftm_Pwm_Ip_SetChnMSBAMode, funcdef_no=25, decl_uid=5974, cgraph_uid=26, symbol_order=25)

Ftm_Pwm_Ip_SetChnMSBAMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_ChannelModeType Selection)
{
  uint32 SelectionB;
  uint32 SelectionA;
  long unsigned int _1;
  long unsigned int _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int _11;
  long unsigned int _12;

  <bb 2> :
  _1 = Selection_13(D) << 2;
  SelectionA_14 = _1 & 16;
  _2 = Selection_13(D) << 2;
  SelectionB_15 = _2 & 32;
  _3 = (int) Channel_16(D);
  _4 ={v} FtmBase_18(D)->CONTROLS[_3].CSC;
  _5 = _4 & 4294967279;
  _6 = (int) Channel_16(D);
  _7 = SelectionA_14 | _5;
  FtmBase_18(D)->CONTROLS[_6].CSC ={v} _7;
  _8 = (int) Channel_16(D);
  _9 ={v} FtmBase_18(D)->CONTROLS[_8].CSC;
  _10 = _9 & 4294967263;
  _11 = (int) Channel_16(D);
  _12 = SelectionB_15 | _10;
  FtmBase_18(D)->CONTROLS[_11].CSC ={v} _12;
  return;

}



;; Function Ftm_Pwm_Ip_GetChnMode (Ftm_Pwm_Ip_GetChnMode, funcdef_no=26, decl_uid=5980, cgraph_uid=27, symbol_order=26)

Ftm_Pwm_Ip_GetChnMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 RetValue;
  uint8 D.7195;
  unsigned char D.7194;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  unsigned char _9;
  unsigned char _14;
  uint8 _16;

  <bb 2> :
  _1 = (int) Channel_10(D);
  _2 ={v} FtmBase_12(D)->CONTROLS[_1].CSC;
  _3 = _2 >> 4;
  _4 = (unsigned char) _3;
  RetValue_13 = _4 & 1;
  _5 = (int) Channel_10(D);
  _6 ={v} FtmBase_12(D)->CONTROLS[_5].CSC;
  _7 = _6 >> 5;
  _8 = (unsigned char) _7;
  _9 = _8 << 1;
  _14 = _9 & 2;
  RetValue_15 = _14 | RetValue_13;
  _16 = RetValue_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Ftm_Pwm_Ip_UpdateChnInt (Ftm_Pwm_Ip_UpdateChnInt, funcdef_no=27, decl_uid=5986, cgraph_uid=28, symbol_order=27)

Ftm_Pwm_Ip_UpdateChnInt (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  long unsigned int iftmp.2;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  int _4;
  long unsigned int _5;
  long unsigned int iftmp.2_6;
  long unsigned int iftmp.2_11;
  long unsigned int iftmp.2_12;

  <bb 2> :
  _1 = (int) Channel_7(D);
  _2 ={v} FtmBase_9(D)->CONTROLS[_1].CSC;
  _3 = _2 & 4294967231;
  if (Enable_10(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2_12 = 64;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2_11 = 0;

  <bb 5> :
  # iftmp.2_6 = PHI <iftmp.2_12(3), iftmp.2_11(4)>
  _4 = (int) Channel_7(D);
  _5 = iftmp.2_6 | _3;
  FtmBase_9(D)->CONTROLS[_4].CSC ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_ClearChnEventFlag (Ftm_Pwm_Ip_ClearChnEventFlag, funcdef_no=29, decl_uid=5994, cgraph_uid=30, symbol_order=29)

Ftm_Pwm_Ip_ClearChnEventFlag (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  int _1;
  long unsigned int _2;
  int _3;
  long unsigned int _4;

  <bb 2> :
  _1 = (int) Channel_5(D);
  _2 ={v} FtmBase_7(D)->CONTROLS[_1].CSC;
  _3 = (int) Channel_5(D);
  _4 = _2 & 4294967167;
  FtmBase_7(D)->CONTROLS[_3].CSC ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_GetChOutputValue (Ftm_Pwm_Ip_GetChOutputValue, funcdef_no=31, decl_uid=6002, cgraph_uid=32, symbol_order=31)

Ftm_Pwm_Ip_GetChOutputValue (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  boolean D.7251;
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  boolean _7;

  <bb 2> :
  _1 = (int) Channel_4(D);
  _2 ={v} FtmBase_6(D)->CONTROLS[_1].CSC;
  _3 = _2 & 1024;
  _7 = _3 != 0;

  <bb 3> :
<L0>:
  return _7;

}



;; Function Ftm_Pwm_Ip_SetChnCountVal (Ftm_Pwm_Ip_SetChnCountVal, funcdef_no=32, decl_uid=6007, cgraph_uid=33, symbol_order=32)

Ftm_Pwm_Ip_SetChnCountVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, uint16 Value)
{
  int _1;
  long unsigned int _2;

  <bb 2> :
  _1 = (int) Channel_3(D);
  _2 = (long unsigned int) Value_4(D);
  FtmBase_6(D)->CONTROLS[_1].CV ={v} _2;
  return;

}



;; Function Ftm_Pwm_Ip_SetCounterInitVal (Ftm_Pwm_Ip_SetCounterInitVal, funcdef_no=34, decl_uid=6015, cgraph_uid=35, symbol_order=34)

Ftm_Pwm_Ip_SetCounterInitVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->CNTIN;
  _2 = _1 & 4294901760;
  _3 = (long unsigned int) Value_7(D);
  _4 = _2 | _3;
  FtmBase_6(D)->CNTIN ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_Enable (Ftm_Pwm_Ip_Enable, funcdef_no=38, decl_uid=6030, cgraph_uid=39, symbol_order=38)

Ftm_Pwm_Ip_Enable (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.24;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.24_4;
  long unsigned int iftmp.24_8;
  long unsigned int iftmp.24_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->MODE;
  _2 = _1 & 4294967294;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.24_9 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.24_8 = 0;

  <bb 5> :
  # iftmp.24_4 = PHI <iftmp.24_9(3), iftmp.24_8(4)>
  _3 = iftmp.24_4 | _2;
  FtmBase_6(D)->MODE ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetPwmSyncMode (Ftm_Pwm_Ip_SetPwmSyncMode, funcdef_no=41, decl_uid=6041, cgraph_uid=42, symbol_order=41)

Ftm_Pwm_Ip_SetPwmSyncMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.28;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.28_4;
  long unsigned int iftmp.28_8;
  long unsigned int iftmp.28_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->MODE;
  _2 = _1 & 4294967287;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.28_9 = 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.28_8 = 0;

  <bb 5> :
  # iftmp.28_4 = PHI <iftmp.28_9(3), iftmp.28_8(4)>
  _3 = iftmp.28_4 | _2;
  FtmBase_6(D)->MODE ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetMinLoadingCmd (Ftm_Pwm_Ip_SetMinLoadingCmd, funcdef_no=42, decl_uid=6045, cgraph_uid=43, symbol_order=42)

Ftm_Pwm_Ip_SetMinLoadingCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.21;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.21_4;
  long unsigned int iftmp.21_8;
  long unsigned int iftmp.21_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNC;
  _2 = _1 & 4294967294;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.21_9 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.21_8 = 0;

  <bb 5> :
  # iftmp.21_4 = PHI <iftmp.21_9(3), iftmp.21_8(4)>
  _3 = iftmp.21_4 | _2;
  FtmBase_6(D)->SYNC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetMaxLoadingCmd (Ftm_Pwm_Ip_SetMaxLoadingCmd, funcdef_no=43, decl_uid=6049, cgraph_uid=44, symbol_order=43)

Ftm_Pwm_Ip_SetMaxLoadingCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.20;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.20_4;
  long unsigned int iftmp.20_8;
  long unsigned int iftmp.20_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNC;
  _2 = _1 & 4294967293;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.20_9 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.20_8 = 0;

  <bb 5> :
  # iftmp.20_4 = PHI <iftmp.20_9(3), iftmp.20_8(4)>
  _3 = iftmp.20_4 | _2;
  FtmBase_6(D)->SYNC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd, funcdef_no=45, decl_uid=6057, cgraph_uid=46, symbol_order=45)

Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.13;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.13_4;
  long unsigned int iftmp.13_8;
  long unsigned int iftmp.13_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNC;
  _2 = _1 & 4294967287;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.13_9 = 8;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.13_8 = 0;

  <bb 5> :
  # iftmp.13_4 = PHI <iftmp.13_9(3), iftmp.13_8(4)>
  _3 = iftmp.13_4 | _2;
  FtmBase_6(D)->SYNC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc, funcdef_no=46, decl_uid=6062, cgraph_uid=47, symbol_order=46)

Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 TriggerNumber, boolean Enable)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (Enable_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->SYNC;
  _2 = (int) TriggerNumber_14(D);
  _3 = 16 << _2;
  _4 = _1 | _3;
  FtmBase_13(D)->SYNC ={v} _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 ={v} FtmBase_13(D)->SYNC;
  _6 = (int) TriggerNumber_14(D);
  _7 = 16 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase_13(D)->SYNC ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetSoftwareTriggerCmd (Ftm_Pwm_Ip_SetSoftwareTriggerCmd, funcdef_no=47, decl_uid=6066, cgraph_uid=48, symbol_order=47)

Ftm_Pwm_Ip_SetSoftwareTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.0;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.0_4;
  long unsigned int iftmp.0_8;
  long unsigned int iftmp.0_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNC;
  _2 = _1 & 4294967167;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.0_9 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0_8 = 0;

  <bb 5> :
  # iftmp.0_4 = PHI <iftmp.0_9(3), iftmp.0_8(4)>
  _3 = iftmp.0_4 | _2;
  FtmBase_6(D)->SYNC ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetChnOutputInitStateCmd (Ftm_Pwm_Ip_SetChnOutputInitStateCmd, funcdef_no=48, decl_uid=6071, cgraph_uid=49, symbol_order=48)

Ftm_Pwm_Ip_SetChnOutputInitStateCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_OutputStateType State)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (State_11(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->OUTINIT;
  _2 = (int) Channel_14(D);
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase_13(D)->OUTINIT ={v} _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 ={v} FtmBase_13(D)->OUTINIT;
  _6 = (int) Channel_14(D);
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase_13(D)->OUTINIT ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetChnOutputMask (Ftm_Pwm_Ip_SetChnOutputMask, funcdef_no=49, decl_uid=6076, cgraph_uid=50, symbol_order=49)

Ftm_Pwm_Ip_SetChnOutputMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean EnableMask)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (EnableMask_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->OUTMASK;
  _2 = (int) Channel_14(D);
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase_13(D)->OUTMASK ={v} _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 ={v} FtmBase_13(D)->OUTMASK;
  _6 = (int) Channel_14(D);
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase_13(D)->OUTMASK ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetOutmaskReg (Ftm_Pwm_Ip_SetOutmaskReg, funcdef_no=50, decl_uid=6080, cgraph_uid=51, symbol_order=50)

Ftm_Pwm_Ip_SetOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->OUTMASK;
  _2 = ~RegVal_7(D);
  _3 = _1 & _2;
  _4 = RegVal_7(D) | _3;
  FtmBase_6(D)->OUTMASK ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_ClearOutmaskReg (Ftm_Pwm_Ip_ClearOutmaskReg, funcdef_no=51, decl_uid=6084, cgraph_uid=52, symbol_order=51)

Ftm_Pwm_Ip_ClearOutmaskReg (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 RegVal)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> :
  _1 ={v} FtmBase_5(D)->OUTMASK;
  _2 = ~RegVal_6(D);
  _3 = _1 & _2;
  FtmBase_5(D)->OUTMASK ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetDualChnCombineCmd (Ftm_Pwm_Ip_SetDualChnCombineCmd, funcdef_no=53, decl_uid=6092, cgraph_uid=54, symbol_order=53)

Ftm_Pwm_Ip_SetDualChnCombineCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 1 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (long unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 1 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_GetDualChnCombineCmd (Ftm_Pwm_Ip_GetDualChnCombineCmd, funcdef_no=54, decl_uid=6096, cgraph_uid=55, symbol_order=54)

Ftm_Pwm_Ip_GetDualChnCombineCmd (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId)
{
  boolean D.7239;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  boolean _9;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_8(D);
  _3 = _2 * 8;
  _4 = _1 >> _3;
  _5 = _4 & 1;
  _9 = _5 != 0;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Ftm_Pwm_Ip_SetDualChnCompCmd (Ftm_Pwm_Ip_SetDualChnCompCmd, funcdef_no=55, decl_uid=6101, cgraph_uid=56, symbol_order=55)

Ftm_Pwm_Ip_SetDualChnCompCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 2 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (long unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 2 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetDualChnDeadtimeCmd (Ftm_Pwm_Ip_SetDualChnDeadtimeCmd, funcdef_no=56, decl_uid=6106, cgraph_uid=57, symbol_order=56)

Ftm_Pwm_Ip_SetDualChnDeadtimeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 16 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 16 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (Ftm_Pwm_Ip_SetDualChnPwmSyncCmd, funcdef_no=57, decl_uid=6111, cgraph_uid=58, symbol_order=57)

Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 32 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 32 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetDualChnMCombineCmd (Ftm_Pwm_Ip_SetDualChnMCombineCmd, funcdef_no=58, decl_uid=6116, cgraph_uid=59, symbol_order=58)

Ftm_Pwm_Ip_SetDualChnMCombineCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 128 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 128 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetDeadtimeCount (Ftm_Pwm_Ip_SetDeadtimeCount, funcdef_no=60, decl_uid=6124, cgraph_uid=61, symbol_order=60)

Ftm_Pwm_Ip_SetDeadtimeCount (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Count)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->DEADTIME;
  _2 = _1 & 4294967232;
  _3 = (long unsigned int) Count_8(D);
  _4 = _3 & 63;
  _5 = _2 | _4;
  FtmBase_7(D)->DEADTIME ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetDeadtimePrescaler (Ftm_Pwm_Ip_SetDeadtimePrescaler, funcdef_no=61, decl_uid=6128, cgraph_uid=62, symbol_order=61)

Ftm_Pwm_Ip_SetDeadtimePrescaler (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_DeadtimePrescalerType Divider)
{
  long unsigned int _1;
  long unsigned int _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;

  <bb 2> :
  _1 ={v} FtmBase_9(D)->DEADTIME;
  _2 = _1 & 4294967103;
  _3 = (unsigned char) Divider_10(D);
  _4 = (long unsigned int) _3;
  _5 = _4 << 6;
  _6 = _5 & 255;
  _7 = _2 | _6;
  FtmBase_9(D)->DEADTIME ={v} _7;
  return;

}



;; Function Ftm_Pwm_Ip_SetExtDeadtimeValue (Ftm_Pwm_Ip_SetExtDeadtimeValue, funcdef_no=63, decl_uid=6135, cgraph_uid=64, symbol_order=63)

Ftm_Pwm_Ip_SetExtDeadtimeValue (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Value)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  _1 ={v} FtmBase_8(D)->DEADTIME;
  _2 = _1 & 4293984255;
  _3 = (long unsigned int) Value_9(D);
  _4 = _3 << 16;
  _5 = _4 & 983040;
  _6 = _2 | _5;
  FtmBase_8(D)->DEADTIME ={v} _6;
  return;

}



;; Function Ftm_Pwm_Ip_SetInitTriggerCmd (Ftm_Pwm_Ip_SetInitTriggerCmd, funcdef_no=64, decl_uid=6139, cgraph_uid=65, symbol_order=64)

Ftm_Pwm_Ip_SetInitTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.25;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.25_4;
  long unsigned int iftmp.25_8;
  long unsigned int iftmp.25_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->EXTTRIG;
  _2 = _1 & 4294967231;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.25_9 = 64;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.25_8 = 0;

  <bb 5> :
  # iftmp.25_4 = PHI <iftmp.25_9(3), iftmp.25_8(4)>
  _3 = iftmp.25_4 | _2;
  FtmBase_6(D)->EXTTRIG ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_DisableTriggerMask (Ftm_Pwm_Ip_DisableTriggerMask, funcdef_no=67, decl_uid=6149, cgraph_uid=68, symbol_order=67)

Ftm_Pwm_Ip_DisableTriggerMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 TriggerMask)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> :
  _1 ={v} FtmBase_5(D)->EXTTRIG;
  _2 = ~TriggerMask_6(D);
  _3 = _1 & _2;
  FtmBase_5(D)->EXTTRIG ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_EnableTriggerMask (Ftm_Pwm_Ip_EnableTriggerMask, funcdef_no=68, decl_uid=6153, cgraph_uid=69, symbol_order=68)

Ftm_Pwm_Ip_EnableTriggerMask (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint32 TriggerMask)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->EXTTRIG;
  _2 = ~TriggerMask_7(D);
  _3 = _1 & _2;
  _4 = TriggerMask_7(D) | _3;
  FtmBase_6(D)->EXTTRIG ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_SetChnOutputPolarityCmd (Ftm_Pwm_Ip_SetChnOutputPolarityCmd, funcdef_no=69, decl_uid=6158, cgraph_uid=70, symbol_order=69)

Ftm_Pwm_Ip_SetChnOutputPolarityCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, Ftm_Pwm_Ip_PolarityType Polarity)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (Polarity_11(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->POL;
  _2 = (int) Channel_14(D);
  _3 = 1 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  FtmBase_13(D)->POL ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_13(D)->POL;
  _7 = (int) Channel_14(D);
  _8 = 1 << _7;
  _9 = _6 | _8;
  FtmBase_13(D)->POL ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_GetChnOutputPolarity (Ftm_Pwm_Ip_GetChnOutputPolarity, funcdef_no=70, decl_uid=6162, cgraph_uid=71, symbol_order=70)

Ftm_Pwm_Ip_GetChnOutputPolarity (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  Ftm_Pwm_Ip_PolarityType D.6943;
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  _Bool _5;
  Ftm_Pwm_Ip_PolarityType _9;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->POL;
  _2 = (int) Channel_8(D);
  _3 = _1 >> _2;
  _4 = _3 & 1;
  _5 = _4 == 1;
  _9 = (Ftm_Pwm_Ip_PolarityType) _5;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Ftm_Pwm_Ip_SetLoadFreq (Ftm_Pwm_Ip_SetLoadFreq, funcdef_no=72, decl_uid=6169, cgraph_uid=73, symbol_order=72)

Ftm_Pwm_Ip_SetLoadFreq (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Val)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->CONF;
  _2 = _1 & 4294967264;
  _3 = (long unsigned int) Val_8(D);
  _4 = _3 & 31;
  _5 = _2 | _4;
  FtmBase_7(D)->CONF ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetBdmMode (Ftm_Pwm_Ip_SetBdmMode, funcdef_no=73, decl_uid=6173, cgraph_uid=74, symbol_order=73)

Ftm_Pwm_Ip_SetBdmMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_DebugModeType Val)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->CONF;
  _2 = _1 & 4294967103;
  _3 = Val_8(D) << 6;
  _4 = _3 & 255;
  _5 = _2 | _4;
  FtmBase_7(D)->CONF ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetInitTriggerMode (Ftm_Pwm_Ip_SetInitTriggerMode, funcdef_no=76, decl_uid=6185, cgraph_uid=77, symbol_order=76)

Ftm_Pwm_Ip_SetInitTriggerMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_InitTriggModeType InitTrigMode)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> :
  _1 ={v} FtmBase_7(D)->CONF;
  _2 = _1 & 4294965247;
  _3 = InitTrigMode_8(D) << 11;
  _4 = _3 & 2048;
  _5 = _2 | _4;
  FtmBase_7(D)->CONF ={v} _5;
  return;

}



;; Function Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd (Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd, funcdef_no=77, decl_uid=6189, cgraph_uid=78, symbol_order=77)

Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.19;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.19_4;
  long unsigned int iftmp.19_8;
  long unsigned int iftmp.19_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967294;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.19_9 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.19_8 = 0;

  <bb 5> :
  # iftmp.19_4 = PHI <iftmp.19_9(3), iftmp.19_8(4)>
  _3 = iftmp.19_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd (Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd, funcdef_no=78, decl_uid=6193, cgraph_uid=79, symbol_order=78)

Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.16;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.16_4;
  long unsigned int iftmp.16_8;
  long unsigned int iftmp.16_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967291;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.16_9 = 4;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.16_8 = 0;

  <bb 5> :
  # iftmp.16_4 = PHI <iftmp.16_9(3), iftmp.16_8(4)>
  _3 = iftmp.16_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd (Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd, funcdef_no=79, decl_uid=6197, cgraph_uid=80, symbol_order=79)

Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.14;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.14_4;
  long unsigned int iftmp.14_8;
  long unsigned int iftmp.14_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967279;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.14_9 = 16;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.14_8 = 0;

  <bb 5> :
  # iftmp.14_4 = PHI <iftmp.14_9(3), iftmp.14_8(4)>
  _3 = iftmp.14_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd (Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd, funcdef_no=80, decl_uid=6201, cgraph_uid=81, symbol_order=80)

Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.15;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.15_4;
  long unsigned int iftmp.15_8;
  long unsigned int iftmp.15_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967263;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.15_9 = 32;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.15_8 = 0;

  <bb 5> :
  # iftmp.15_4 = PHI <iftmp.15_9(3), iftmp.15_8(4)>
  _3 = iftmp.15_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetPwmSyncModeCmd (Ftm_Pwm_Ip_SetPwmSyncModeCmd, funcdef_no=81, decl_uid=6205, cgraph_uid=82, symbol_order=81)

Ftm_Pwm_Ip_SetPwmSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Mode)
{
  long unsigned int iftmp.18;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.18_4;
  long unsigned int iftmp.18_8;
  long unsigned int iftmp.18_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967167;
  if (Mode_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.18_9 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.18_8 = 0;

  <bb 5> :
  # iftmp.18_4 = PHI <iftmp.18_9(3), iftmp.18_8(4)>
  _3 = iftmp.18_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd, funcdef_no=82, decl_uid=6209, cgraph_uid=83, symbol_order=82)

Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.11;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.11_4;
  long unsigned int iftmp.11_8;
  long unsigned int iftmp.11_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294967039;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.11_9 = 256;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.11_8 = 0;

  <bb 5> :
  # iftmp.11_4 = PHI <iftmp.11_9(3), iftmp.11_8(4)>
  _3 = iftmp.11_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd, funcdef_no=83, decl_uid=6213, cgraph_uid=84, symbol_order=83)

Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.9;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.9_4;
  long unsigned int iftmp.9_8;
  long unsigned int iftmp.9_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294966783;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.9_9 = 512;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.9_8 = 0;

  <bb 5> :
  # iftmp.9_4 = PHI <iftmp.9_9(3), iftmp.9_8(4)>
  _3 = iftmp.9_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd, funcdef_no=84, decl_uid=6217, cgraph_uid=85, symbol_order=84)

Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.4;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.4_4;
  long unsigned int iftmp.4_8;
  long unsigned int iftmp.4_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294966271;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.4_9 = 1024;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4_8 = 0;

  <bb 5> :
  # iftmp.4_4 = PHI <iftmp.4_9(3), iftmp.4_8(4)>
  _3 = iftmp.4_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd, funcdef_no=85, decl_uid=6221, cgraph_uid=86, symbol_order=85)

Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.6;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.6_4;
  long unsigned int iftmp.6_8;
  long unsigned int iftmp.6_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294965247;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.6_9 = 2048;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.6_8 = 0;

  <bb 5> :
  # iftmp.6_4 = PHI <iftmp.6_9(3), iftmp.6_8(4)>
  _3 = iftmp.6_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd, funcdef_no=86, decl_uid=6225, cgraph_uid=87, symbol_order=86)

Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.7;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.7_4;
  long unsigned int iftmp.7_8;
  long unsigned int iftmp.7_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294963199;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.7_9 = 4096;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.7_8 = 0;

  <bb 5> :
  # iftmp.7_4 = PHI <iftmp.7_9(3), iftmp.7_8(4)>
  _3 = iftmp.7_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd, funcdef_no=87, decl_uid=6229, cgraph_uid=88, symbol_order=87)

Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.12;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.12_4;
  long unsigned int iftmp.12_8;
  long unsigned int iftmp.12_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294901759;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.12_9 = 65536;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.12_8 = 0;

  <bb 5> :
  # iftmp.12_4 = PHI <iftmp.12_9(3), iftmp.12_8(4)>
  _3 = iftmp.12_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd, funcdef_no=88, decl_uid=6233, cgraph_uid=89, symbol_order=88)

Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.10;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.10_4;
  long unsigned int iftmp.10_8;
  long unsigned int iftmp.10_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294836223;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.10_9 = 131072;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.10_8 = 0;

  <bb 5> :
  # iftmp.10_4 = PHI <iftmp.10_9(3), iftmp.10_8(4)>
  _3 = iftmp.10_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd, funcdef_no=89, decl_uid=6237, cgraph_uid=90, symbol_order=89)

Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.5;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.5_4;
  long unsigned int iftmp.5_8;
  long unsigned int iftmp.5_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294705151;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.5_9 = 262144;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.5_8 = 0;

  <bb 5> :
  # iftmp.5_4 = PHI <iftmp.5_9(3), iftmp.5_8(4)>
  _3 = iftmp.5_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd, funcdef_no=90, decl_uid=6241, cgraph_uid=91, symbol_order=90)

Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.8;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.8_4;
  long unsigned int iftmp.8_8;
  long unsigned int iftmp.8_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->SYNCONF;
  _2 = _1 & 4294443007;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.8_9 = 524288;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8_8 = 0;

  <bb 5> :
  # iftmp.8_4 = PHI <iftmp.8_9(3), iftmp.8_8(4)>
  _3 = iftmp.8_4 | _2;
  FtmBase_6(D)->SYNCONF ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetChnSoftwareCtrlVal (Ftm_Pwm_Ip_SetChnSoftwareCtrlVal, funcdef_no=95, decl_uid=6263, cgraph_uid=96, symbol_order=95)

Ftm_Pwm_Ip_SetChnSoftwareCtrlVal (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  boolean StatusPol;
  uint8 ChPol;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> :
  _1 ={v} FtmBase_18(D)->POL;
  _2 = (long unsigned int) Channel_19(D);
  _3 = _1 >> _2;
  _4 = (unsigned char) _3;
  ChPol_20 = _4 & 1;
  StatusPol_21 = ChPol_20 != 0;
  if (Enable_22(D) != StatusPol_21)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 ={v} FtmBase_18(D)->SWOCTRL;
  _6 = (unsigned int) Channel_19(D);
  _7 = _6 + 8;
  _8 = 1 << _7;
  _9 = _5 | _8;
  FtmBase_18(D)->SWOCTRL ={v} _9;
  goto <bb 5>; [INV]

  <bb 4> :
  _10 ={v} FtmBase_18(D)->SWOCTRL;
  _11 = (unsigned int) Channel_19(D);
  _12 = _11 + 8;
  _13 = 1 << _12;
  _14 = ~_13;
  _15 = _10 & _14;
  FtmBase_18(D)->SWOCTRL ={v} _15;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd (Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd, funcdef_no=97, decl_uid=6274, cgraph_uid=98, symbol_order=97)

Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (Enable_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->SWOCTRL;
  _2 = (int) Channel_14(D);
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase_13(D)->SWOCTRL ={v} _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 ={v} FtmBase_13(D)->SWOCTRL;
  _6 = (int) Channel_14(D);
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase_13(D)->SWOCTRL ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SoftwareOutputControl (Ftm_Pwm_Ip_SoftwareOutputControl, funcdef_no=98, decl_uid=6278, cgraph_uid=99, symbol_order=98)

Ftm_Pwm_Ip_SoftwareOutputControl (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint16 Value)
{
  long unsigned int _1;

  <bb 2> :
  _1 = (long unsigned int) Value_2(D);
  FtmBase_4(D)->SWOCTRL ={v} _1;
  return;

}



;; Function Ftm_Pwm_Ip_SetPwmLoadChnSelCmd (Ftm_Pwm_Ip_SetPwmLoadChnSelCmd, funcdef_no=99, decl_uid=6283, cgraph_uid=100, symbol_order=99)

Ftm_Pwm_Ip_SetPwmLoadChnSelCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> :
  if (Enable_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_13(D)->PWMLOAD;
  _2 = (int) Channel_14(D);
  _3 = 1 << _2;
  _4 = _1 | _3;
  FtmBase_13(D)->PWMLOAD ={v} _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 ={v} FtmBase_13(D)->PWMLOAD;
  _6 = (int) Channel_14(D);
  _7 = 1 << _6;
  _8 = ~_7;
  _9 = _5 & _8;
  FtmBase_13(D)->PWMLOAD ={v} _9;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetHalfCycleCmd (Ftm_Pwm_Ip_SetHalfCycleCmd, funcdef_no=100, decl_uid=6287, cgraph_uid=101, symbol_order=100)

Ftm_Pwm_Ip_SetHalfCycleCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  if (Enable_6(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_8(D)->PWMLOAD;
  _2 = _1 | 256;
  FtmBase_8(D)->PWMLOAD ={v} _2;
  goto <bb 5>; [INV]

  <bb 4> :
  _3 ={v} FtmBase_8(D)->PWMLOAD;
  _4 = _3 & 4294967039;
  FtmBase_8(D)->PWMLOAD ={v} _4;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_GetSoftwareOutputControl (Ftm_Pwm_Ip_GetSoftwareOutputControl, funcdef_no=105, decl_uid=6305, cgraph_uid=106, symbol_order=105)

Ftm_Pwm_Ip_GetSoftwareOutputControl (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint16 D.7220;
  long unsigned int _1;
  uint16 _4;

  <bb 2> :
  _1 ={v} FtmBase_3(D)->SWOCTRL;
  _4 = (uint16) _1;

  <bb 3> :
<L0>:
  return _4;

}



;; Function Ftm_Pwm_Ip_GetPolInstance (Ftm_Pwm_Ip_GetPolInstance, funcdef_no=106, decl_uid=6308, cgraph_uid=107, symbol_order=106)

Ftm_Pwm_Ip_GetPolInstance (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint16 D.7222;
  long unsigned int _1;
  uint16 _4;

  <bb 2> :
  _1 ={v} FtmBase_3(D)->POL;
  _4 = (uint16) _1;

  <bb 3> :
<L0>:
  return _4;

}



;; Function Ftm_Pwm_Ip_GetChannelMode (Ftm_Pwm_Ip_GetChannelMode, funcdef_no=109, decl_uid=6324, cgraph_uid=110, symbol_order=109)

Ftm_Pwm_Ip_GetChannelMode (const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel)
{
  uint8 ChPairId;
  uint8 Mcombine;
  uint8 Combine;
  uint8 RetValue;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  Ftm_Pwm_Ip_ChannelModeType D.7189;
  unsigned char D.7188;
  unsigned char D.7187;
  uint8 iftmp.34;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  <unnamed type> _18;
  unsigned char _19;
  unsigned char _20;
  unsigned char _21;
  int _22;
  uint8 iftmp.34_24;
  uint8 iftmp.34_31;
  uint8 iftmp.34_32;
  unsigned char _37;
  unsigned char _40;
  Ftm_Pwm_Ip_ChannelModeType _53;

  <bb 2> :
  ChPairId_26 = Channel_25(D) >> 1;
  _1 ={v} FtmBase_28(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_26;
  _3 = _2 * 8;
  _4 = 1 << _3;
  _5 = _1 & _4;
  _6 = (long unsigned int) ChPairId_26;
  _7 = _6 * 8;
  _8 = _5 >> _7;
  Combine_29 = (uint8) _8;
  _9 ={v} FtmBase_28(D)->COMBINE;
  _10 = (long unsigned int) ChPairId_26;
  _11 = _10 * 8;
  _12 = 128 << _11;
  _13 = _9 & _12;
  _14 = (long unsigned int) ChPairId_26;
  _15 = _14 * 8;
  _16 = _13 >> _15;
  Mcombine_30 = (uint8) _16;
  if (Mcombine_30 == 128)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.34_32 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.34_31 = 0;

  <bb 5> :
  # iftmp.34_24 = PHI <iftmp.34_32(3), iftmp.34_31(4)>
  Mcombine_33 = iftmp.34_24;
  RetValue_35 = Ftm_Pwm_Ip_GetChnEdgeLevel (FtmBase_28(D), Channel_25(D));
  _17 = Ftm_Pwm_Ip_GetChnMode (FtmBase_28(D), Channel_25(D));
  _37 = _17 << 2;
  RetValue_38 = _37 | RetValue_35;
  _18 = Ftm_Pwm_Ip_GetCpwms (FtmBase_28(D));
  _19 = (unsigned char) _18;
  _40 = _19 << 4;
  RetValue_41 = _40 | RetValue_38;
  _20 = Combine_29 << 5;
  RetValue_42 = RetValue_41 | _20;
  _21 = Mcombine_33 << 6;
  RetValue_43 = RetValue_42 | _21;
  _22 = (int) RetValue_43;
  switch (_22) <default: <L11> [INV], case 9: <L4> [INV], case 10: <L3> [INV], case 17: <L6> [INV], case 18: <L5> [INV], case 33: <L8> [INV], case 34: <L7> [INV], case 97: <L10> [INV], case 98: <L9> [INV]>

  <bb 6> :
<L3>:
  ChMode_50 = 10;
  goto <bb 15>; [INV]

  <bb 7> :
<L4>:
  ChMode_51 = 9;
  goto <bb 15>; [INV]

  <bb 8> :
<L5>:
  ChMode_48 = 18;
  goto <bb 15>; [INV]

  <bb 9> :
<L6>:
  ChMode_49 = 17;
  goto <bb 15>; [INV]

  <bb 10> :
<L7>:
  ChMode_46 = 34;
  goto <bb 15>; [INV]

  <bb 11> :
<L8>:
  ChMode_47 = 33;
  goto <bb 15>; [INV]

  <bb 12> :
<L9>:
  ChMode_44 = 98;
  goto <bb 15>; [INV]

  <bb 13> :
<L10>:
  ChMode_45 = 97;
  goto <bb 15>; [INV]

  <bb 14> :
<L11>:
  ChMode_52 = 255;

  <bb 15> :
  # ChMode_23 = PHI <ChMode_50(6), ChMode_51(7), ChMode_48(8), ChMode_49(9), ChMode_46(10), ChMode_47(11), ChMode_44(12), ChMode_45(13), ChMode_52(14)>
  _53 = ChMode_23;

  <bb 16> :
<L13>:
  return _53;

}



;; Function Ftm_Pwm_Ip_UpdateWriteProtection (Ftm_Pwm_Ip_UpdateWriteProtection, funcdef_no=110, decl_uid=6343, cgraph_uid=111, symbol_order=110)

Ftm_Pwm_Ip_UpdateWriteProtection (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  if (Enable_8(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_10(D)->FMS;
  _2 = _1 | 64;
  FtmBase_10(D)->FMS ={v} _2;
  goto <bb 6>; [INV]

  <bb 4> :
  _3 ={v} FtmBase_10(D)->FMS;
  _4 = _3 & 64;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _5 ={v} FtmBase_10(D)->MODE;
  _6 = _5 | 4;
  FtmBase_10(D)->MODE ={v} _6;

  <bb 6> :
  return;

}



;; Function Ftm_Pwm_Ip_Reset (Ftm_Pwm_Ip_Reset, funcdef_no=111, decl_uid=6346, cgraph_uid=112, symbol_order=111)

Ftm_Pwm_Ip_Reset (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase)
{
  uint8 ChnIndex;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  int _4;
  int _5;
  unsigned char ChnIndex.22_6;

  <bb 2> :
  Ftm_Pwm_Ip_UpdateWriteProtection (FtmBase_10(D), 0);
  _1 ={v} FtmBase_10(D)->SC;
  FtmBase_10(D)->SC ={v} _1;
  FtmBase_10(D)->CNT ={v} 0;
  FtmBase_10(D)->MOD ={v} 0;
  FtmBase_10(D)->CNTIN ={v} 0;
  _2 ={v} FtmBase_10(D)->STATUS;
  FtmBase_10(D)->STATUS ={v} _2;
  FtmBase_10(D)->MODE ={v} 4;
  FtmBase_10(D)->SYNC ={v} 0;
  FtmBase_10(D)->OUTINIT ={v} 0;
  FtmBase_10(D)->OUTMASK ={v} 0;
  FtmBase_10(D)->COMBINE ={v} 0;
  FtmBase_10(D)->DEADTIME ={v} 0;
  _3 ={v} FtmBase_10(D)->EXTTRIG;
  FtmBase_10(D)->EXTTRIG ={v} _3;
  FtmBase_10(D)->POL ={v} 0;
  FtmBase_10(D)->FMS ={v} 0;
  FtmBase_10(D)->FILTER ={v} 0;
  FtmBase_10(D)->QDCTRL ={v} 0;
  FtmBase_10(D)->CONF ={v} 0;
  FtmBase_10(D)->SYNCONF ={v} 0;
  FtmBase_10(D)->INVCTRL ={v} 0;
  FtmBase_10(D)->SWOCTRL ={v} 0;
  FtmBase_10(D)->PWMLOAD ={v} 0;
  FtmBase_10(D)->HCR ={v} 0;
  ChnIndex_34 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _4 = (int) ChnIndex_7;
  FtmBase_10(D)->CONTROLS[_4].CSC ={v} 0;
  _5 = (int) ChnIndex_7;
  FtmBase_10(D)->CONTROLS[_5].CV ={v} 0;
  ChnIndex.22_6 = ChnIndex_7;
  ChnIndex_37 = ChnIndex.22_6 + 1;

  <bb 4> :
  # ChnIndex_7 = PHI <ChnIndex_34(2), ChnIndex_37(3)>
  if (ChnIndex_7 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetChnTriggerCmd (Ftm_Pwm_Ip_SetChnTriggerCmd, funcdef_no=112, decl_uid=6355, cgraph_uid=113, symbol_order=112)

Ftm_Pwm_Ip_SetChnTriggerCmd (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 Channel, boolean Enable)
{
  uint32 Value;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> :
  Value_13 = 0;
  if (Channel_14(D) <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) Channel_14(D);
  Value_17 = 16 << _1;
  goto <bb 7>; [INV]

  <bb 4> :
  if (Channel_14(D) <= 5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = (long unsigned int) Channel_14(D);
  _3 = _2 + 4294967294;
  Value_16 = 1 << _3;
  goto <bb 7>; [INV]

  <bb 6> :
  _4 = (long unsigned int) Channel_14(D);
  _5 = _4 + 4294967290;
  Value_15 = 256 << _5;

  <bb 7> :
  # Value_11 = PHI <Value_17(3), Value_16(5), Value_15(6)>
  if (Enable_18(D) != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _6 ={v} FtmBase_20(D)->EXTTRIG;
  _7 = Value_11 | _6;
  FtmBase_20(D)->EXTTRIG ={v} _7;
  goto <bb 10>; [INV]

  <bb 9> :
  _8 ={v} FtmBase_20(D)->EXTTRIG;
  _9 = ~Value_11;
  _10 = _8 & _9;
  FtmBase_20(D)->EXTTRIG ={v} _10;

  <bb 10> :
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultControlMode (Ftm_Pwm_Ip_SetFaultControlMode, funcdef_no=113, decl_uid=6360, cgraph_uid=114, symbol_order=113)

Ftm_Pwm_Ip_SetFaultControlMode (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_FaultControlModeType FaultMode)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> :
  switch (FaultMode_12(D)) <default: <L4> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 3: <L3> [INV]>

  <bb 3> :
<L0>:
  _1 ={v} FtmBase_14(D)->MODE;
  _2 = _1 & 4294967199;
  FtmBase_14(D)->MODE ={v} _2;
  goto <bb 8>; [INV]

  <bb 4> :
<L1>:
  _3 ={v} FtmBase_14(D)->MODE;
  _4 = _3 & 4294967199;
  _5 = _4 | 32;
  FtmBase_14(D)->MODE ={v} _5;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  _6 ={v} FtmBase_14(D)->MODE;
  _7 = _6 & 4294967199;
  _8 = _7 | 64;
  FtmBase_14(D)->MODE ={v} _8;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  _9 ={v} FtmBase_14(D)->MODE;
  _10 = _9 | 96;
  FtmBase_14(D)->MODE ={v} _10;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}



;; Function Ftm_Pwm_Ip_SetDualChFaultCtr (Ftm_Pwm_Ip_SetDualChFaultCtr, funcdef_no=114, decl_uid=6371, cgraph_uid=115, symbol_order=114)

Ftm_Pwm_Ip_SetDualChFaultCtr (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 ChPairId, boolean Enable)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> :
  if (Enable_13(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 ={v} FtmBase_15(D)->COMBINE;
  _2 = (long unsigned int) ChPairId_16(D);
  _3 = _2 * 8;
  _4 = 64 << _3;
  _5 = _1 | _4;
  FtmBase_15(D)->COMBINE ={v} _5;
  goto <bb 5>; [INV]

  <bb 4> :
  _6 ={v} FtmBase_15(D)->COMBINE;
  _7 = (long unsigned int) ChPairId_16(D);
  _8 = _7 * 8;
  _9 = 64 << _8;
  _10 = ~_9;
  _11 = _6 & _10;
  FtmBase_15(D)->COMBINE ={v} _11;

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultInterruptEnable (Ftm_Pwm_Ip_SetFaultInterruptEnable, funcdef_no=115, decl_uid=6375, cgraph_uid=116, symbol_order=115)

Ftm_Pwm_Ip_SetFaultInterruptEnable (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, boolean Enable)
{
  long unsigned int iftmp.27;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.27_4;
  long unsigned int iftmp.27_8;
  long unsigned int iftmp.27_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->MODE;
  _2 = _1 & 4294967167;
  if (Enable_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.27_9 = 128;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.27_8 = 0;

  <bb 5> :
  # iftmp.27_4 = PHI <iftmp.27_9(3), iftmp.27_8(4)>
  _3 = iftmp.27_4 | _2;
  FtmBase_6(D)->MODE ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultFilterValue (Ftm_Pwm_Ip_SetFaultFilterValue, funcdef_no=125, decl_uid=6409, cgraph_uid=126, symbol_order=125)

Ftm_Pwm_Ip_SetFaultFilterValue (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultFilterValue)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  _1 ={v} FtmBase_8(D)->FLTCTRL;
  _2 = _1 & 4294963455;
  _3 = (long unsigned int) FaultFilterValue_9(D);
  _4 = _3 << 8;
  _5 = _4 & 3840;
  _6 = _2 | _5;
  FtmBase_8(D)->FLTCTRL ={v} _6;
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultOutputState (Ftm_Pwm_Ip_SetFaultOutputState, funcdef_no=126, decl_uid=6413, cgraph_uid=127, symbol_order=126)

Ftm_Pwm_Ip_SetFaultOutputState (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, Ftm_Pwm_Ip_FaultOutputStateType FaultState)
{
  long unsigned int iftmp.26;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int iftmp.26_4;
  long unsigned int iftmp.26_8;
  long unsigned int iftmp.26_9;

  <bb 2> :
  _1 ={v} FtmBase_6(D)->FLTCTRL;
  _2 = _1 & 4294934527;
  if (FaultState_7(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.26_9 = 32768;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.26_8 = 0;

  <bb 5> :
  # iftmp.26_4 = PHI <iftmp.26_9(3), iftmp.26_8(4)>
  _3 = iftmp.26_4 | _2;
  FtmBase_6(D)->FLTCTRL ={v} _3;
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultPolarity (Ftm_Pwm_Ip_SetFaultPolarity, funcdef_no=127, decl_uid=6418, cgraph_uid=128, symbol_order=127)

Ftm_Pwm_Ip_SetFaultPolarity (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, Ftm_Pwm_Ip_PolarityType FaultPol)
{
  uint32 FaultInPol;
  _Bool _1;
  int _2;
  long unsigned int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> :
  _1 = FaultPol_11(D) != 0;
  _2 = (int) _1;
  FaultInPol_12 = (uint32) _2;
  _3 ={v} FtmBase_14(D)->FLTPOL;
  _4 = (int) FaultId_15(D);
  _5 = 1 << _4;
  _6 = ~_5;
  _7 = _3 & _6;
  _8 = (int) FaultId_15(D);
  _9 = FaultInPol_12 << _8;
  _10 = _7 | _9;
  FtmBase_14(D)->FLTPOL ={v} _10;
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultInputEn (Ftm_Pwm_Ip_SetFaultInputEn, funcdef_no=128, decl_uid=6424, cgraph_uid=129, symbol_order=128)

Ftm_Pwm_Ip_SetFaultInputEn (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, boolean FaultEn)
{
  uint32 FaultInEn;
  long unsigned int iftmp.30;
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int iftmp.30_9;
  long unsigned int iftmp.30_11;
  long unsigned int iftmp.30_12;

  <bb 2> :
  if (FaultEn_10(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.30_12 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.30_11 = 0;

  <bb 5> :
  # iftmp.30_9 = PHI <iftmp.30_12(3), iftmp.30_11(4)>
  FaultInEn_13 = iftmp.30_9;
  _1 ={v} FtmBase_15(D)->FLTCTRL;
  _2 = (int) FaultId_16(D);
  _3 = 1 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  _6 = (int) FaultId_16(D);
  _7 = FaultInEn_13 << _6;
  _8 = _5 | _7;
  FtmBase_15(D)->FLTCTRL ={v} _8;
  return;

}



;; Function Ftm_Pwm_Ip_SetFaultFilterEn (Ftm_Pwm_Ip_SetFaultFilterEn, funcdef_no=129, decl_uid=6430, cgraph_uid=130, symbol_order=129)

Ftm_Pwm_Ip_SetFaultFilterEn (struct Ftm_Pwm_Ip_HwAddrType * const FtmBase, uint8 FaultId, boolean FaultFilEn)
{
  uint32 FaultFilterEn;
  long unsigned int iftmp.29;
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int iftmp.29_10;
  long unsigned int iftmp.29_12;
  long unsigned int iftmp.29_13;

  <bb 2> :
  if (FaultFilEn_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.29_13 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.29_12 = 0;

  <bb 5> :
  # iftmp.29_10 = PHI <iftmp.29_13(3), iftmp.29_12(4)>
  FaultFilterEn_14 = iftmp.29_10;
  _1 ={v} FtmBase_16(D)->FLTCTRL;
  _2 = (int) FaultId_17(D);
  _3 = 16 << _2;
  _4 = ~_3;
  _5 = _1 & _4;
  _6 = (int) FaultId_17(D);
  _7 = FaultFilterEn_14 << _6;
  _8 = _7 << 4;
  _9 = _5 | _8;
  FtmBase_16(D)->FLTCTRL ={v} _9;
  return;

}



;; Function Ftm_Pwm_Ip_SetSimOutputBufferEn (Ftm_Pwm_Ip_SetSimOutputBufferEn, funcdef_no=130, decl_uid=6435, cgraph_uid=131, symbol_order=130)

Ftm_Pwm_Ip_SetSimOutputBufferEn (struct Ftm_Pwm_Ip_SimType * const SimBase, uint8 Instance)
{
  int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> :
  _1 = (int) Instance_5(D);
  _2 = 65536 << _1;
  _3 ={v} SimBase_7(D)->MISCTRL0;
  _4 = _2 | _3;
  SimBase_7(D)->MISCTRL0 ={v} _4;
  return;

}



;; Function Ftm_Pwm_Ip_CalculatePhaseShift (Ftm_Pwm_Ip_CalculatePhaseShift, funcdef_no=131, decl_uid=6597, cgraph_uid=132, symbol_order=148)

Ftm_Pwm_Ip_CalculatePhaseShift (uint8 Instance, uint16 DutyCycle, uint16 PhaseShift)
{
  uint16 CnVValue;
  uint16 D.6927;
  int _1;
  short unsigned int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  short unsigned int _8;
  int _9;
  int _10;
  uint16 _20;

  <bb 2> :
  CnVValue_12 = 0;
  _1 = (int) Instance_13(D);
  _2 = Ftm_Pwm_Ip_aPeriod[_1];
  if (DutyCycle_15(D) == _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = (int) Instance_13(D);
  CnVValue_19 = Ftm_Pwm_Ip_aPeriod[_3];
  goto <bb 7>; [INV]

  <bb 4> :
  if (DutyCycle_15(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CnVValue_18 = PhaseShift_16(D);
  goto <bb 7>; [INV]

  <bb 6> :
  _4 = (int) PhaseShift_16(D);
  _5 = (int) DutyCycle_15(D);
  _6 = _4 + _5;
  _7 = (int) Instance_13(D);
  _8 = Ftm_Pwm_Ip_aPeriod[_7];
  _9 = (int) _8;
  _10 = _6 % _9;
  CnVValue_17 = (uint16) _10;

  <bb 7> :
  # CnVValue_11 = PHI <CnVValue_19(3), CnVValue_18(5), CnVValue_17(6)>
  _20 = CnVValue_11;

  <bb 8> :
<L6>:
  return _20;

}



;; Function Ftm_Pwm_Ip_InitPair (Ftm_Pwm_Ip_InitPair, funcdef_no=132, decl_uid=6614, cgraph_uid=133, symbol_order=149)

Ftm_Pwm_Ip_InitPair (uint8 Instance, const struct Ftm_Pwm_Ip_PairCfgType * UserPairCfg)
{
  uint8 PairChId;
  uint8 MainChId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  int _5;
  short unsigned int _6;
  unsigned char _7;
  _Bool _8;
  _Bool _9;
  <unnamed type> _10;
  <unnamed type> _11;
  <unnamed type> _12;
  unsigned char _13;
  _Bool _14;
  unsigned char _15;
  _Bool _16;
  _Bool _17;

  <bb 2> :
  _1 = (int) Instance_19(D);
  FtmBase_21 = Ftm_Pwm_Ip_aFtmBase[_1];
  MainChId_22 = 0;
  PairChId_23 = 0;
  _2 = UserPairCfg_24(D)->PairId;
  MainChId_25 = _2 * 2;
  PairChId_26 = MainChId_25 + 1;
  _3 = (int) Instance_19(D);
  _4 = UserPairCfg_24(D)->PairId;
  _5 = (int) _4;
  _6 = UserPairCfg_24(D)->PhaseShiftValue;
  Ftm_Pwm_Ip_aPhaseShift[_3][_5] = _6;
  _7 = UserPairCfg_24(D)->PairId;
  _8 = UserPairCfg_24(D)->ComplementaryModeEn;
  Ftm_Pwm_Ip_SetDualChnCompCmd (FtmBase_21, _7, _8);
  _9 = UserPairCfg_24(D)->ComplementaryModeEn;
  if (_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  _10 = Ftm_Pwm_Ip_GetChnOutputPolarity (FtmBase_21, MainChId_25);
  if (_10 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _11 = UserPairCfg_24(D)->PairChPolarity;
  if (_11 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase_21, PairChId_26, 0);
  goto <bb 10>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase_21, PairChId_26, 1);
  goto <bb 10>; [INV]

  <bb 7> :
  _12 = UserPairCfg_24(D)->PairChPolarity;
  if (_12 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase_21, PairChId_26, 1);
  goto <bb 10>; [INV]

  <bb 9> :
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase_21, PairChId_26, 0);

  <bb 10> :
  Ftm_Pwm_Ip_EnablePwmChannelOutputs (FtmBase_21, PairChId_26);
  _13 = UserPairCfg_24(D)->PairId;
  _14 = UserPairCfg_24(D)->PairSyncEn;
  Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (FtmBase_21, _13, _14);
  _15 = UserPairCfg_24(D)->PairId;
  _16 = UserPairCfg_24(D)->DeadtimeEn;
  Ftm_Pwm_Ip_SetDualChnDeadtimeCmd (FtmBase_21, _15, _16);
  _17 = UserPairCfg_24(D)->PairExtTrigEn;
  Ftm_Pwm_Ip_SetChnTriggerCmd (FtmBase_21, PairChId_26, _17);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_21, 1);
  return;

}



;; Function Ftm_Pwm_Ip_DisableCmpIrq (Ftm_Pwm_Ip_DisableCmpIrq, funcdef_no=133, decl_uid=6617, cgraph_uid=134, symbol_order=150)

Ftm_Pwm_Ip_DisableCmpIrq (uint8 Instance, uint8 Channel)
{
  uint8 Index;
  Ftm_Pwm_Ip_EdgeInterruptType NotifyState;
  Ftm_Pwm_Ip_OutputStateType OutputValue;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  unsigned char _4;
  unsigned char Index.1_5;

  <bb 2> :
  _1 = (int) Instance_9(D);
  FtmBase_11 = Ftm_Pwm_Ip_aFtmBase[_1];
  OutputValue_12 = 0;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_11, Channel_13(D), 0);
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase_11, Channel_13(D));
  Index_16 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _2 = (int) Instance_9(D);
  _3 = (int) Index_7;
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  NotifyState_17 = _4 & 10;
  if (NotifyState_17 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  OutputValue_19 = 1;
  goto <bb 7>; [INV]

  <bb 5> :
  Index.1_5 = Index_7;
  Index_18 = Index.1_5 + 1;

  <bb 6> :
  # Index_7 = PHI <Index_16(2), Index_18(5)>
  if (Index_7 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # OutputValue_6 = PHI <OutputValue_19(4), OutputValue_12(6)>
  if (OutputValue_6 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase_11, 0);

  <bb 9> :
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase_11);
  return;

}



;; Function Ftm_Pwm_Ip_UpdateNotificationState (Ftm_Pwm_Ip_UpdateNotificationState, funcdef_no=134, decl_uid=6601, cgraph_uid=135, symbol_order=151)

Ftm_Pwm_Ip_UpdateNotificationState (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  int _1;
  int _2;
  unsigned char _3;
  int _4;
  int _5;
  unsigned char _6;
  int _7;
  int _8;
  <unnamed type> _9;
  int _10;
  int _11;
  unsigned char _12;
  int _13;
  int _14;
  unsigned char _15;
  int _16;
  int _17;
  unsigned char _18;
  int _19;
  int _20;
  unsigned char _21;
  int _22;
  int _23;
  <unnamed type> _24;
  int _25;
  int _26;
  unsigned char _27;
  int _28;
  int _29;
  unsigned char _30;
  int _31;
  int _32;
  unsigned char _33;
  int _34;
  int _35;
  unsigned char _36;

  <bb 2> :
  switch (EdgeNotif_40(D)) <default: <L9> [INV], case 1: <L1> [INV], case 2: <L5> [INV], case 3: <L0> [INV]>

  <bb 3> :
<L0>:
  _1 = (int) Instance_41(D);
  _2 = (int) Channel_42(D);
  _3 = Ftm_Pwm_Ip_aNotifIrq[_1][_2];
  _4 = (int) Instance_41(D);
  _5 = (int) Channel_42(D);
  _6 = _3 | 3;
  Ftm_Pwm_Ip_aNotifIrq[_4][_5] = _6;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  _7 = (int) Instance_41(D);
  _8 = (int) Channel_42(D);
  _9 = Ftm_Pwm_Ip_aPolarity[_7][_8];
  if (_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _10 = (int) Instance_41(D);
  _11 = (int) Channel_42(D);
  _12 = Ftm_Pwm_Ip_aNotifIrq[_10][_11];
  _13 = (int) Instance_41(D);
  _14 = (int) Channel_42(D);
  _15 = _12 | 2;
  Ftm_Pwm_Ip_aNotifIrq[_13][_14] = _15;
  goto <bb 7>; [INV]

  <bb 6> :
  _16 = (int) Instance_41(D);
  _17 = (int) Channel_42(D);
  _18 = Ftm_Pwm_Ip_aNotifIrq[_16][_17];
  _19 = (int) Instance_41(D);
  _20 = (int) Channel_42(D);
  _21 = _18 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_19][_20] = _21;

  <bb 7> :
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  _22 = (int) Instance_41(D);
  _23 = (int) Channel_42(D);
  _24 = Ftm_Pwm_Ip_aPolarity[_22][_23];
  if (_24 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _25 = (int) Instance_41(D);
  _26 = (int) Channel_42(D);
  _27 = Ftm_Pwm_Ip_aNotifIrq[_25][_26];
  _28 = (int) Instance_41(D);
  _29 = (int) Channel_42(D);
  _30 = _27 | 2;
  Ftm_Pwm_Ip_aNotifIrq[_28][_29] = _30;
  goto <bb 11>; [INV]

  <bb 10> :
  _31 = (int) Instance_41(D);
  _32 = (int) Channel_42(D);
  _33 = Ftm_Pwm_Ip_aNotifIrq[_31][_32];
  _34 = (int) Instance_41(D);
  _35 = (int) Channel_42(D);
  _36 = _33 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_34][_35] = _36;

  <bb 11> :
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  return;

}



;; Function Ftm_Pwm_Ip_UpdateNotificationStateCombine (Ftm_Pwm_Ip_UpdateNotificationStateCombine, funcdef_no=135, decl_uid=6605, cgraph_uid=136, symbol_order=152)

Ftm_Pwm_Ip_UpdateNotificationStateCombine (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  int _1;
  int _2;
  unsigned char _3;
  int _4;
  int _5;
  unsigned char _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned char _10;
  int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned char _14;
  int _15;
  int _16;
  <unnamed type> _17;
  int _18;
  int _19;
  unsigned char _20;
  int _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned int _25;
  unsigned int _26;
  unsigned char _27;
  int _28;
  unsigned int _29;
  unsigned int _30;
  unsigned char _31;
  int _32;
  int _33;
  <unnamed type> _34;
  int _35;
  unsigned int _36;
  unsigned int _37;
  unsigned char _38;
  int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned char _42;
  int _43;
  int _44;
  unsigned char _45;
  int _46;
  int _47;
  unsigned char _48;

  <bb 2> :
  switch (EdgeNotif_52(D)) <default: <L9> [INV], case 1: <L1> [INV], case 2: <L5> [INV], case 3: <L0> [INV]>

  <bb 3> :
<L0>:
  _1 = (int) Instance_53(D);
  _2 = (int) Channel_54(D);
  _3 = Ftm_Pwm_Ip_aNotifIrq[_1][_2];
  _4 = (int) Instance_53(D);
  _5 = (int) Channel_54(D);
  _6 = _3 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_4][_5] = _6;
  _7 = (int) Instance_53(D);
  _8 = (unsigned int) Channel_54(D);
  _9 = _8 + 1;
  _10 = Ftm_Pwm_Ip_aNotifIrq[_7][_9];
  _11 = (int) Instance_53(D);
  _12 = (unsigned int) Channel_54(D);
  _13 = _12 + 1;
  _14 = _10 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_11][_13] = _14;
  goto <bb 13>; [INV]

  <bb 4> :
<L1>:
  _15 = (int) Instance_53(D);
  _16 = (int) Channel_54(D);
  _17 = Ftm_Pwm_Ip_aPolarity[_15][_16];
  if (_17 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _18 = (int) Instance_53(D);
  _19 = (int) Channel_54(D);
  _20 = Ftm_Pwm_Ip_aNotifIrq[_18][_19];
  _21 = (int) Instance_53(D);
  _22 = (int) Channel_54(D);
  _23 = _20 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_21][_22] = _23;
  goto <bb 7>; [INV]

  <bb 6> :
  _24 = (int) Instance_53(D);
  _25 = (unsigned int) Channel_54(D);
  _26 = _25 + 1;
  _27 = Ftm_Pwm_Ip_aNotifIrq[_24][_26];
  _28 = (int) Instance_53(D);
  _29 = (unsigned int) Channel_54(D);
  _30 = _29 + 1;
  _31 = _27 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_28][_30] = _31;

  <bb 7> :
  goto <bb 13>; [INV]

  <bb 8> :
<L5>:
  _32 = (int) Instance_53(D);
  _33 = (int) Channel_54(D);
  _34 = Ftm_Pwm_Ip_aPolarity[_32][_33];
  if (_34 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _35 = (int) Instance_53(D);
  _36 = (unsigned int) Channel_54(D);
  _37 = _36 + 1;
  _38 = Ftm_Pwm_Ip_aNotifIrq[_35][_37];
  _39 = (int) Instance_53(D);
  _40 = (unsigned int) Channel_54(D);
  _41 = _40 + 1;
  _42 = _38 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_39][_41] = _42;
  goto <bb 11>; [INV]

  <bb 10> :
  _43 = (int) Instance_53(D);
  _44 = (int) Channel_54(D);
  _45 = Ftm_Pwm_Ip_aNotifIrq[_43][_44];
  _46 = (int) Instance_53(D);
  _47 = (int) Channel_54(D);
  _48 = _45 | 1;
  Ftm_Pwm_Ip_aNotifIrq[_46][_47] = _48;

  <bb 11> :
  goto <bb 13>; [INV]

  <bb 12> :
<L9>:

  <bb 13> :
  return;

}



;; Function Ftm_Pwm_Ip_ConfigureSWandHWSync (Ftm_Pwm_Ip_ConfigureSWandHWSync, funcdef_no=136, decl_uid=6608, cgraph_uid=137, symbol_order=153)

Ftm_Pwm_Ip_ConfigureSWandHWSync (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  <unnamed type> _2;
  <unnamed type> _3;
  _Bool _4;
  <unnamed type> _5;
  _Bool _6;
  <unnamed type> _7;
  _Bool _8;
  <unnamed type> _9;
  _Bool _10;
  <unnamed type> _11;
  _Bool _12;
  <unnamed type> _13;
  _Bool _14;
  <unnamed type> _15;
  _Bool _16;
  <unnamed type> _17;
  _Bool _18;
  <unnamed type> _19;
  _Bool _20;
  <unnamed type> _21;
  _Bool _22;

  <bb 2> :
  _1 = (int) Instance_24(D);
  FtmBase_26 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = SyncCfg_27(D)->SyncMode;
  switch (_2) <default: <L2> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  _3 = SyncCfg_27(D)->OutMaskSync;
  _4 = _3 != 0;
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase_26, _4);
  Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (FtmBase_26, 0);
  _5 = SyncCfg_27(D)->InverterSync;
  _6 = _5 != 0;
  Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (FtmBase_26, _6);
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase_26, 0);
  _7 = SyncCfg_27(D)->OutRegSync;
  _8 = _7 != 0;
  Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (FtmBase_26, _8);
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase_26, 0);
  _9 = SyncCfg_27(D)->InitCounterSync;
  _10 = _9 != 0;
  Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (FtmBase_26, _10);
  Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (FtmBase_26, 0);
  _11 = SyncCfg_27(D)->CounterSync;
  _12 = _11 != 0;
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase_26, _12);
  Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (FtmBase_26, 0);
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase_26, 0);
  _13 = SyncCfg_27(D)->OutMaskSync;
  _14 = _13 != 0;
  Ftm_Pwm_Ip_SetOutmaskHardwareSyncModeCmd (FtmBase_26, _14);
  Ftm_Pwm_Ip_SetInvctrlSoftwareSyncModeCmd (FtmBase_26, 0);
  _15 = SyncCfg_27(D)->InverterSync;
  _16 = _15 != 0;
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase_26, _16);
  Ftm_Pwm_Ip_SetSwoctrlSoftwareSyncModeCmd (FtmBase_26, 0);
  _17 = SyncCfg_27(D)->OutRegSync;
  _18 = _17 != 0;
  Ftm_Pwm_Ip_SetInvctrlHardwareSyncModeCmd (FtmBase_26, _18);
  Ftm_Pwm_Ip_SetModCntinCvSoftwareSyncModeCmd (FtmBase_26, 0);
  _19 = SyncCfg_27(D)->InitCounterSync;
  _20 = _19 != 0;
  Ftm_Pwm_Ip_SetModCntinCvHardwareSyncModeCmd (FtmBase_26, _20);
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase_26, 0);
  _21 = SyncCfg_27(D)->CounterSync;
  _22 = _21 != 0;
  Ftm_Pwm_Ip_SetCounterHardwareSyncModeCmd (FtmBase_26, _22);
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}



;; Function Ftm_Pwm_Ip_ConfigureSyncType (Ftm_Pwm_Ip_ConfigureSyncType, funcdef_no=137, decl_uid=6611, cgraph_uid=138, symbol_order=154)

Ftm_Pwm_Ip_ConfigureSyncType (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  <unnamed type> _2;
  _Bool _3;
  <unnamed type> _4;
  _Bool _5;
  <unnamed type> _6;
  _Bool _7;
  <unnamed type> _8;
  _Bool _9;

  <bb 2> :
  _1 = (int) Instance_10(D);
  FtmBase_12 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = SyncCfg_13(D)->OutMaskSync;
  _3 = _2 != 0;
  Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (FtmBase_12, _3);
  _4 = SyncCfg_13(D)->InverterSync;
  _5 = _4 != 0;
  Ftm_Pwm_Ip_SetInvctrlPwmSyncModeCmd (FtmBase_12, _5);
  _6 = SyncCfg_13(D)->OutRegSync;
  _7 = _6 != 0;
  Ftm_Pwm_Ip_SetSwoctrlPwmSyncModeCmd (FtmBase_12, _7);
  _8 = SyncCfg_13(D)->InitCounterSync;
  _9 = _8 != 0;
  Ftm_Pwm_Ip_SetCntinPwmSyncModeCmd (FtmBase_12, _9);
  return;

}



;; Function Ftm_Pwm_Ip_UpdateSync (Ftm_Pwm_Ip_UpdateSync, funcdef_no=138, decl_uid=6620, cgraph_uid=139, symbol_order=155)

Ftm_Pwm_Ip_UpdateSync (uint8 Instance, const struct Ftm_Pwm_Ip_SyncCfgType * SyncCfg)
{
  boolean HardwareSync;
  Ftm_Pwm_Ip_StatusType RetStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7057;
  int iftmp.17;
  int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  <unnamed type> _5;
  <unnamed type> _6;
  _Bool _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  _Bool _11;
  _Bool _12;
  _Bool _13;
  unsigned char _14;
  int iftmp.17_17;
  int iftmp.17_25;
  int iftmp.17_26;
  Ftm_Pwm_Ip_StatusType _41;

  <bb 2> :
  _1 = (int) Instance_19(D);
  FtmBase_21 = Ftm_Pwm_Ip_aFtmBase[_1];
  RetStatus_22 = 0;
  HardwareSync_23 = 0;
  _2 = SyncCfg_24(D)->HwSync0;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = SyncCfg_24(D)->HwSync1;
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _4 = SyncCfg_24(D)->HwSync2;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.17_26 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.17_25 = 0;

  <bb 7> :
  # iftmp.17_17 = PHI <iftmp.17_26(5), iftmp.17_25(6)>
  HardwareSync_27 = (boolean) iftmp.17_17;
  _5 = SyncCfg_24(D)->SyncMode;
  if (_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  if (HardwareSync_27 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  RetStatus_28 = 1;

  <bb 10> :
  # RetStatus_15 = PHI <RetStatus_22(7), RetStatus_22(8), RetStatus_28(9)>
  _6 = SyncCfg_24(D)->CounterSync;
  if (_6 == 2)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  RetStatus_29 = 1;

  <bb 12> :
  # RetStatus_16 = PHI <RetStatus_15(10), RetStatus_29(11)>
  if (RetStatus_16 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Ftm_Pwm_Ip_ConfigureSWandHWSync (Instance_19(D), SyncCfg_24(D));
  Ftm_Pwm_Ip_SetPwmSyncModeCmd (FtmBase_21, 1);
  _7 = SyncCfg_24(D)->HwSync0;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase_21, 0, _7);
  _8 = SyncCfg_24(D)->HwSync1;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase_21, 1, _8);
  _9 = SyncCfg_24(D)->HwSync2;
  Ftm_Pwm_Ip_SetHardwareSyncTriggerSrc (FtmBase_21, 2, _9);
  _10 = SyncCfg_24(D)->HwTriggerAutoClear;
  Ftm_Pwm_Ip_SetHwTriggerSyncModeCmd (FtmBase_21, _10);
  _11 = SyncCfg_24(D)->MaxLoadPoint;
  Ftm_Pwm_Ip_SetMaxLoadingCmd (FtmBase_21, _11);
  _12 = SyncCfg_24(D)->MinLoadPoint;
  Ftm_Pwm_Ip_SetMinLoadingCmd (FtmBase_21, _12);
  _13 = SyncCfg_24(D)->HalfCycleLoadPoint;
  Ftm_Pwm_Ip_SetHalfCycleCmd (FtmBase_21, _13);
  _14 = SyncCfg_24(D)->LoadPointFreq;
  Ftm_Pwm_Ip_SetLoadFreq (FtmBase_21, _14);
  Ftm_Pwm_Ip_ConfigureSyncType (Instance_19(D), SyncCfg_24(D));

  <bb 14> :
  _41 = RetStatus_16;

  <bb 15> :
<L13>:
  return _41;

}



;; Function Ftm_Pwm_Ip_ResetAndFirstConfigure (Ftm_Pwm_Ip_ResetAndFirstConfigure, funcdef_no=139, decl_uid=6688, cgraph_uid=140, symbol_order=156)

Ftm_Pwm_Ip_ResetAndFirstConfigure (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  <unnamed type> _2;
  _Bool _3;
  <unnamed type> _4;
  short unsigned int _5;
  unsigned char _6;
  unsigned char _7;
  short unsigned int _8;
  short unsigned int _9;
  unsigned char _10;
  <unnamed type> _11;

  <bb 2> :
  _1 = (int) Instance_12(D);
  FtmBase_14 = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_Reset (FtmBase_14);
  Ftm_Pwm_Ip_SetClockSource (FtmBase_14, 0);
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase_14);
  _2 = UserInstCfg_18(D)->CntMode;
  _3 = _2 != 0;
  Ftm_Pwm_Ip_SetCpwms (FtmBase_14, _3);
  Ftm_Pwm_Ip_Enable (FtmBase_14, 0);
  _4 = UserInstCfg_18(D)->DebugMode;
  Ftm_Pwm_Ip_SetBdmMode (FtmBase_14, _4);
  _5 = UserInstCfg_18(D)->DeadTimeValue;
  _6 = (unsigned char) _5;
  _7 = _6 & 63;
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase_14, _7);
  _8 = UserInstCfg_18(D)->DeadTimeValue;
  _9 = _8 >> 6;
  _10 = (unsigned char) _9;
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase_14, _10);
  _11 = UserInstCfg_18(D)->DeadTimePs;
  Ftm_Pwm_Ip_SetDeadtimePrescaler (FtmBase_14, _11);
  return;

}



;; Function Ftm_Pwm_Ip_InitInstance (Ftm_Pwm_Ip_InitInstance, funcdef_no=140, decl_uid=6693, cgraph_uid=141, symbol_order=157)

Ftm_Pwm_Ip_InitInstance (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_SimType * SimBase;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  const struct Ftm_Pwm_Ip_SyncCfgType * _2;
  int _3;
  short unsigned int _4;
  int _5;
  <unnamed type> _6;
  int _7;
  <unnamed type> _8;
  int _9;
  <unnamed type> _10;
  _Bool _11;
  int _12;
  void (*<Te3>) (void *) _13;
  int _14;
  void * _15;
  <unnamed type> _16;
  short unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  _Bool _21;
  <unnamed type> _22;

  <bb 2> :
  _1 = (int) Instance_25(D);
  FtmBase_27 = Ftm_Pwm_Ip_aFtmBase[_1];
  SimBase_28 = 1074036736B;
  Ftm_Pwm_Ip_SetSimOutputBufferEn (SimBase_28, Instance_25(D));
  Ftm_Pwm_Ip_ResetAndFirstConfigure (Instance_25(D), UserInstCfg_30(D));
  _2 = UserInstCfg_30(D)->SyncCfg;
  Ftm_Pwm_Ip_UpdateSync (Instance_25(D), _2);
  Ftm_Pwm_Ip_SetCounterInitVal (FtmBase_27, 0);
  _3 = (int) Instance_25(D);
  _4 = UserInstCfg_30(D)->PwmPeriod;
  Ftm_Pwm_Ip_aPeriod[_3] = _4;
  _5 = (int) Instance_25(D);
  _6 = UserInstCfg_30(D)->ClkSrc;
  Ftm_Pwm_Ip_aClockSource[_5] = _6;
  _7 = (int) Instance_25(D);
  _8 = UserInstCfg_30(D)->ClkPs;
  Ftm_Pwm_Ip_aClockPrescaler[_7] = _8;
  _9 = (int) Instance_25(D);
  _10 = UserInstCfg_30(D)->AlternateClkPs;
  Ftm_Pwm_Ip_aAlternateClockPrescaler[_9] = _10;
  _11 = UserInstCfg_30(D)->OverflowIrqEn;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _12 = (int) Instance_25(D);
  _13 = UserInstCfg_30(D)->OverflowCb.FunctionCallback;
  Ftm_Pwm_Ip_pOverflowIrqCallback[_12].FunctionCallback = _13;
  _14 = (int) Instance_25(D);
  _15 = UserInstCfg_30(D)->OverflowCb.CbParam;
  Ftm_Pwm_Ip_pOverflowIrqCallback[_14].CbParam = _15;

  <bb 4> :
  _16 = UserInstCfg_30(D)->CntMode;
  if (_16 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _17 = UserInstCfg_30(D)->PwmPeriod;
  _18 = _17 >> 1;
  Ftm_Pwm_Ip_SetMod (FtmBase_27, _18);
  goto <bb 7>; [INV]

  <bb 6> :
  _19 = UserInstCfg_30(D)->PwmPeriod;
  _20 = _19 + 65535;
  Ftm_Pwm_Ip_SetMod (FtmBase_27, _20);

  <bb 7> :
  _21 = UserInstCfg_30(D)->InitTriggerEn;
  Ftm_Pwm_Ip_SetInitTriggerCmd (FtmBase_27, _21);
  _22 = UserInstCfg_30(D)->InitTrigMode;
  Ftm_Pwm_Ip_SetInitTriggerMode (FtmBase_27, _22);
  return;

}



;; Function Ftm_Pwm_Ip_InitInstanceStart (Ftm_Pwm_Ip_InitInstanceStart, funcdef_no=141, decl_uid=6699, cgraph_uid=142, symbol_order=158)

Ftm_Pwm_Ip_InitInstanceStart (uint8 Instance, const struct Ftm_Pwm_Ip_InstanceCfgType * UserInstCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  unsigned char _2;
  <unnamed type> _3;
  <unnamed type> _4;
  _Bool _5;
  <unnamed type> _6;
  <unnamed type> _7;

  <bb 2> :
  _1 = (int) Instance_9(D);
  FtmBase_11 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = UserInstCfg_12(D)->FaultInFilter;
  Ftm_Pwm_Ip_SetFaultFilterValue (FtmBase_11, _2);
  _3 = UserInstCfg_12(D)->FaultOutState;
  Ftm_Pwm_Ip_SetFaultOutputState (FtmBase_11, _3);
  _4 = UserInstCfg_12(D)->FaultCtrMode;
  Ftm_Pwm_Ip_SetFaultControlMode (FtmBase_11, _4);
  _5 = UserInstCfg_12(D)->FaultIrqEn;
  if (_5 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetFaultInterruptEnable (FtmBase_11, 1);

  <bb 4> :
  Ftm_Pwm_Ip_Enable (FtmBase_11, 1);
  Ftm_Pwm_Ip_SetPwmSyncMode (FtmBase_11, 1);
  _6 = UserInstCfg_12(D)->ClkPs;
  Ftm_Pwm_Ip_SetClockPs (FtmBase_11, _6);
  _7 = UserInstCfg_12(D)->ClkSrc;
  Ftm_Pwm_Ip_SetClockSource (FtmBase_11, _7);
  return;

}



;; Function Ftm_Pwm_Ip_ConfigurePairedChannel (Ftm_Pwm_Ip_ConfigurePairedChannel, funcdef_no=142, decl_uid=6704, cgraph_uid=143, symbol_order=159)

Ftm_Pwm_Ip_ConfigurePairedChannel (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  uint8 ChPairId;
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  <unnamed type> _2;
  <unnamed type> _3;
  unsigned char _4;
  unsigned char _5;
  <unnamed type> _6;
  <unnamed type> _7;
  <unnamed type> _8;
  unsigned char _9;
  unsigned char _10;
  <unnamed type> _11;
  const struct Ftm_Pwm_Ip_PairCfgType * _12;
  const struct Ftm_Pwm_Ip_PairCfgType * _13;

  <bb 2> :
  _1 = (int) Instance_16(D);
  FtmBase_18 = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId_19 = 0;
  ChPairId_20 = 0;
  ChannelId_22 = UserChCfg_21(D)->ChannelId;
  ChPairId_23 = ChannelId_22 >> 1;
  Ftm_Pwm_Ip_SetDualChnPwmSyncCmd (FtmBase_18, ChPairId_23, 1);
  Ftm_Pwm_Ip_SetDualChFaultCtr (FtmBase_18, ChPairId_23, 1);
  _2 = UserChCfg_21(D)->ChannelMode;
  if (_2 == 34)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = UserChCfg_21(D)->ChannelMode;
  if (_3 == 33)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = ChPairId_23 * 2;
  _5 = _4 + 1;
  _6 = UserChCfg_21(D)->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase_18, _5, _6);
  Ftm_Pwm_Ip_SetDualChnCombineCmd (FtmBase_18, ChPairId_23, 1);
  goto <bb 8>; [INV]

  <bb 5> :
  _7 = UserChCfg_21(D)->ChannelMode;
  if (_7 == 98)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _8 = UserChCfg_21(D)->ChannelMode;
  if (_8 == 97)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _9 = ChPairId_23 * 2;
  _10 = _9 + 1;
  _11 = UserChCfg_21(D)->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase_18, _10, _11);
  Ftm_Pwm_Ip_SetDualChnCombineCmd (FtmBase_18, ChPairId_23, 1);
  Ftm_Pwm_Ip_SetDualChnMCombineCmd (FtmBase_18, ChPairId_23, 1);

  <bb 8> :
  _12 = UserChCfg_21(D)->PairCfg;
  if (_12 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _13 = UserChCfg_21(D)->PairCfg;
  Ftm_Pwm_Ip_InitPair (Instance_16(D), _13);

  <bb 10> :
  return;

}



;; Function Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl (Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl, funcdef_no=143, decl_uid=6711, cgraph_uid=144, symbol_order=160)

Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  unsigned char _2;
  _Bool _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  _Bool _7;
  unsigned char _8;
  _Bool _9;

  <bb 2> :
  _1 = (int) Instance_10(D);
  FtmBase_12 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = UserChCfg_13(D)->ChannelId;
  _3 = UserChCfg_13(D)->ExtTrigEn;
  Ftm_Pwm_Ip_SetChnTriggerCmd (FtmBase_12, _2, _3);
  _4 = UserChCfg_13(D)->ChannelId;
  _5 = UserChCfg_13(D)->ChMatchLoadEn;
  Ftm_Pwm_Ip_SetPwmLoadChnSelCmd (FtmBase_12, _4, _5);
  _6 = UserChCfg_13(D)->ChannelId;
  _7 = UserChCfg_13(D)->SwControlEn;
  Ftm_Pwm_Ip_SetChnSoftwareCtrlCmd (FtmBase_12, _6, _7);
  _8 = UserChCfg_13(D)->ChannelId;
  _9 = UserChCfg_13(D)->SwControlVal;
  Ftm_Pwm_Ip_SetChnSoftwareCtrlVal (FtmBase_12, _8, _9);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_12, 1);
  return;

}



;; Function Ftm_Pwm_Ip_InitChannel (Ftm_Pwm_Ip_InitChannel, funcdef_no=144, decl_uid=6716, cgraph_uid=145, symbol_order=161)

Ftm_Pwm_Ip_InitChannel (uint8 Instance, const struct Ftm_Pwm_Ip_ChannelConfigType * UserChCfg)
{
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  short unsigned int _4;
  int _5;
  int _6;
  <unnamed type> _7;
  int _8;
  int _9;
  <unnamed type> _10;
  <unnamed type> _11;
  <unnamed type> _12;
  <unnamed type> _13;
  <unnamed type> _14;
  int _15;
  int _16;
  short unsigned int _17;
  _Bool _18;
  int _19;
  int _20;
  _Bool _21;
  int _22;
  int _23;
  void (*<Te3>) (void *) _24;
  int _25;
  int _26;
  void * _27;

  <bb 2> :
  _1 = (int) Instance_30(D);
  FtmBase_32 = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId_33 = 0;
  ChannelId_35 = UserChCfg_34(D)->ChannelId;
  _2 = (int) Instance_30(D);
  _3 = (int) ChannelId_35;
  _4 = UserChCfg_34(D)->DutyCycle;
  Ftm_Pwm_Ip_aDutyCycle[_2][_3] = _4;
  _5 = (int) Instance_30(D);
  _6 = (int) ChannelId_35;
  _7 = UserChCfg_34(D)->InitOut;
  Ftm_Pwm_Ip_aIdleState[_5][_6] = _7;
  _8 = (int) Instance_30(D);
  _9 = (int) ChannelId_35;
  _10 = UserChCfg_34(D)->Polarity;
  Ftm_Pwm_Ip_aPolarity[_8][_9] = _10;
  _11 = UserChCfg_34(D)->Polarity;
  Ftm_Pwm_Ip_SetChnOutputPolarityCmd (FtmBase_32, ChannelId_35, _11);
  _12 = UserChCfg_34(D)->InitOut;
  Ftm_Pwm_Ip_SetChnOutputInitStateCmd (FtmBase_32, ChannelId_35, _12);
  _13 = UserChCfg_34(D)->ChannelMode;
  Ftm_Pwm_Ip_SetChnEdgeLevel (FtmBase_32, ChannelId_35, _13);
  _14 = UserChCfg_34(D)->ChannelMode;
  Ftm_Pwm_Ip_SetChnMSBAMode (FtmBase_32, ChannelId_35, _14);
  Ftm_Pwm_Ip_ConfigurePairedChannel (Instance_30(D), UserChCfg_34(D));
  _15 = (int) Instance_30(D);
  _16 = (int) ChannelId_35;
  _17 = Ftm_Pwm_Ip_aDutyCycle[_15][_16];
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (Instance_30(D), ChannelId_35, _17, 1);
  Ftm_Pwm_Ip_SetChnTriggerAndSoftwareCtrl (Instance_30(D), UserChCfg_34(D));
  _18 = UserChCfg_34(D)->ChOutputEn;
  if (_18 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_EnablePwmChannelOutputs (FtmBase_32, ChannelId_35);

  <bb 4> :
  _19 = (int) Instance_30(D);
  _20 = (int) ChannelId_35;
  Ftm_Pwm_Ip_aChannelState[_19][_20] = 1;
  _21 = UserChCfg_34(D)->ChIrqEn;
  if (_21 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _22 = (int) Instance_30(D);
  _23 = (int) ChannelId_35;
  _24 = UserChCfg_34(D)->ChannelCb.FunctionCallback;
  Ftm_Pwm_Ip_aChIrqCallbacks[_22][_23].FunctionCallback = _24;
  _25 = (int) Instance_30(D);
  _26 = (int) ChannelId_35;
  _27 = UserChCfg_34(D)->ChannelCb.CbParam;
  Ftm_Pwm_Ip_aChIrqCallbacks[_25][_26].CbParam = _27;

  <bb 6> :
  return;

}



;; Function Ftm_Pwm_Ip_DeInitInstance (Ftm_Pwm_Ip_DeInitInstance, funcdef_no=145, decl_uid=6721, cgraph_uid=146, symbol_order=162)

Ftm_Pwm_Ip_DeInitInstance (uint8 Instance)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_SetClockSource (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetDeadtimePrescaler (FtmBase_4, 1);
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetBdmMode (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetMod (FtmBase_4, 0);
  Ftm_Pwm_Ip_SetCounter (FtmBase_4, 0);
  return;

}



;; Function Ftm_Pwm_Ip_DeInitChannel (Ftm_Pwm_Ip_DeInitChannel, funcdef_no=146, decl_uid=6726, cgraph_uid=147, symbol_order=163)

Ftm_Pwm_Ip_DeInitChannel (uint8 Instance, uint8 Channel)
{
  uint8 PairId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  <unnamed type> _4;
  int _5;
  unsigned int _6;
  unsigned int _7;
  int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;

  <bb 2> :
  _1 = (int) Instance_12(D);
  FtmBase_14 = Ftm_Pwm_Ip_aFtmBase[_1];
  PairId_16 = Channel_15(D) >> 1;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance_12(D), Channel_15(D));
  _2 = (int) Instance_12(D);
  _3 = (int) Channel_15(D);
  _4 = Ftm_Pwm_Ip_aIdleState[_2][_3];
  Ftm_Pwm_Ip_SwOutputControl (Instance_12(D), Channel_15(D), _4, 1);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_14, 0);
  Ftm_Pwm_Ip_SetOutmaskPwmSyncModeCmd (FtmBase_14, 1);
  Ftm_Pwm_Ip_SetOutmaskSoftwareSyncModeCmd (FtmBase_14, 1);
  Ftm_Pwm_Ip_SetChnOutputMask (FtmBase_14, Channel_15(D), 0);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_14, 1);
  _5 = (int) Instance_12(D);
  _6 = (unsigned int) PairId_16;
  _7 = _6 * 2;
  Ftm_Pwm_Ip_aNotifIrq[_5][_7] = 0;
  _8 = (int) Instance_12(D);
  _9 = (unsigned int) PairId_16;
  _10 = _9 * 2;
  _11 = _10 + 1;
  Ftm_Pwm_Ip_aNotifIrq[_8][_11] = 0;
  return;

}



;; Function Ftm_Pwm_Ip_InitChFault (Ftm_Pwm_Ip_InitChFault, funcdef_no=147, decl_uid=6732, cgraph_uid=148, symbol_order=164)

Ftm_Pwm_Ip_InitChFault (uint8 Instance, const struct Ftm_Pwm_Ip_FaultChCfgType * FaultChCfg)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  unsigned char _2;
  <unnamed type> _3;
  unsigned char _4;
  _Bool _5;
  unsigned char _6;
  int _7;
  unsigned char _8;
  int _9;
  void (*<T4e5>) (void) _10;

  <bb 2> :
  _1 = (int) Instance_11(D);
  FtmBase_13 = Ftm_Pwm_Ip_aFtmBase[_1];
  _2 = FaultChCfg_14(D)->FaultId;
  _3 = FaultChCfg_14(D)->FaultPol;
  Ftm_Pwm_Ip_SetFaultPolarity (FtmBase_13, _2, _3);
  _4 = FaultChCfg_14(D)->FaultId;
  _5 = FaultChCfg_14(D)->FaultFilEn;
  Ftm_Pwm_Ip_SetFaultFilterEn (FtmBase_13, _4, _5);
  _6 = FaultChCfg_14(D)->FaultId;
  Ftm_Pwm_Ip_SetFaultInputEn (FtmBase_13, _6, 1);
  _7 = (int) Instance_11(D);
  _8 = FaultChCfg_14(D)->FaultId;
  _9 = (int) _8;
  _10 = FaultChCfg_14(D)->FaultCb;
  Ftm_Pwm_Ip_pFaultIrqCallback[_7][_9] = _10;
  return;

}



;; Function Ftm_Pwm_Ip_Init (Ftm_Pwm_Ip_Init, funcdef_no=148, decl_uid=5790, cgraph_uid=149, symbol_order=165)

Ftm_Pwm_Ip_Init (uint8 Instance, const struct Ftm_Pwm_Ip_UserCfgType * UserCfg)
{
  uint8 Index;
  const struct Ftm_Pwm_Ip_InstanceCfgType * _1;
  const struct Ftm_Pwm_Ip_ChannelConfigType * const * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Ftm_Pwm_Ip_ChannelConfigType * const * _5;
  const struct Ftm_Pwm_Ip_ChannelConfigType * _6;
  unsigned char Index.31_7;
  unsigned char _8;
  unsigned char _9;
  const struct Ftm_Pwm_Ip_FaultChCfgType * const * _10;
  unsigned int _11;
  unsigned int _12;
  const struct Ftm_Pwm_Ip_FaultChCfgType * const * _13;
  const struct Ftm_Pwm_Ip_FaultChCfgType * _14;
  unsigned char Index.32_15;
  unsigned char _16;
  const struct Ftm_Pwm_Ip_InstanceCfgType * _17;

  <bb 2> :
  Index_23 = 0;
  Ftm_Pwm_Ip_u8FaultCheck = 0;
  _1 = UserCfg_26(D)->InstanceCfg;
  Ftm_Pwm_Ip_InitInstance (Instance_27(D), _1);
  Index_29 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = UserCfg_26(D)->ConfiguredChArray;
  _3 = (unsigned int) Index_18;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = *_5;
  Ftm_Pwm_Ip_InitChannel (Instance_27(D), _6);
  Index.31_7 = Index_18;
  Index_35 = Index.31_7 + 1;

  <bb 4> :
  # Index_18 = PHI <Index_29(2), Index_35(3)>
  _8 = UserCfg_26(D)->NoOfConfiguredCh;
  if (Index_18 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = UserCfg_26(D)->NoOfFaultCfg;
  if (_9 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  Index_30 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _10 = UserCfg_26(D)->ConfiguredFaultArray;
  _11 = (unsigned int) Index_19;
  _12 = _11 * 4;
  _13 = _10 + _12;
  _14 = *_13;
  Ftm_Pwm_Ip_InitChFault (Instance_27(D), _14);
  Index.32_15 = Index_19;
  Index_32 = Index.32_15 + 1;

  <bb 8> :
  # Index_19 = PHI <Index_30(6), Index_32(7)>
  _16 = UserCfg_26(D)->NoOfFaultCfg;
  if (Index_19 < _16)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _17 = UserCfg_26(D)->InstanceCfg;
  Ftm_Pwm_Ip_InitInstanceStart (Instance_27(D), _17);
  return;

}



;; Function Ftm_Pwm_Ip_DeInit (Ftm_Pwm_Ip_DeInit, funcdef_no=149, decl_uid=5792, cgraph_uid=150, symbol_order=166)

Ftm_Pwm_Ip_DeInit (uint8 Instance)
{
  uint8 ChannelId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  <unnamed type> _4;
  unsigned char ChannelId.33_5;

  <bb 2> :
  _1 = (int) Instance_9(D);
  FtmBase_11 = Ftm_Pwm_Ip_aFtmBase[_1];
  ChannelId_12 = 0;
  Ftm_Pwm_Ip_Reset (FtmBase_11);
  ChannelId_14 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _2 = (int) Instance_9(D);
  _3 = (int) ChannelId_6;
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Ftm_Pwm_Ip_DeInitChannel (Instance_9(D), ChannelId_6);

  <bb 5> :
  ChannelId.33_5 = ChannelId_6;
  ChannelId_17 = ChannelId.33_5 + 1;

  <bb 6> :
  # ChannelId_6 = PHI <ChannelId_14(2), ChannelId_17(5)>
  if (ChannelId_6 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_DeInitInstance (Instance_9(D));
  return;

}



;; Function Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel, funcdef_no=150, decl_uid=5837, cgraph_uid=151, symbol_order=167)

Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (uint8 Instance, uint8 Channel, uint16 DutyCycle, boolean SoftwareTrigger)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint8 PairId;
  uint16 FirstEdge;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  <unnamed type> _6;
  int _7;
  int _8;
  int _9;
  int _10;
  short unsigned int _11;
  int _12;
  int _13;
  short unsigned int _14;
  int _15;
  int _16;
  short unsigned int _17;

  <bb 2> :
  _1 = (int) Instance_20(D);
  FtmBase_22 = Ftm_Pwm_Ip_aFtmBase[_1];
  FirstEdge_24 = DutyCycle_23(D);
  PairId_26 = Channel_25(D) >> 1;
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_00 ();
  _2 = (int) Instance_20(D);
  _3 = (int) Channel_25(D);
  Ftm_Pwm_Ip_aDutyCycle[_2][_3] = DutyCycle_23(D);
  ChMode_30 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_22, Channel_25(D));
  _4 = (int) Instance_20(D);
  _5 = (int) Channel_25(D);
  _6 = Ftm_Pwm_Ip_aChannelState[_4][_5];
  if (_6 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _7 = (int) Instance_20(D);
  _8 = (int) Channel_25(D);
  Ftm_Pwm_Ip_aChannelState[_7][_8] = 1;
  Ftm_Pwm_Ip_SwOutputControl (Instance_20(D), Channel_25(D), 0, 0);

  <bb 4> :
  if (ChMode_30 == 10)
    goto <bb 8>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode_30 == 9)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (ChMode_30 == 18)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (ChMode_30 == 17)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance_20(D), Channel_25(D), FirstEdge_24, 0, SoftwareTrigger_35(D));
  goto <bb 16>; [INV]

  <bb 9> :
  if (ChMode_30 == 34)
    goto <bb 13>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (ChMode_30 == 98)
    goto <bb 13>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (ChMode_30 == 97)
    goto <bb 13>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (ChMode_30 == 33)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 13> :
  _9 = (int) Instance_20(D);
  _10 = (int) PairId_26;
  _11 = Ftm_Pwm_Ip_aPhaseShift[_9][_10];
  if (_11 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance_20(D), Channel_25(D), 0, FirstEdge_24, SoftwareTrigger_35(D));
  goto <bb 16>; [INV]

  <bb 15> :
  _12 = (int) Instance_20(D);
  _13 = (int) PairId_26;
  _14 = Ftm_Pwm_Ip_aPhaseShift[_12][_13];
  FirstEdge_34 = Ftm_Pwm_Ip_CalculatePhaseShift (Instance_20(D), DutyCycle_23(D), _14);
  _15 = (int) Instance_20(D);
  _16 = (int) PairId_26;
  _17 = Ftm_Pwm_Ip_aPhaseShift[_15][_16];
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance_20(D), Channel_25(D), _17, FirstEdge_34, SoftwareTrigger_35(D));

  <bb 16> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_00 ();
  return;

}



;; Function Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty (Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty, funcdef_no=151, decl_uid=5843, cgraph_uid=152, symbol_order=168)

Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty (uint8 Instance, uint8 Channel, uint16 Period, uint16 DutyCycle, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  uint16 TempDutyCycle;
  int _1;
  int _2;
  int _3;
  <unnamed type> _4;
  int _5;
  int _6;
  long unsigned int _7;
  int _8;

  <bb 2> :
  TempDutyCycle_11 = 0;
  _1 = (int) Instance_12(D);
  FtmBase_14 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_01 ();
  _2 = (int) Instance_12(D);
  _3 = (int) Channel_16(D);
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = (int) Instance_12(D);
  _6 = (int) Channel_16(D);
  Ftm_Pwm_Ip_aChannelState[_5][_6] = 1;
  Ftm_Pwm_Ip_SwOutputControl (Instance_12(D), Channel_16(D), 0, 0);

  <bb 4> :
  _7 = (long unsigned int) Period_19(D);
  Ftm_Pwm_Ip_UpdatePwmPeriod (Instance_12(D), _7, 0);
  _8 = (int) Instance_12(D);
  Ftm_Pwm_Ip_aPeriod[_8] = Period_19(D);
  if (Period_19(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  TempDutyCycle_24 = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  TempDutyCycle_23 = DutyCycle_22(D);

  <bb 7> :
  # TempDutyCycle_9 = PHI <TempDutyCycle_24(5), TempDutyCycle_23(6)>
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (Instance_12(D), Channel_16(D), TempDutyCycle_9, SoftwareTrigger_25(D));
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_14, SoftwareTrigger_25(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_01 ();
  return;

}



;; Function Ftm_Pwm_Ip_SwOutputControl (Ftm_Pwm_Ip_SwOutputControl, funcdef_no=152, decl_uid=5813, cgraph_uid=153, symbol_order=169)

Ftm_Pwm_Ip_SwOutputControl (uint8 Instance, uint8 Channel, Ftm_Pwm_Ip_OutputStateType OutputState, boolean ActiveState)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  uint16 TempPolVal;
  uint16 SwoCtrlBitMask;
  uint16 ChannelMask;
  uint16 SwoCtrlRegVal;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  <unnamed type> _4;
  int _5;
  int _6;
  short unsigned int _7;
  long unsigned int _8;
  int _9;
  long unsigned int _10;
  short unsigned int _11;
  long unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  long unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  long unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  long unsigned int _21;
  short unsigned int _22;
  long unsigned int _23;
  int _24;
  long unsigned int _25;
  short unsigned int _26;
  long unsigned int _27;
  int _28;
  long unsigned int _29;
  short unsigned int _30;
  short unsigned int _31;

  <bb 2> :
  _1 = (int) Instance_36(D);
  FtmBase_38 = Ftm_Pwm_Ip_aFtmBase[_1];
  SwoCtrlRegVal_39 = 0;
  ChannelMask_40 = 0;
  SwoCtrlBitMask_41 = 0;
  TempPolVal_42 = 0;
  ChMode_45 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_38, Channel_43(D));
  _2 = (int) Instance_36(D);
  _3 = (int) Channel_43(D);
  _4 = Ftm_Pwm_Ip_aChannelState[_2][_3];
  if (_4 == 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = (int) Instance_36(D);
  _6 = (int) Channel_43(D);
  Ftm_Pwm_Ip_aDutyCycle[_5][_6] = 0;

  <bb 4> :
  SwoCtrlRegVal_48 = Ftm_Pwm_Ip_GetSoftwareOutputControl (FtmBase_38);
  if (ChMode_45 == 34)
    goto <bb 8>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode_45 == 98)
    goto <bb 8>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (ChMode_45 == 97)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (ChMode_45 == 33)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  ChannelMask_50 = 3;
  goto <bb 10>; [INV]

  <bb 9> :
  ChannelMask_49 = 1;

  <bb 10> :
  # ChannelMask_33 = PHI <ChannelMask_50(8), ChannelMask_49(9)>
  _7 = Ftm_Pwm_Ip_GetPolInstance (FtmBase_38);
  _8 = (long unsigned int) ChannelMask_33;
  _9 = (int) Channel_43(D);
  _10 = _8 << _9;
  _11 = (short unsigned int) _10;
  TempPolVal_52 = _7 & _11;
  TempPolVal_53 = TempPolVal_52 << 8;
  _12 = (long unsigned int) ChannelMask_33;
  _13 = (unsigned int) Channel_43(D);
  _14 = _13 + 8;
  _15 = _12 << _14;
  _16 = (short unsigned int) _15;
  _17 = ~_16;
  SwoCtrlRegVal_54 = SwoCtrlRegVal_48 & _17;
  if (ActiveState_55(D) != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  if (OutputState_57(D) == 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _18 = (long unsigned int) ChannelMask_33;
  _19 = (unsigned int) Channel_43(D);
  _20 = _19 + 8;
  _21 = _18 << _20;
  SwoCtrlBitMask_59 = (uint16) _21;
  goto <bb 14>; [INV]

  <bb 13> :
  SwoCtrlBitMask_58 = 0;

  <bb 14> :
  # SwoCtrlBitMask_34 = PHI <SwoCtrlBitMask_59(12), SwoCtrlBitMask_58(13)>
  _22 = SwoCtrlBitMask_34 ^ TempPolVal_53;
  SwoCtrlRegVal_60 = SwoCtrlRegVal_54 | _22;
  _23 = (long unsigned int) ChannelMask_33;
  _24 = (int) Channel_43(D);
  _25 = _23 << _24;
  _26 = (short unsigned int) _25;
  SwoCtrlRegVal_61 = SwoCtrlRegVal_60 | _26;
  goto <bb 16>; [INV]

  <bb 15> :
  _27 = (long unsigned int) ChannelMask_33;
  _28 = (int) Channel_43(D);
  _29 = _27 << _28;
  _30 = (short unsigned int) _29;
  _31 = ~_30;
  SwoCtrlRegVal_56 = SwoCtrlRegVal_54 & _31;

  <bb 16> :
  # SwoCtrlRegVal_32 = PHI <SwoCtrlRegVal_61(14), SwoCtrlRegVal_56(15)>
  Ftm_Pwm_Ip_SoftwareOutputControl (FtmBase_38, SwoCtrlRegVal_32);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_38, 1);
  return;

}



;; Function Ftm_Pwm_Ip_UpdatePwmChannel (Ftm_Pwm_Ip_UpdatePwmChannel, funcdef_no=153, decl_uid=5798, cgraph_uid=154, symbol_order=170)

Ftm_Pwm_Ip_UpdatePwmChannel (uint8 Instance, uint8 Channel, uint16 FirstEdge, uint16 SecondEdge, boolean SoftwareTrigger)
{
  uint8 ChPairId;
  uint16 FtmPeriod;
  uint16 HwSecondEdge;
  uint16 HwFirstEdge;
  Ftm_Pwm_Ip_StatusType RetStatus;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7237;
  int _1;
  int _2;
  _Bool _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  <unnamed type> _7;
  short unsigned int _8;
  Ftm_Pwm_Ip_StatusType _37;

  <bb 2> :
  _1 = (int) Instance_14(D);
  FtmBase_16 = Ftm_Pwm_Ip_aFtmBase[_1];
  RetStatus_17 = 0;
  HwFirstEdge_18 = 0;
  HwSecondEdge_19 = 0;
  FtmPeriod_20 = 0;
  ChPairId_22 = Channel_21(D) >> 1;
  _2 = (int) Instance_14(D);
  FtmPeriod_23 = Ftm_Pwm_Ip_aPeriod[_2];
  if (FirstEdge_24(D) <= FtmPeriod_23)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  if (SecondEdge_25(D) <= FtmPeriod_23)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (FtmPeriod_23 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  HwFirstEdge_27 = FirstEdge_24(D);
  HwSecondEdge_28 = SecondEdge_25(D);
  goto <bb 7>; [INV]

  <bb 6> :
  RetStatus_26 = 1;

  <bb 7> :
  # RetStatus_9 = PHI <RetStatus_17(5), RetStatus_26(6)>
  # HwFirstEdge_10 = PHI <HwFirstEdge_27(5), HwFirstEdge_18(6)>
  # HwSecondEdge_11 = PHI <HwSecondEdge_28(5), HwSecondEdge_19(6)>
  if (RetStatus_9 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  _3 = Ftm_Pwm_Ip_GetDualChnCombineCmd (FtmBase_16, ChPairId_22);
  if (_3 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _4 = ChPairId_22 * 2;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_16, _4, HwFirstEdge_10);
  _5 = ChPairId_22 * 2;
  _6 = _5 + 1;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_16, _6, HwSecondEdge_11);
  goto <bb 13>; [INV]

  <bb 10> :
  _7 = Ftm_Pwm_Ip_GetCpwms (FtmBase_16);
  if (_7 == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _8 = HwFirstEdge_10 >> 1;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_16, Channel_21(D), _8);
  goto <bb 13>; [INV]

  <bb 12> :
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_16, Channel_21(D), HwFirstEdge_10);

  <bb 13> :
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_16, SoftwareTrigger_35(D));

  <bb 14> :
  _37 = RetStatus_9;

  <bb 15> :
<L13>:
  return _37;

}



;; Function Ftm_Pwm_Ip_UpdatePwmPeriod (Ftm_Pwm_Ip_UpdatePwmPeriod, funcdef_no=154, decl_uid=5808, cgraph_uid=155, symbol_order=171)

Ftm_Pwm_Ip_UpdatePwmPeriod (uint8 Instance, uint32 NewValue, boolean SoftwareTrigger)
{
  uint32 FtmPeriod;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  Ftm_Pwm_Ip_StatusType D.7244;
  int _1;
  int _2;
  short unsigned int _3;
  <unnamed type> _4;
  short unsigned int _5;
  Ftm_Pwm_Ip_StatusType _20;

  <bb 2> :
  _1 = (int) Instance_7(D);
  FtmBase_9 = Ftm_Pwm_Ip_aFtmBase[_1];
  FtmPeriod_10 = 0;
  FtmPeriod_12 = NewValue_11(D);
  _2 = (int) Instance_7(D);
  _3 = (short unsigned int) NewValue_11(D);
  Ftm_Pwm_Ip_aPeriod[_2] = _3;
  _4 = Ftm_Pwm_Ip_GetCpwms (FtmBase_9);
  if (_4 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  FtmPeriod_16 = FtmPeriod_12 >> 1;
  goto <bb 5>; [INV]

  <bb 4> :
  FtmPeriod_15 = FtmPeriod_12 + 4294967295;

  <bb 5> :
  # FtmPeriod_6 = PHI <FtmPeriod_16(3), FtmPeriod_15(4)>
  _5 = (short unsigned int) FtmPeriod_6;
  Ftm_Pwm_Ip_SetMod (FtmBase_9, _5);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_9, SoftwareTrigger_18(D));
  _20 = 0;

  <bb 6> :
<L3>:
  return _20;

}



;; Function Ftm_Pwm_Ip_GetOutputState (Ftm_Pwm_Ip_GetOutputState, funcdef_no=155, decl_uid=5846, cgraph_uid=156, symbol_order=172)

Ftm_Pwm_Ip_GetOutputState (uint8 Instance, uint8 Channel)
{
  Ftm_Pwm_Ip_OutputStateType OutputValue;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  Ftm_Pwm_Ip_OutputStateType D.7249;
  int _1;
  _Bool _2;
  Ftm_Pwm_Ip_OutputStateType _13;

  <bb 2> :
  _1 = (int) Instance_4(D);
  FtmBase_6 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_03 ();
  _2 = Ftm_Pwm_Ip_GetChOutputValue (FtmBase_6, Channel_8(D));
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  OutputValue_11 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  OutputValue_10 = 0;

  <bb 5> :
  # OutputValue_3 = PHI <OutputValue_11(3), OutputValue_10(4)>
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_03 ();
  _13 = OutputValue_3;

  <bb 6> :
<L3>:
  return _13;

}



;; Function Ftm_Pwm_Ip_DisableNotification (Ftm_Pwm_Ip_DisableNotification, funcdef_no=156, decl_uid=5818, cgraph_uid=157, symbol_order=173)

Ftm_Pwm_Ip_DisableNotification (uint8 Instance, uint8 Channel)
{
  uint8 PairChId;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  const struct Ftm_Pwm_Ip_HwAddrType * const FtmBase;
  int _1;
  int _2;
  int _3;
  int _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  unsigned char _9;
  int _10;
  unsigned char _11;
  unsigned char _12;
  unsigned char _13;

  <bb 2> :
  _1 = (int) Instance_15(D);
  FtmBase_17 = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId_19 = Channel_18(D) >> 1;
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_04 ();
  ChMode_22 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_17, Channel_18(D));
  _2 = (int) Instance_15(D);
  _3 = (int) Channel_18(D);
  Ftm_Pwm_Ip_aNotifIrq[_2][_3] = 0;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance_15(D), Channel_18(D));
  if (ChMode_22 == 34)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ChMode_22 == 98)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (ChMode_22 == 97)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode_22 == 33)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = (int) Instance_15(D);
  _5 = PairChId_19 * 2;
  _6 = (int) _5;
  Ftm_Pwm_Ip_aNotifIrq[_4][_6] = 0;
  _7 = (int) Instance_15(D);
  _8 = PairChId_19 * 2;
  _9 = _8 + 1;
  _10 = (int) _9;
  Ftm_Pwm_Ip_aNotifIrq[_7][_10] = 0;
  _11 = PairChId_19 * 2;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance_15(D), _11);
  _12 = PairChId_19 * 2;
  _13 = _12 + 1;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance_15(D), _13);

  <bb 7> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_04 ();
  return;

}



;; Function Ftm_Pwm_Ip_SetNormalNotificationCase (Ftm_Pwm_Ip_SetNormalNotificationCase, funcdef_no=157, decl_uid=6820, cgraph_uid=158, symbol_order=174)

Ftm_Pwm_Ip_SetNormalNotificationCase (uint8 Instance, uint8 Channel)
{
  uint8 PairChId;
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  unsigned char _9;
  int _10;
  int _11;
  unsigned char _12;
  unsigned char _13;
  int _14;
  unsigned char _15;
  int _16;
  unsigned char _17;
  int _18;
  int _19;
  unsigned char _20;
  unsigned char _21;
  int _22;
  unsigned char _23;
  unsigned char _24;
  int _25;
  unsigned char _26;
  int _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;

  <bb 2> :
  _1 = (int) Instance_37(D);
  FtmBase_39 = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId_41 = Channel_40(D) >> 1;
  ChMode_43 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_39, Channel_40(D));
  _2 = (int) Instance_37(D);
  _3 = (int) Channel_40(D);
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  _5 = (int) _4;
  _6 = _5 & 2;
  if (_6 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetTimerOverflowInt (FtmBase_39, 1);

  <bb 4> :
  _7 = (int) Instance_37(D);
  _8 = (int) Channel_40(D);
  _9 = Ftm_Pwm_Ip_aNotifIrq[_7][_8];
  _10 = (int) _9;
  _11 = _10 & 1;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, Channel_40(D), 1);
  goto <bb 7>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, Channel_40(D), 0);

  <bb 7> :
  if (ChMode_43 == 34)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (ChMode_43 == 98)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (ChMode_43 == 97)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (ChMode_43 == 33)
    goto <bb 11>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 11> :
  _12 = PairChId_41 * 2;
  _13 = _12 + 1;
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase_39, _13);
  _14 = (int) Instance_37(D);
  _15 = PairChId_41 * 2;
  _16 = (int) _15;
  _17 = Ftm_Pwm_Ip_aNotifIrq[_14][_16];
  _18 = (int) _17;
  _19 = _18 & 1;
  if (_19 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _20 = PairChId_41 * 2;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, _20, 1);
  goto <bb 14>; [INV]

  <bb 13> :
  _21 = PairChId_41 * 2;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, _21, 0);

  <bb 14> :
  _22 = (int) Instance_37(D);
  _23 = PairChId_41 * 2;
  _24 = _23 + 1;
  _25 = (int) _24;
  _26 = Ftm_Pwm_Ip_aNotifIrq[_22][_25];
  _27 = (int) _26;
  _28 = _27 & 1;
  if (_28 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _29 = PairChId_41 * 2;
  _30 = _29 + 1;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, _30, 1);
  goto <bb 17>; [INV]

  <bb 16> :
  _31 = PairChId_41 * 2;
  _32 = _31 + 1;
  Ftm_Pwm_Ip_UpdateChnInt (FtmBase_39, _32, 0);

  <bb 17> :
  return;

}



;; Function Ftm_Pwm_Ip_EnableNotification (Ftm_Pwm_Ip_EnableNotification, funcdef_no=158, decl_uid=5822, cgraph_uid=159, symbol_order=175)

Ftm_Pwm_Ip_EnableNotification (uint8 Instance, uint8 Channel, Ftm_Ftm_Ip_EdgeNotifType EdgeNotif)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  int _3;
  unsigned char _4;
  int _5;
  int _6;
  unsigned char _7;
  int _8;
  int _9;
  short unsigned int _10;
  int _11;
  short unsigned int _12;
  int _13;
  int _14;
  short unsigned int _15;
  int _16;
  int _17;
  unsigned char _18;
  int _19;
  int _20;
  unsigned char _21;

  <bb 2> :
  _1 = (int) Instance_24(D);
  FtmBase_26 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_05 ();
  _2 = (int) Instance_24(D);
  _3 = (int) Channel_28(D);
  _4 = Ftm_Pwm_Ip_aNotifIrq[_2][_3];
  _5 = (int) Instance_24(D);
  _6 = (int) Channel_28(D);
  _7 = _4 & 252;
  Ftm_Pwm_Ip_aNotifIrq[_5][_6] = _7;
  Ftm_Pwm_Ip_ClearChnEventFlag (FtmBase_26, Channel_28(D));
  Ftm_Pwm_Ip_ClearTimerOverflow (FtmBase_26);
  ChMode_33 = Ftm_Pwm_Ip_GetChannelMode (FtmBase_26, Channel_28(D));
  if (ChMode_33 == 10)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ChMode_33 == 9)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (ChMode_33 == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (ChMode_33 == 17)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Ftm_Pwm_Ip_UpdateNotificationState (Instance_24(D), Channel_28(D), EdgeNotif_34(D));
  goto <bb 8>; [INV]

  <bb 7> :
  Ftm_Pwm_Ip_UpdateNotificationStateCombine (Instance_24(D), Channel_28(D), EdgeNotif_34(D));

  <bb 8> :
  _8 = (int) Instance_24(D);
  _9 = (int) Channel_28(D);
  _10 = Ftm_Pwm_Ip_aDutyCycle[_8][_9];
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _11 = (int) Instance_24(D);
  _12 = Ftm_Pwm_Ip_aPeriod[_11];
  _13 = (int) Instance_24(D);
  _14 = (int) Channel_28(D);
  _15 = Ftm_Pwm_Ip_aDutyCycle[_13][_14];
  if (_12 != _15)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Ftm_Pwm_Ip_SetNormalNotificationCase (Instance_24(D), Channel_28(D));
  goto <bb 12>; [INV]

  <bb 11> :
  _16 = (int) Instance_24(D);
  _17 = (int) Channel_28(D);
  _18 = Ftm_Pwm_Ip_aNotifIrq[_16][_17];
  _19 = (int) Instance_24(D);
  _20 = (int) Channel_28(D);
  _21 = _18 | 4;
  Ftm_Pwm_Ip_aNotifIrq[_19][_20] = _21;
  Ftm_Pwm_Ip_DisableCmpIrq (Instance_24(D), Channel_28(D));

  <bb 12> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_05 ();
  return;

}



;; Function Ftm_Pwm_Ip_SetPowerState (Ftm_Pwm_Ip_SetPowerState, funcdef_no=159, decl_uid=5849, cgraph_uid=160, symbol_order=176)

Ftm_Pwm_Ip_SetPowerState (uint8 Instance, Ftm_Pwm_Ip_PowerStateType PowerState)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  <unnamed type> _3;

  <bb 2> :
  _1 = (int) Instance_5(D);
  FtmBase_7 = Ftm_Pwm_Ip_aFtmBase[_1];
  if (PowerState_8(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Ftm_Pwm_Ip_SetClockSource (FtmBase_7, 0);
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (int) Instance_5(D);
  _3 = Ftm_Pwm_Ip_aClockSource[_2];
  Ftm_Pwm_Ip_SetClockSource (FtmBase_7, _3);

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_SetClockMode (Ftm_Pwm_Ip_SetClockMode, funcdef_no=160, decl_uid=5825, cgraph_uid=161, symbol_order=177)

Ftm_Pwm_Ip_SetClockMode (uint8 Instance, Ftm_Pwm_Ip_PrescalerType Prescaler)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  <unnamed type> _3;
  int _4;
  <unnamed type> _5;

  <bb 2> :
  _1 = (int) Instance_7(D);
  FtmBase_9 = Ftm_Pwm_Ip_aFtmBase[_1];
  if (Prescaler_10(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (int) Instance_7(D);
  _3 = Ftm_Pwm_Ip_aAlternateClockPrescaler[_2];
  Ftm_Pwm_Ip_SetClockPs (FtmBase_9, _3);
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = (int) Instance_7(D);
  _5 = Ftm_Pwm_Ip_aClockPrescaler[_4];
  Ftm_Pwm_Ip_SetClockPs (FtmBase_9, _5);

  <bb 5> :
  return;

}



;; Function Ftm_Pwm_Ip_ResetCounter (Ftm_Pwm_Ip_ResetCounter, funcdef_no=161, decl_uid=5828, cgraph_uid=162, symbol_order=178)

Ftm_Pwm_Ip_ResetCounter (uint8 Instance, boolean IsResetCnt)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  Ftm_Pwm_Ip_SetCounterSoftwareSyncModeCmd (FtmBase_4, IsResetCnt_5(D));
  return;

}



;; Function Ftm_Pwm_Ip_GetChannelState (Ftm_Pwm_Ip_GetChannelState, funcdef_no=162, decl_uid=5852, cgraph_uid=163, symbol_order=179)

Ftm_Pwm_Ip_GetChannelState (uint8 Instance, uint8 Channel)
{
  uint16 DutyCycle;
  uint16 D.7291;
  int _1;
  int _2;
  uint16 _7;

  <bb 2> :
  _1 = (int) Instance_3(D);
  _2 = (int) Channel_4(D);
  DutyCycle_6 = Ftm_Pwm_Ip_aDutyCycle[_1][_2];
  _7 = DutyCycle_6;

  <bb 3> :
<L0>:
  return _7;

}



;; Function Ftm_Pwm_Ip_FastUpdatePwmDuty (Ftm_Pwm_Ip_FastUpdatePwmDuty, funcdef_no=163, decl_uid=5804, cgraph_uid=164, symbol_order=180)

Ftm_Pwm_Ip_FastUpdatePwmDuty (uint8 Instance, uint8 NumberOfChannels, const uint8 * Channels, const uint16 * Duty, boolean SoftwareTrigger)
{
  uint8 Index;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  sizetype _2;
  const uint8 * _3;
  unsigned char _4;
  unsigned int _5;
  unsigned int _6;
  const uint16 * _7;
  short unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  const uint16 * _11;
  int _12;
  sizetype _13;
  const uint8 * _14;
  unsigned char _15;
  int _16;
  short unsigned int _17;
  unsigned char Index.35_18;

  <bb 2> :
  _1 = (int) Instance_21(D);
  FtmBase_23 = Ftm_Pwm_Ip_aFtmBase[_1];
  Index_24 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = (sizetype) Index_19;
  _3 = Channels_28(D) + _2;
  _4 = *_3;
  _5 = (unsigned int) Index_19;
  _6 = _5 * 2;
  _7 = Duty_29(D) + _6;
  _8 = *_7;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_23, _4, _8);
  _9 = (unsigned int) Index_19;
  _10 = _9 * 2;
  _11 = Duty_29(D) + _10;
  _12 = (int) Instance_21(D);
  _13 = (sizetype) Index_19;
  _14 = Channels_28(D) + _13;
  _15 = *_14;
  _16 = (int) _15;
  _17 = *_11;
  Ftm_Pwm_Ip_aDutyCycle[_12][_16] = _17;
  Index.35_18 = Index_19;
  Index_32 = Index.35_18 + 1;

  <bb 4> :
  # Index_19 = PHI <Index_24(2), Index_32(3)>
  if (Index_19 < NumberOfChannels_25(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_23, SoftwareTrigger_26(D));
  return;

}



;; Function Ftm_Pwm_Ip_MaskOutputChannels (Ftm_Pwm_Ip_MaskOutputChannels, funcdef_no=164, decl_uid=5832, cgraph_uid=165, symbol_order=181)

Ftm_Pwm_Ip_MaskOutputChannels (uint8 Instance, uint32 ChannelsMask, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_07 ();
  Ftm_Pwm_Ip_SetOutmaskReg (FtmBase_4, ChannelsMask_6(D));
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_4, SoftwareTrigger_8(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_07 ();
  return;

}



;; Function Ftm_Pwm_Ip_UnMaskOutputChannels (Ftm_Pwm_Ip_UnMaskOutputChannels, funcdef_no=165, decl_uid=5868, cgraph_uid=166, symbol_order=182)

Ftm_Pwm_Ip_UnMaskOutputChannels (uint8 Instance, uint32 ChannelsMask, boolean SoftwareTrigger)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_08 ();
  Ftm_Pwm_Ip_ClearOutmaskReg (FtmBase_4, ChannelsMask_6(D));
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_4, SoftwareTrigger_8(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_08 ();
  return;

}



;; Function Ftm_Pwm_Ip_SetPhaseShift (Ftm_Pwm_Ip_SetPhaseShift, funcdef_no=166, decl_uid=5858, cgraph_uid=167, symbol_order=183)

Ftm_Pwm_Ip_SetPhaseShift (uint8 Instance, uint8 Channel, uint16 Period, uint16 PhaseShift, boolean SoftwareTrigger)
{
  uint16 DutyCycleVal;
  uint8 PairChId;
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  int _2;
  <unnamed type> _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned char _6;
  int _7;
  int _8;
  unsigned char _9;
  unsigned char _10;
  short unsigned int _11;

  <bb 2> :
  _1 = (int) Instance_13(D);
  FtmBase_15 = Ftm_Pwm_Ip_aFtmBase[_1];
  PairChId_17 = Channel_16(D) >> 1;
  _2 = (int) Instance_13(D);
  Ftm_Pwm_Ip_aPeriod[_2] = Period_18(D);
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_09 ();
  _3 = Ftm_Pwm_Ip_GetCpwms (FtmBase_15);
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = Period_18(D) >> 1;
  Ftm_Pwm_Ip_SetMod (FtmBase_15, _4);
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = Period_18(D) + 65535;
  Ftm_Pwm_Ip_SetMod (FtmBase_15, _5);

  <bb 5> :
  _6 = PairChId_17 * 2;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_15, _6, PhaseShift_24(D));
  DutyCycleVal_26 = Period_18(D) >> 1;
  _7 = (int) Instance_13(D);
  _8 = (int) Channel_16(D);
  Ftm_Pwm_Ip_aDutyCycle[_7][_8] = DutyCycleVal_26;
  _9 = PairChId_17 * 2;
  _10 = _9 + 1;
  _11 = PhaseShift_24(D) + DutyCycleVal_26;
  Ftm_Pwm_Ip_SetChnCountVal (FtmBase_15, _10, _11);
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_15, SoftwareTrigger_29(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_09 ();
  return;

}



;; Function Ftm_Pwm_Ip_SetDutyPhaseShift (Ftm_Pwm_Ip_SetDutyPhaseShift, funcdef_no=167, decl_uid=5864, cgraph_uid=168, symbol_order=184)

Ftm_Pwm_Ip_SetDutyPhaseShift (uint8 Instance, uint8 Channel, uint16 DutyCycle, uint16 PhaseShift, boolean SyncUpdate)
{
  boolean SoftwareTrigger;
  uint8 PairId;
  uint16 SecondEdgeEdge;
  uint16 FirstEdge;
  int _1;
  int _2;
  int _3;
  int _4;

  <bb 2> :
  PairId_8 = Channel_7(D) >> 1;
  _1 = (int) Instance_9(D);
  _2 = (int) PairId_8;
  Ftm_Pwm_Ip_aPhaseShift[_1][_2] = PhaseShift_11(D);
  _3 = (int) Instance_9(D);
  _4 = (int) Channel_7(D);
  Ftm_Pwm_Ip_aDutyCycle[_3][_4] = DutyCycle_13(D);
  if (PhaseShift_11(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  FirstEdge_16 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  FirstEdge_15 = PhaseShift_11(D);

  <bb 5> :
  # FirstEdge_5 = PHI <FirstEdge_16(3), FirstEdge_15(4)>
  SecondEdgeEdge_18 = Ftm_Pwm_Ip_CalculatePhaseShift (Instance_9(D), DutyCycle_13(D), PhaseShift_11(D));
  if (SyncUpdate_19(D) != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  SoftwareTrigger_21 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  SoftwareTrigger_20 = 1;

  <bb 8> :
  # SoftwareTrigger_6 = PHI <SoftwareTrigger_21(6), SoftwareTrigger_20(7)>
  Ftm_Pwm_Ip_UpdatePwmChannel (Instance_9(D), Channel_7(D), FirstEdge_5, SecondEdgeEdge_18, SoftwareTrigger_6);
  return;

}



;; Function Ftm_Pwm_Ip_DisableTrigger (Ftm_Pwm_Ip_DisableTrigger, funcdef_no=168, decl_uid=5874, cgraph_uid=169, symbol_order=185)

Ftm_Pwm_Ip_DisableTrigger (uint8 Instance, uint32 TriggerMask)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_10 ();
  Ftm_Pwm_Ip_DisableTriggerMask (FtmBase_4, TriggerMask_6(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_10 ();
  return;

}



;; Function Ftm_Pwm_Ip_EnableTrigger (Ftm_Pwm_Ip_EnableTrigger, funcdef_no=169, decl_uid=5871, cgraph_uid=170, symbol_order=186)

Ftm_Pwm_Ip_EnableTrigger (uint8 Instance, uint32 TriggerMask)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_11 ();
  Ftm_Pwm_Ip_EnableTriggerMask (FtmBase_4, TriggerMask_6(D));
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_11 ();
  return;

}



;; Function Ftm_Pwm_Ip_SyncUpdate (Ftm_Pwm_Ip_SyncUpdate, funcdef_no=170, decl_uid=5815, cgraph_uid=171, symbol_order=187)

Ftm_Pwm_Ip_SyncUpdate (uint8 Instance)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;

  <bb 2> :
  _1 = (int) Instance_2(D);
  FtmBase_4 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_12 ();
  Ftm_Pwm_Ip_SetSoftwareTriggerCmd (FtmBase_4, 1);
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_12 ();
  return;

}



;; Function Ftm_Pwm_Ip_SetChannelDeadTime (Ftm_Pwm_Ip_SetChannelDeadTime, funcdef_no=171, decl_uid=5878, cgraph_uid=172, symbol_order=188)

Ftm_Pwm_Ip_SetChannelDeadTime (uint8 Instance, uint8 Channel, uint16 DeadTimeVal)
{
  struct Ftm_Pwm_Ip_HwAddrType * FtmBase;
  int _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  short unsigned int _5;
  unsigned char _6;

  <bb 2> :
  _1 = (int) Instance_8(D);
  FtmBase_10 = Ftm_Pwm_Ip_aFtmBase[_1];
  SchM_Enter_Pwm_PWM_EXCLUSIVE_AREA_13 ();
  if (DeadTimeVal_12(D) <= 63)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (unsigned char) DeadTimeVal_12(D);
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase_10, _2);
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase_10, 0);
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = (unsigned char) DeadTimeVal_12(D);
  _4 = _3 & 63;
  Ftm_Pwm_Ip_SetDeadtimeCount (FtmBase_10, _4);
  _5 = DeadTimeVal_12(D) >> 6;
  _6 = (unsigned char) _5;
  Ftm_Pwm_Ip_SetExtDeadtimeValue (FtmBase_10, _6);

  <bb 5> :
  SchM_Exit_Pwm_PWM_EXCLUSIVE_AREA_13 ();
  return;

}


