
Marking local functions:


Marking externally visible functions: FMSTR_StrLen FMSTR_WriteVarMask FMSTR_WriteMemMask FMSTR_WriteVar FMSTR_WriteMem FMSTR_ReadVar FMSTR_ReadMem FMSTR_GetBoardInfo FMSTR_SendTestFrame FMSTR_ProtocolDecoder FMSTR_Init


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

FMSTR_CopyFromBufferWithMask/34 (FMSTR_CopyFromBufferWithMask) @0677a0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_WriteVarMask/9 FMSTR_WriteMemMask/8 
  Calls: 
FMSTR_CopyFromBuffer/33 (FMSTR_CopyFromBuffer) @06733e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_WriteVar/7 FMSTR_WriteMem/6 
  Calls: 
FMSTR_CopyToBuffer/32 (FMSTR_CopyToBuffer) @06733b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ReadVar/5 FMSTR_ReadMem/4 
  Calls: 
FMSTR_AddressFromBuffer/31 (FMSTR_AddressFromBuffer) @06733a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_WriteVarMask/9 FMSTR_WriteMemMask/8 FMSTR_WriteVar/7 FMSTR_WriteMem/6 FMSTR_ReadVar/5 FMSTR_ReadMem/4 
  Calls: 
FMSTR_ValueToBuffer16/30 (FMSTR_ValueToBuffer16) @067338c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_GetBoardInfo/3 FMSTR_GetBoardInfo/3 
  Calls: 
FMSTR_GetRecBuffSize/29 (FMSTR_GetRecBuffSize) @067337e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_GetBoardInfo/3 
  Calls: 
FMSTR_SendResponse/28 (FMSTR_SendResponse) @06733540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_SendTestFrame/2 FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_PipeFrame/27 (FMSTR_PipeFrame) @06733460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_GetAppCmdRespData/26 (FMSTR_GetAppCmdRespData) @06733380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_GetAppCmdStatus/25 (FMSTR_GetAppCmdStatus) @067332a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_StoreAppCmd/24 (FMSTR_StoreAppCmd) @067331c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_GetRecBuff/23 (FMSTR_GetRecBuff) @067330e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_SetUpRec/22 (FMSTR_SetUpRec) @06733000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_StopRec/21 (FMSTR_StopRec) @0672bee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_StartRec/20 (FMSTR_StartRec) @0672be00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_GetRecStatus/19 (FMSTR_GetRecStatus) @0672bd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_ReadScope/18 (FMSTR_ReadScope) @0672bc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_SetUpScope/17 (FMSTR_SetUpScope) @0672bb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_SetExAddr/16 (FMSTR_SetExAddr) @0672ba80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 
  Calls: 
FMSTR_InitSerial/15 (FMSTR_InitSerial) @0672b700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_Init/0 
  Calls: 
FMSTR_InitPipes/14 (FMSTR_InitPipes) @0672b620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_Init/0 
  Calls: 
FMSTR_InitAppCmds/13 (FMSTR_InitAppCmds) @0672b540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_Init/0 
  Calls: 
FMSTR_InitRec/12 (FMSTR_InitRec) @0672b460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_Init/0 
  Calls: 
FMSTR_InitScope/11 (FMSTR_InitScope) @0672b380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: FMSTR_Init/0 
  Calls: 
FMSTR_StrLen/10 (FMSTR_StrLen) @06721ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
FMSTR_WriteVarMask/9 (FMSTR_WriteVarMask) @067217e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: FMSTR_CopyFromBufferWithMask/34 FMSTR_AddressFromBuffer/31 
FMSTR_WriteMemMask/8 (FMSTR_WriteMemMask) @06721e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: FMSTR_CopyFromBufferWithMask/34 FMSTR_AddressFromBuffer/31 
FMSTR_WriteVar/7 (FMSTR_WriteVar) @06721a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: FMSTR_CopyFromBuffer/33 FMSTR_AddressFromBuffer/31 
FMSTR_WriteMem/6 (FMSTR_WriteMem) @06721700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: FMSTR_CopyFromBuffer/33 FMSTR_AddressFromBuffer/31 
FMSTR_ReadVar/5 (FMSTR_ReadVar) @06721380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 FMSTR_ProtocolDecoder/1 
  Calls: FMSTR_CopyToBuffer/32 FMSTR_AddressFromBuffer/31 
FMSTR_ReadMem/4 (FMSTR_ReadMem) @06721000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: FMSTR_CopyToBuffer/32 FMSTR_AddressFromBuffer/31 
FMSTR_GetBoardInfo/3 (FMSTR_GetBoardInfo) @066fa9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: FMSTR_ProtocolDecoder/1 
  Calls: FMSTR_ValueToBuffer16/30 FMSTR_ValueToBuffer16/30 FMSTR_GetRecBuffSize/29 
FMSTR_SendTestFrame/2 (FMSTR_SendTestFrame) @066fae00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: FMSTR_SendResponse/28 
FMSTR_ProtocolDecoder/1 (FMSTR_ProtocolDecoder) @066fab60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: FMSTR_SendResponse/28 FMSTR_PipeFrame/27 FMSTR_GetBoardInfo/3 FMSTR_WriteMemMask/8 FMSTR_SetExAddr/16 FMSTR_WriteMem/6 FMSTR_SetExAddr/16 FMSTR_GetAppCmdRespData/26 FMSTR_GetAppCmdStatus/25 FMSTR_StoreAppCmd/24 FMSTR_GetRecBuff/23 FMSTR_SetExAddr/16 FMSTR_SetUpRec/22 FMSTR_SetExAddr/16 FMSTR_StopRec/21 FMSTR_StartRec/20 FMSTR_GetRecStatus/19 FMSTR_ReadScope/18 FMSTR_SetUpScope/17 FMSTR_SetExAddr/16 FMSTR_ReadMem/4 FMSTR_SetExAddr/16 FMSTR_ReadVar/5 FMSTR_SetExAddr/16 FMSTR_ReadVar/5 FMSTR_SetExAddr/16 FMSTR_ReadVar/5 FMSTR_SetExAddr/16 FMSTR_SetExAddr/16 
FMSTR_Init/0 (FMSTR_Init) @066fa8c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: FMSTR_InitSerial/15 FMSTR_InitPipes/14 FMSTR_InitAppCmds/13 FMSTR_InitRec/12 FMSTR_InitScope/11 
FMSTR_StrLen (unsigned char * nAddr)
{
  FMSTR_U16 nLen;
  const char * pStr;
  FMSTR_U16 D.5754;

  <bb 2> :
  nLen = 0;
  pStr = nAddr;
  goto <bb 4>; [INV]

  <bb 3> :
  nLen.12_1 = nLen;
  nLen = nLen.12_1 + 1;

  <bb 4> :
  pStr.13_2 = pStr;
  pStr = pStr.13_2 + 1;
  _3 = *pStr.13_2;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.5754 = nLen;

  <bb 6> :
<L3>:
  return D.5754;

}


FMSTR_WriteVarMask (unsigned char * pMessageIO, FMSTR_SIZE8 nSize)
{
  FMSTR_U8 nResponseCode;
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5751;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  nAddr.11_1 = nAddr;
  FMSTR_CopyFromBufferWithMask (nAddr.11_1, pMessageIO, nSize);
  nResponseCode = 0;
  MEM[(FMSTR_U8 *)pResponse] = nResponseCode;
  D.5751 = pResponse + 1;
  nAddr = {CLOBBER};

  <bb 3> :
<L1>:
  return D.5751;

}


FMSTR_WriteMemMask (unsigned char * pMessageIO)
{
  FMSTR_U8 nResponseCode;
  FMSTR_U8 nSize;
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5748;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 2;
  _1 = MEM[(FMSTR_U8 *)pMessageIO];
  nSize = _1;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  nAddr.9_2 = nAddr;
  nSize.10_3 = nSize;
  FMSTR_CopyFromBufferWithMask (nAddr.9_2, pMessageIO, nSize.10_3);
  nResponseCode = 0;
  MEM[(FMSTR_U8 *)pResponse] = nResponseCode;
  D.5748 = pResponse + 1;
  nAddr = {CLOBBER};
  nSize = {CLOBBER};

  <bb 3> :
<L1>:
  return D.5748;

}


FMSTR_WriteVar (unsigned char * pMessageIO, FMSTR_SIZE8 nSize)
{
  FMSTR_U8 nResponseCode;
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5745;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  nAddr.8_1 = nAddr;
  FMSTR_CopyFromBuffer (nAddr.8_1, pMessageIO, nSize);
  nResponseCode = 0;
  MEM[(FMSTR_U8 *)pResponse] = nResponseCode;
  D.5745 = pResponse + 1;
  nAddr = {CLOBBER};

  <bb 3> :
<L1>:
  return D.5745;

}


FMSTR_WriteMem (unsigned char * pMessageIO)
{
  FMSTR_U8 nResponseCode;
  FMSTR_U8 nSize;
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5742;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 2;
  _1 = MEM[(FMSTR_U8 *)pMessageIO];
  nSize = _1;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  nAddr.6_2 = nAddr;
  nSize.7_3 = nSize;
  FMSTR_CopyFromBuffer (nAddr.6_2, pMessageIO, nSize.7_3);
  nResponseCode = 0;
  MEM[(FMSTR_U8 *)pResponse] = nResponseCode;
  D.5742 = pResponse + 1;
  nAddr = {CLOBBER};
  nSize = {CLOBBER};

  <bb 3> :
<L1>:
  return D.5742;

}


FMSTR_ReadVar (unsigned char * pMessageIO, FMSTR_SIZE8 nSize)
{
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5739;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  MEM[(FMSTR_U8 *)pResponse] = 0;
  pResponse = pResponse + 1;
  nAddr.5_1 = nAddr;
  D.5739 = FMSTR_CopyToBuffer (pResponse, nAddr.5_1, nSize);
  nAddr = {CLOBBER};

  <bb 3> :
<L1>:
  return D.5739;

}


FMSTR_ReadMem (unsigned char * pMessageIO)
{
  FMSTR_U8 nSize;
  unsigned char * nAddr;
  unsigned char * pResponse;
  unsigned char * D.5736;

  <bb 2> :
  pResponse = pMessageIO;
  pMessageIO = pMessageIO + 2;
  _1 = MEM[(FMSTR_U8 *)pMessageIO];
  nSize = _1;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_AddressFromBuffer (&nAddr, pMessageIO);
  nSize.2_2 = nSize;
  if (nSize.2_2 > 60)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  MEM[(FMSTR_U8 *)pResponse] = 132;
  D.5736 = pResponse + 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  MEM[(FMSTR_U8 *)pResponse] = 0;
  pResponse = pResponse + 1;
  nAddr.3_3 = nAddr;
  nSize.4_4 = nSize;
  D.5736 = FMSTR_CopyToBuffer (pResponse, nAddr.3_3, nSize.4_4);

  <bb 5> :
  nAddr = {CLOBBER};
  nSize = {CLOBBER};

  <bb 6> :
<L3>:
  return D.5736;

}


FMSTR_GetBoardInfo (unsigned char * pMessageIO)
{
  FMSTR_U8 * pStr;
  FMSTR_U16 wTmp;
  unsigned char * pResponse;
  unsigned char * D.5732;

  <bb 2> :
  pResponse = pMessageIO;
  MEM[(FMSTR_U8 *)pResponse] = 0;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 3;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 0;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 1;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 2;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 0;
  pResponse = pResponse + 1;
  MEM[(FMSTR_U8 *)pResponse] = 60;
  pResponse = pResponse + 1;
  wTmp = FMSTR_GetRecBuffSize ();
  wTmp = wTmp;
  pResponse = FMSTR_ValueToBuffer16 (pResponse, wTmp);
  pResponse = FMSTR_ValueToBuffer16 (pResponse, 16384);
  pStr = "S32xx FreeMASTER";
  wTmp = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = *pStr;
  MEM[(FMSTR_U8 *)pResponse] = _1;
  pResponse = pResponse + 1;
  _2 = *pStr;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pStr = pStr + 1;

  <bb 5> :
  wTmp.1_3 = wTmp;
  wTmp = wTmp.1_3 + 1;

  <bb 6> :
  if (wTmp <= 24)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.5732 = pResponse;

  <bb 8> :
<L5>:
  return D.5732;

}


FMSTR_SendTestFrame (unsigned char * pMessageIO)
{
  unsigned char * pResponse;
  FMSTR_BOOL D.5728;

  <bb 2> :
  pResponse = pMessageIO;
  MEM[(FMSTR_U8 *)pResponse] = 169;
  pResponse = pResponse + 1;
  FMSTR_SendResponse (pMessageIO, 1);
  D.5728 = 1;

  <bb 3> :
<L0>:
  return D.5728;

}


FMSTR_ProtocolDecoder (unsigned char * pMessageIO)
{
  FMSTR_SIZE8 nSize;
  FMSTR_U8 nCmd;
  unsigned char * pResponseEnd;
  FMSTR_BOOL D.5725;

  <bb 2> :
  FMSTR_SetExAddr (0);
  _1 = MEM[(FMSTR_U8 *)pMessageIO];
  nCmd = _1;
  nCmd.0_2 = nCmd;
  _3 = (int) nCmd.0_2;
  switch (_3) <default: <L18> [INV], case 4: <L3> [INV], case 5: <L14> [INV], case 6: <L15> [INV], case 10: <L4> [INV], case 11: <L9> [INV], case 16: <L11> [INV], case 21: <L17> [INV], case 192: <L16> [INV], case 193: <L7> [INV], case 194: <L8> [INV], case 195: <L6> [INV], case 197: <L5> [INV], case 198: <L12> [INV], case 201: <L10> [INV], case 211: <L13> [INV], case 224: <L0> [INV], case 225: <L1> [INV], case 226: <L2> [INV]>

  <bb 3> :
<L0>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_ReadVar (pMessageIO, 1);
  goto <bb 22>; [INV]

  <bb 4> :
<L1>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_ReadVar (pMessageIO, 2);
  goto <bb 22>; [INV]

  <bb 5> :
<L2>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_ReadVar (pMessageIO, 4);
  goto <bb 22>; [INV]

  <bb 6> :
<L3>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_ReadMem (pMessageIO);
  goto <bb 22>; [INV]

  <bb 7> :
<L4>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_SetUpScope (pMessageIO);
  goto <bb 22>; [INV]

  <bb 8> :
<L5>:
  pResponseEnd = FMSTR_ReadScope (pMessageIO);
  goto <bb 22>; [INV]

  <bb 9> :
<L6>:
  pResponseEnd = FMSTR_GetRecStatus (pMessageIO);
  goto <bb 22>; [INV]

  <bb 10> :
<L7>:
  pResponseEnd = FMSTR_StartRec (pMessageIO);
  goto <bb 22>; [INV]

  <bb 11> :
<L8>:
  pResponseEnd = FMSTR_StopRec (pMessageIO);
  goto <bb 22>; [INV]

  <bb 12> :
<L9>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_SetUpRec (pMessageIO);
  goto <bb 22>; [INV]

  <bb 13> :
<L10>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_GetRecBuff (pMessageIO);
  goto <bb 22>; [INV]

  <bb 14> :
<L11>:
  pResponseEnd = FMSTR_StoreAppCmd (pMessageIO);
  goto <bb 22>; [INV]

  <bb 15> :
<L12>:
  pResponseEnd = FMSTR_GetAppCmdStatus (pMessageIO);
  goto <bb 22>; [INV]

  <bb 16> :
<L13>:
  pResponseEnd = FMSTR_GetAppCmdRespData (pMessageIO);
  goto <bb 22>; [INV]

  <bb 17> :
<L14>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_WriteMem (pMessageIO);
  goto <bb 22>; [INV]

  <bb 18> :
<L15>:
  FMSTR_SetExAddr (1);
  pResponseEnd = FMSTR_WriteMemMask (pMessageIO);
  goto <bb 22>; [INV]

  <bb 19> :
<L16>:
  pResponseEnd = FMSTR_GetBoardInfo (pMessageIO);
  goto <bb 22>; [INV]

  <bb 20> :
<L17>:
  pResponseEnd = FMSTR_PipeFrame (pMessageIO);
  goto <bb 22>; [INV]

  <bb 21> :
<L18>:
  MEM[(FMSTR_U8 *)pMessageIO] = 129;
  pResponseEnd = pMessageIO + 1;

  <bb 22> :
  if (pResponseEnd != pMessageIO)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _4 = pResponseEnd - pMessageIO;
  nSize = (FMSTR_SIZE8) _4;
  FMSTR_SendResponse (pMessageIO, nSize);
  D.5725 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 24> :
  D.5725 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 25> :
  nCmd = {CLOBBER};

  <bb 26> :
<L23>:
  return D.5725;

}


FMSTR_Init ()
{
  FMSTR_BOOL D.5721;

  <bb 2> :
  FMSTR_InitScope ();
  FMSTR_InitRec ();
  FMSTR_InitAppCmds ();
  FMSTR_InitPipes ();
  _1 = FMSTR_InitSerial ();
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.5721 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.5721 = 1;

  <bb 5> :
<L2>:
  return D.5721;

}


