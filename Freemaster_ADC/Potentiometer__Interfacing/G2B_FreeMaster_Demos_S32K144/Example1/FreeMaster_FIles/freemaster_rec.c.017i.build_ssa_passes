FMSTR_Recorder2 ()
{
  FMSTR_U8 i;
  FMSTR_BOOL cmp;
  FMSTR_SIZE8 sz;

  <bb 2> :
  pcm_wRecTimeDivCtr.35_1 = pcm_wRecTimeDivCtr;
  if (pcm_wRecTimeDivCtr.35_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  pcm_wRecTimeDivCtr.36_2 = pcm_wRecTimeDivCtr;
  pcm_wRecTimeDivCtr.37_3 = pcm_wRecTimeDivCtr.36_2;
  _4 = pcm_wRecTimeDivCtr.37_3 + 65535;
  pcm_wRecTimeDivCtr = _4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  pcm_wRecTimeDiv.38_5 = pcm_wRecTimeDiv;
  pcm_wRecTimeDivCtr = pcm_wRecTimeDiv.38_5;
  i = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _6 = (int) i;
  sz = pcm_pRecVarSize[_6];
  pcm_dwRecWritePtr.39_7 = pcm_dwRecWritePtr;
  _8 = (int) i;
  _9 = pcm_pRecVarAddr[_8];
  FMSTR_CopyMemory (pcm_dwRecWritePtr.39_7, _9, sz);
  sz = sz;
  pcm_dwRecWritePtr.40_10 = pcm_dwRecWritePtr;
  _11 = (sizetype) sz;
  _12 = pcm_dwRecWritePtr.40_10 + _11;
  pcm_dwRecWritePtr = _12;
  i.41_13 = i;
  i = i.41_13 + 1;

  <bb 6> :
  pcm_nRecVarCount.42_14 = pcm_nRecVarCount;
  if (i < pcm_nRecVarCount.42_14)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  pcm_wRecBuffStartIx.43_15 = pcm_wRecBuffStartIx;
  pcm_wRecBuffStartIx.44_16 = pcm_wRecBuffStartIx.43_15;
  _17 = pcm_wRecBuffStartIx.44_16 + 1;
  pcm_wRecBuffStartIx = _17;
  pcm_dwRecWritePtr.45_18 = pcm_dwRecWritePtr;
  pcm_dwRecEndBuffPtr.46_19 = pcm_dwRecEndBuffPtr;
  if (pcm_dwRecWritePtr.45_18 >= pcm_dwRecEndBuffPtr.46_19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pcm_nRecBuffAddr.47_20 = pcm_nRecBuffAddr;
  pcm_dwRecWritePtr = pcm_nRecBuffAddr.47_20;
  pcm_wRecFlags.flg.bInvirginCycle = 0;
  pcm_wRecBuffStartIx = 0;

  <bb 9> :
  _21 = pcm_wRecFlags.flg.bInvirginCycle;
  if (_21 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 11> :
  _22 = pcm_wRecFlags.flg.bIsStopping;
  if (_22 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 12> :
  pcm_pCompareFunc.48_23 = pcm_pCompareFunc;
  if (pcm_pCompareFunc.48_23 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 13> :
  pcm_pCompareFunc.49_24 = pcm_pCompareFunc;
  cmp = pcm_pCompareFunc.49_24 ();
  pcm_nRecTriggerMode.50_25 = pcm_nRecTriggerMode;
  if (pcm_nRecTriggerMode.50_25 == 2)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _26 = cmp == 0;
  cmp = (FMSTR_BOOL) _26;

  <bb 15> :
  if (cmp != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _27 = pcm_wRecFlags.flg.bTrgCrossActive;
  if (_27 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  FMSTR_TriggerRec ();
  goto <bb 19>; [INV]

  <bb 18> :
  pcm_wRecFlags.flg.bTrgCrossActive = 1;

  <bb 19> :
  _28 = pcm_wRecFlags.flg.bIsStopping;
  if (_28 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 20> :
  pcm_wStoprecCountDown.51_29 = pcm_wStoprecCountDown;
  if (pcm_wStoprecCountDown.51_29 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  pcm_wRecFlags.flg.bIsRunning = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 22> :
  pcm_wStoprecCountDown.52_30 = pcm_wStoprecCountDown;
  pcm_wStoprecCountDown.53_31 = pcm_wStoprecCountDown.52_30;
  _32 = pcm_wStoprecCountDown.53_31 + 65535;
  pcm_wStoprecCountDown = _32;

  <bb 23> :
<L24>:
  return;

}


FMSTR_Recorder ()
{
  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsRunning;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  FMSTR_Recorder2 ();

  <bb 5> :
<L2>:
  return;

}


FMSTR_Compare32U ()
{
  FMSTR_BOOL D.5851;

  <bb 2> :
  pcm_nTrgVarAddr.34_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_U32 *)pcm_nTrgVarAddr.34_1];
  _3 = pcm_uTrgThreshold.u32;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5851 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5851;

}


FMSTR_Compare32S ()
{
  FMSTR_BOOL D.5849;

  <bb 2> :
  pcm_nTrgVarAddr.33_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_S32 *)pcm_nTrgVarAddr.33_1];
  _3 = pcm_uTrgThreshold.s32;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5849 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5849;

}


FMSTR_Compare16U ()
{
  FMSTR_BOOL D.5847;

  <bb 2> :
  pcm_nTrgVarAddr.32_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_U16 *)pcm_nTrgVarAddr.32_1];
  _3 = pcm_uTrgThreshold.u16;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5847 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5847;

}


FMSTR_Compare16S ()
{
  FMSTR_BOOL D.5845;

  <bb 2> :
  pcm_nTrgVarAddr.31_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_S16 *)pcm_nTrgVarAddr.31_1];
  _3 = pcm_uTrgThreshold.s16;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5845 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5845;

}


FMSTR_Compare8U ()
{
  FMSTR_BOOL D.5843;

  <bb 2> :
  pcm_nTrgVarAddr.30_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_U8 *)pcm_nTrgVarAddr.30_1];
  _3 = pcm_uTrgThreshold.u8;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5843 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5843;

}


FMSTR_Compare8S ()
{
  FMSTR_BOOL D.5841;

  <bb 2> :
  pcm_nTrgVarAddr.29_1 = pcm_nTrgVarAddr;
  _2 = MEM[(FMSTR_S8 *)pcm_nTrgVarAddr.29_1];
  _3 = pcm_uTrgThreshold.s8;
  _4 = _2 >= _3;
  _5 = (int) _4;
  D.5841 = (FMSTR_BOOL) _5;

  <bb 3> :
<L0>:
  return D.5841;

}


FMSTR_GetRecBuff (unsigned char * pMessageIO)
{
  unsigned char * volatile pResponse;
  unsigned char * D.5837;

  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsConfigured;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  MEM[(FMSTR_U8 *)pMessageIO] = 136;
  D.5837 = pMessageIO + 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = pcm_wRecFlags.flg.bIsRunning;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  MEM[(FMSTR_U8 *)pMessageIO] = 135;
  D.5837 = pMessageIO + 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  MEM[(FMSTR_U8 *)pMessageIO] = 0;
  _3 = pMessageIO + 1;
  pResponse = _3;
  pResponse.25_4 = pResponse;
  pcm_nRecBuffAddr.26_5 = pcm_nRecBuffAddr;
  _6 = FMSTR_AddressToBuffer (pResponse.25_4, pcm_nRecBuffAddr.26_5);
  pResponse = _6;
  pResponse.27_7 = pResponse;
  pcm_wRecBuffStartIx.28_8 = pcm_wRecBuffStartIx;
  D.5837 = FMSTR_ValueToBuffer16 (pResponse.27_7, pcm_wRecBuffStartIx.28_8);

  <bb 7> :
<L4>:
  return D.5837;

}


FMSTR_IsInRecBuffer (unsigned char * dwAddr, FMSTR_SIZE8 nSize)
{
  FMSTR_BOOL bRet;
  FMSTR_BOOL D.5833;
  unsigned char iftmp.23;

  <bb 2> :
  bRet = 0;
  pcm_nRecBuffAddr.22_1 = pcm_nRecBuffAddr;
  if (dwAddr >= pcm_nRecBuffAddr.22_1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _2 = (sizetype) nSize;
  _3 = dwAddr + _2;
  pcm_nRecBuffAddr.24_4 = pcm_nRecBuffAddr;
  _5 = FMSTR_GetRecBuffSize ();
  _6 = (sizetype) _5;
  _7 = pcm_nRecBuffAddr.24_4 + _6;
  if (_3 <= _7)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.23 = 1;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.23 = 0;

  <bb 6> :
  bRet = iftmp.23;

  <bb 7> :
  D.5833 = bRet;

  <bb 8> :
<L5>:
  return D.5833;

}


FMSTR_GetRecBuffSize ()
{
  FMSTR_SIZE_RECBUFF D.5825;

  <bb 2> :
  D.5825 = 512;

  <bb 3> :
<L0>:
  return D.5825;

}


FMSTR_GetRecStatus (unsigned char * pMessageIO)
{
  FMSTR_U16 nResponseCode;
  unsigned char * D.5823;
  short unsigned int iftmp.21;

  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsRunning;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.21 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.21 = 2;

  <bb 5> :
  nResponseCode = iftmp.21;
  _2 = pcm_wRecFlags.flg.bIsConfigured;
  if (_2 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  nResponseCode = 136;

  <bb 7> :
  _3 = (unsigned char) nResponseCode;
  MEM[(FMSTR_U8 *)pMessageIO] = _3;
  D.5823 = pMessageIO + 1;

  <bb 8> :
<L5>:
  return D.5823;

}


FMSTR_StopRec (unsigned char * pMessageIO)
{
  FMSTR_U8 nResponseCode;
  unsigned char * D.5815;

  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsConfigured;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  nResponseCode = 136;
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = pcm_wRecFlags.flg.bIsRunning;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  nResponseCode = 2;
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  FMSTR_TriggerRec ();
  nResponseCode = 0;

  <bb 7> :
FMSTR_StopRec_exit:
  MEM[(FMSTR_U8 *)pMessageIO] = nResponseCode;
  D.5815 = pMessageIO + 1;

  <bb 8> :
<L5>:
  return D.5815;

}


FMSTR_StartRec (unsigned char * pMessageIO)
{
  FMSTR_U8 nResponseCode;
  unsigned char * D.5809;

  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsConfigured;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  nResponseCode = 136;
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = pcm_wRecFlags.flg.bIsRunning;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  nResponseCode = 1;
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  pcm_nRecBuffAddr.20_3 = pcm_nRecBuffAddr;
  pcm_dwRecWritePtr = pcm_nRecBuffAddr.20_3;
  pcm_wRecBuffStartIx = 0;
  pcm_wRecTimeDivCtr = 0;
  pcm_wRecFlags.flg.bIsStopping = 0;
  pcm_wRecFlags.flg.bTrgCrossActive = 0;
  pcm_wRecFlags.flg.bInvirginCycle = 1;
  pcm_wRecFlags.flg.bIsRunning = 1;
  nResponseCode = 0;

  <bb 7> :
FMSTR_StartRec_exit:
  MEM[(FMSTR_U8 *)pMessageIO] = nResponseCode;
  D.5809 = pMessageIO + 1;

  <bb 8> :
<L5>:
  return D.5809;

}


FMSTR_TriggerRec ()
{
  <bb 2> :
  _1 = pcm_wRecFlags.flg.bIsStopping;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  pcm_wRecFlags.flg.bIsStopping = 1;
  pcm_wRecPostTrigger.19_2 = pcm_wRecPostTrigger;
  pcm_wStoprecCountDown = pcm_wRecPostTrigger.19_2;

  <bb 4> :
  return;

}


FMSTR_SetUpRec (unsigned char * pMessageIO)
{
  FMSTR_U8 nResponseCode;
  FMSTR_U8 sz;
  FMSTR_U8 i;
  FMSTR_SIZE_RECBUFF blen;
  FMSTR_SIZE8 nRecVarsetSize;
  unsigned char * pResponse;
  unsigned char * D.5800;
  FMSTR_BOOL (*<T4c8>) (void) iftmp.15;
  FMSTR_BOOL (*<T4c8>) (void) iftmp.13;
  FMSTR_BOOL (*<T4c8>) (void) iftmp.11;

  <bb 2> :
  pResponse = pMessageIO;
  FMSTR_AbortRec ();
  pcm_nRecBuffAddr = &pcm_pOwnRecBuffer;
  pMessageIO = pMessageIO + 2;
  _1 = MEM[(FMSTR_U8 *)pMessageIO];
  pcm_nRecTriggerMode = _1;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_ValueFromBuffer16 (&pcm_wRecTotalSmps, pMessageIO);
  pMessageIO = FMSTR_ValueFromBuffer16 (&pcm_wRecPostTrigger, pMessageIO);
  pMessageIO = FMSTR_ValueFromBuffer16 (&pcm_wRecTimeDiv, pMessageIO);
  pMessageIO = FMSTR_AddressFromBuffer (&pcm_nTrgVarAddr, pMessageIO);
  _2 = MEM[(FMSTR_U8 *)pMessageIO];
  pcm_nTrgVarSize = _2;
  pMessageIO = pMessageIO + 1;
  _3 = MEM[(FMSTR_U8 *)pMessageIO];
  pcm_bTrgVarSigned = _3;
  pMessageIO = pMessageIO + 1;
  pMessageIO = FMSTR_ValueFromBuffer32 (&pcm_uTrgThreshold.u32, pMessageIO);
  _4 = MEM[(FMSTR_U8 *)pMessageIO];
  pcm_nRecVarCount = _4;
  pMessageIO = pMessageIO + 1;
  pcm_nRecVarCount.0_5 = pcm_nRecVarCount;
  if (pcm_nRecVarCount.0_5 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  pcm_nRecVarCount.1_6 = pcm_nRecVarCount;
  if (pcm_nRecVarCount.1_6 > 8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  nResponseCode = 133;
  // predicted unlikely by goto predictor.
  goto <bb 31>; [INV]

  <bb 5> :
  nRecVarsetSize = 0;
  i = 0;
  goto <bb 10>; [INV]

  <bb 6> :
  _7 = MEM[(FMSTR_U8 *)pMessageIO];
  sz = _7;
  pMessageIO = pMessageIO + 1;
  _8 = (int) i;
  sz.2_9 = sz;
  pcm_pRecVarSize[_8] = sz.2_9;
  sz.3_10 = sz;
  nRecVarsetSize = nRecVarsetSize + sz.3_10;
  _11 = (int) i;
  _12 = &pcm_pRecVarAddr[_11];
  pMessageIO = FMSTR_AddressFromBuffer (_12, pMessageIO);
  sz.4_13 = sz;
  if (sz.4_13 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  sz.5_14 = sz;
  if (sz.5_14 > 8)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  nResponseCode = 134;
  // predicted unlikely by goto predictor.
  goto <bb 31>; [INV]

  <bb 9> :
  i.6_15 = i;
  i = i.6_15 + 1;

  <bb 10> :
  pcm_nRecVarCount.7_16 = pcm_nRecVarCount;
  if (i < pcm_nRecVarCount.7_16)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  pcm_pCompareFunc = 0B;
  pcm_nRecTriggerMode.8_17 = pcm_nRecTriggerMode;
  if (pcm_nRecTriggerMode.8_17 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 12> :
  pcm_bTrgVarSigned.9_18 = pcm_bTrgVarSigned;
  _19 = (int) pcm_bTrgVarSigned.9_18;
  _20 = _19 & 2;
  if (_20 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  nResponseCode = 144;
  // predicted unlikely by goto predictor.
  goto <bb 31>; [INV]

  <bb 14> :
  pcm_nTrgVarSize.10_21 = pcm_nTrgVarSize;
  _22 = (int) pcm_nTrgVarSize.10_21;
  switch (_22) <default: <L24> [INV], case 1: <L12> [INV], case 2: <L16> [INV], case 4: <L20> [INV]>

  <bb 15> :
<L12>:
  pcm_bTrgVarSigned.12_23 = pcm_bTrgVarSigned;
  if (pcm_bTrgVarSigned.12_23 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.11 = FMSTR_Compare8S;
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.11 = FMSTR_Compare8U;

  <bb 18> :
  pcm_pCompareFunc = iftmp.11;
  goto <bb 28>; [INV]

  <bb 19> :
<L16>:
  pcm_bTrgVarSigned.14_24 = pcm_bTrgVarSigned;
  if (pcm_bTrgVarSigned.14_24 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.13 = FMSTR_Compare16S;
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.13 = FMSTR_Compare16U;

  <bb 22> :
  pcm_pCompareFunc = iftmp.13;
  goto <bb 28>; [INV]

  <bb 23> :
<L20>:
  pcm_bTrgVarSigned.16_25 = pcm_bTrgVarSigned;
  if (pcm_bTrgVarSigned.16_25 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  iftmp.15 = FMSTR_Compare32S;
  goto <bb 26>; [INV]

  <bb 25> :
  iftmp.15 = FMSTR_Compare32U;

  <bb 26> :
  pcm_pCompareFunc = iftmp.15;
  goto <bb 28>; [INV]

  <bb 27> :
<L24>:
  nResponseCode = 134;
  // predicted unlikely by goto predictor.
  goto <bb 31>; [INV]

  <bb 28> :
  _26 = (short unsigned int) nRecVarsetSize;
  pcm_wRecTotalSmps.17_27 = pcm_wRecTotalSmps;
  blen = _26 * pcm_wRecTotalSmps.17_27;
  _28 = FMSTR_GetRecBuffSize ();
  if (blen > _28)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  nResponseCode = 134;
  // predicted unlikely by goto predictor.
  goto <bb 31>; [INV]

  <bb 30> :
  pcm_nRecBuffAddr.18_29 = pcm_nRecBuffAddr;
  _30 = (sizetype) blen;
  _31 = pcm_nRecBuffAddr.18_29 + _30;
  pcm_dwRecEndBuffPtr = _31;
  pcm_wRecFlags.flg.bIsConfigured = 1;
  nResponseCode = 0;

  <bb 31> :
FMSTR_SetUpRec_exit:
  MEM[(FMSTR_U8 *)pResponse] = nResponseCode;
  D.5800 = pResponse + 1;
  sz = {CLOBBER};

  <bb 32> :
<L31>:
  return D.5800;

}


FMSTR_SetUpRecBuff (unsigned char * pBuffer, FMSTR_SIZE_RECBUFF nBuffSize)
{
  <bb 2> :
  return;

}


FMSTR_AbortRec ()
{
  <bb 2> :
  pcm_wRecFlags.all = 0;
  return;

}


FMSTR_InitRec ()
{
  <bb 2> :
  pcm_wRecFlags.all = 0;
  pcm_nRecBuffAddr = &pcm_pOwnRecBuffer;
  return;

}


