IPA summary for Pwm_SetPhaseShift/24 is missing.
IPA summary for Pwm_Notification/23 is missing.
IPA summary for Pwm_GetChannelState/22 is missing.
IPA summary for Pwm_GetVersionInfo/21 is missing.
IPA summary for Pwm_EnableNotification/20 is missing.
IPA summary for Pwm_DisableNotification/19 is missing.
IPA summary for Pwm_GetOutputState/18 is missing.
IPA summary for Pwm_SetOutputToIdle/17 is missing.
IPA summary for Pwm_SetPeriodAndDuty/16 is missing.
IPA summary for Pwm_SetDutyCycle/15 is missing.
IPA summary for Pwm_DeInit/14 is missing.
IPA summary for Pwm_Init/13 is missing.
IPA summary for Pwm_ValidateSetOutPutToIdle/12 is missing.
IPA summary for Pwm_ValidateParamsPhaseShift/11 is missing.
IPA summary for Pwm_ValidateParamNotification/10 is missing.
IPA summary for Pwm_ValidateParamsPeriodClass/9 is missing.
IPA summary for Pwm_ValidateParamDuty/8 is missing.
IPA summary for Pwm_ValidateParamPtrInit/7 is missing.
IPA summary for Pwm_EndValidateChannelConfigCall/6 is missing.
IPA summary for Pwm_ValidateChannelConfigCall/5 is missing.
IPA summary for Pwm_EndValidateGlobalConfigCall/4 is missing.
IPA summary for Pwm_ValidateGlobalConfigCall/3 is missing.
IPA summary for Pwm_GetPartitionChannelIdx/2 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       38 calls, 38.000000 freq, 0 count
function body not available                       :       33 calls, 33.000000 freq, 0 count
IPA summary for Pwm_SetPhaseShift/24 is missing.
IPA summary for Pwm_Notification/23 is missing.
IPA summary for Pwm_GetChannelState/22 is missing.
IPA summary for Pwm_GetVersionInfo/21 is missing.
IPA summary for Pwm_EnableNotification/20 is missing.
IPA summary for Pwm_DisableNotification/19 is missing.
IPA summary for Pwm_GetOutputState/18 is missing.
IPA summary for Pwm_SetOutputToIdle/17 is missing.
IPA summary for Pwm_SetPeriodAndDuty/16 is missing.
IPA summary for Pwm_SetDutyCycle/15 is missing.
IPA summary for Pwm_DeInit/14 is missing.
IPA summary for Pwm_Init/13 is missing.
IPA summary for Pwm_ValidateSetOutPutToIdle/12 is missing.
IPA summary for Pwm_ValidateParamsPhaseShift/11 is missing.
IPA summary for Pwm_ValidateParamNotification/10 is missing.
IPA summary for Pwm_ValidateParamsPeriodClass/9 is missing.
IPA summary for Pwm_ValidateParamDuty/8 is missing.
IPA summary for Pwm_ValidateParamPtrInit/7 is missing.
IPA summary for Pwm_EndValidateChannelConfigCall/6 is missing.
IPA summary for Pwm_ValidateChannelConfigCall/5 is missing.
IPA summary for Pwm_EndValidateGlobalConfigCall/4 is missing.
IPA summary for Pwm_ValidateGlobalConfigCall/3 is missing.
IPA summary for Pwm_GetPartitionChannelIdx/2 is missing.
Symbol table:

Pwm_Ipw_ValidateSetPhaseShiftParams/42 (Pwm_Ipw_ValidateSetPhaseShiftParams) @069a78c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_ValidateParamsPhaseShift/11 
  Calls: 
Pwm_Ipw_SetPhaseShift/41 (Pwm_Ipw_SetPhaseShift) @069a7700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_SetPhaseShift/24 
  Calls: 
Pwm_Ipw_GetChannelState/40 (Pwm_Ipw_GetChannelState) @069a7460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_GetChannelState/22 
  Calls: 
Pwm_Ipw_ValidateNotification/39 (Pwm_Ipw_ValidateNotification) @069a71c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_ValidateParamNotification/10 
  Calls: 
Pwm_Ipw_EnableNotification/38 (Pwm_Ipw_EnableNotification) @069a7000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_EnableNotification/20 
  Calls: 
Pwm_Ipw_DisableNotification/37 (Pwm_Ipw_DisableNotification) @063a4e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_DisableNotification/19 
  Calls: 
Pwm_Ipw_GetOutputState/36 (Pwm_Ipw_GetOutputState) @063a4c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_GetOutputState/18 
  Calls: 
Pwm_Ipw_ValidateSetOutPutToIdle/35 (Pwm_Ipw_ValidateSetOutPutToIdle) @063a4a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_ValidateSetOutPutToIdle/12 
  Calls: 
Pwm_Ipw_SetOutputToIdle/34 (Pwm_Ipw_SetOutputToIdle) @063a48c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_SetOutputToIdle/17 
  Calls: 
Pwm_Ipw_GetMaxPeriodValue/33 (Pwm_Ipw_GetMaxPeriodValue) @063a4700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_ValidateParamsPeriodClass/9 
  Calls: 
Pwm_Ipw_SetPeriodAndDuty/32 (Pwm_Ipw_SetPeriodAndDuty) @063a4540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_SetPeriodAndDuty/16 
  Calls: 
Pwm_Ipw_SetDutyCycle/31 (Pwm_Ipw_SetDutyCycle) @063a41c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_SetDutyCycle/15 
  Calls: 
Pwm_Ipw_DeInitInstance/30 (Pwm_Ipw_DeInitInstance) @06914ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_DeInit/14 
  Calls: 
Pwm_Ipw_DeInit/29 (Pwm_Ipw_DeInit) @06914e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_DeInit/14 
  Calls: 
Pwm_Ipw_Init/28 (Pwm_Ipw_Init) @06914a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Init/13 
  Calls: 
Pwm_Ipw_InitInstance/27 (Pwm_Ipw_InitInstance) @069148c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Init/13 
  Calls: 
Pwm_Ipw_ValidateSetPhaseShift/26 (Pwm_Ipw_ValidateSetPhaseShift) @06914700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_ValidateChannelConfigCall/5 
  Calls: 
Det_ReportError/25 (Det_ReportError) @06914540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_GetVersionInfo/21 Pwm_SetDutyCycle/15 Pwm_ValidateChannelConfigCall/5 Pwm_ValidateChannelConfigCall/5 Pwm_ValidateChannelConfigCall/5 Pwm_ValidateChannelConfigCall/5 Pwm_ValidateGlobalConfigCall/3 Pwm_ValidateGlobalConfigCall/3 Pwm_ValidateParamsPhaseShift/11 Pwm_ValidateParamNotification/10 Pwm_ValidateParamNotification/10 Pwm_ValidateSetOutPutToIdle/12 Pwm_ValidateParamsPeriodClass/9 Pwm_ValidateParamsPeriodClass/9 Pwm_ValidateParamDuty/8 Pwm_ValidateParamPtrInit/7 
  Calls: 
Pwm_SetPhaseShift/24 (Pwm_SetPhaseShift) @06914000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_SetPhaseShift/41 Pwm_ValidateParamsPhaseShift/11 Pwm_ValidateParamsPeriodClass/9 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_Notification/23 (Pwm_Notification) @06909b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_GetPartitionChannelIdx/2 
   Indirect call
Pwm_GetChannelState/22 (Pwm_GetChannelState) @06909620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_GetChannelState/40 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_GetVersionInfo/21 (Pwm_GetVersionInfo) @069090e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Det_ReportError/25 
Pwm_EnableNotification/20 (Pwm_EnableNotification) @06909d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_EnableNotification/38 Pwm_ValidateParamNotification/10 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_DisableNotification/19 (Pwm_DisableNotification) @06909a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_DisableNotification/37 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_GetOutputState/18 (Pwm_GetOutputState) @069097e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_GetOutputState/36 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_SetOutputToIdle/17 (Pwm_SetOutputToIdle) @06909540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_SetOutputToIdle/34 Pwm_ValidateSetOutPutToIdle/12 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_SetPeriodAndDuty/16 (Pwm_SetPeriodAndDuty) @069092a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Pwm_Ipw_SetPeriodAndDuty/32 Pwm_ValidateParamDuty/8 Pwm_ValidateParamsPeriodClass/9 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_SetDutyCycle/15 (Pwm_SetDutyCycle) @06909000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateChannelConfigCall/6 Det_ReportError/25 Pwm_Ipw_SetDutyCycle/31 Pwm_ValidateParamDuty/8 Pwm_GetPartitionChannelIdx/2 Pwm_ValidateChannelConfigCall/5 
Pwm_DeInit/14 (Pwm_DeInit) @068fcb60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (write)Pwm_aState/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateGlobalConfigCall/4 Pwm_Ipw_DeInitInstance/30 Pwm_Ipw_DeInit/29 Pwm_ValidateGlobalConfigCall/3 
Pwm_Init/13 (Pwm_Init) @068fc620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (write)Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (write)Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_EndValidateGlobalConfigCall/4 Pwm_Ipw_Init/28 Pwm_Ipw_InitInstance/27 Pwm_ValidateParamPtrInit/7 Pwm_ValidateGlobalConfigCall/3 
Pwm_ValidateSetOutPutToIdle/12 (Pwm_ValidateSetOutPutToIdle) @068fc0e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_SetOutputToIdle/17 
  Calls: Det_ReportError/25 Pwm_Ipw_ValidateSetOutPutToIdle/35 
Pwm_ValidateParamsPhaseShift/11 (Pwm_ValidateParamsPhaseShift) @068fcd20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_SetPhaseShift/24 
  Calls: Det_ReportError/25 Pwm_Ipw_ValidateSetPhaseShiftParams/42 
Pwm_ValidateParamNotification/10 (Pwm_ValidateParamNotification) @068fca80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_EnableNotification/20 
  Calls: Det_ReportError/25 Pwm_Ipw_ValidateNotification/39 Det_ReportError/25 
Pwm_ValidateParamsPeriodClass/9 (Pwm_ValidateParamsPeriodClass) @068fc7e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_SetPhaseShift/24 Pwm_SetPeriodAndDuty/16 
  Calls: Det_ReportError/25 Pwm_Ipw_GetMaxPeriodValue/33 Det_ReportError/25 
Pwm_ValidateParamDuty/8 (Pwm_ValidateParamDuty) @068fc540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_SetPeriodAndDuty/16 Pwm_SetDutyCycle/15 
  Calls: Det_ReportError/25 
Pwm_ValidateParamPtrInit/7 (Pwm_ValidateParamPtrInit) @068fc2a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_Init/13 
  Calls: Det_ReportError/25 
Pwm_EndValidateChannelConfigCall/6 (Pwm_EndValidateChannelConfigCall) @068fc000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_SetPhaseShift/24 Pwm_GetChannelState/22 Pwm_EnableNotification/20 Pwm_DisableNotification/19 Pwm_GetOutputState/18 Pwm_SetOutputToIdle/17 Pwm_SetPeriodAndDuty/16 Pwm_SetDutyCycle/15 
  Calls: 
Pwm_ValidateChannelConfigCall/5 (Pwm_ValidateChannelConfigCall) @068f1a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (read)Pwm_aState/1 (read)Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Pwm_SetPhaseShift/24 Pwm_GetChannelState/22 Pwm_EnableNotification/20 Pwm_DisableNotification/19 Pwm_GetOutputState/18 Pwm_SetOutputToIdle/17 Pwm_SetPeriodAndDuty/16 Pwm_SetDutyCycle/15 
  Calls: Det_ReportError/25 Pwm_Ipw_ValidateSetPhaseShift/26 Det_ReportError/25 Pwm_GetPartitionChannelIdx/2 Det_ReportError/25 Det_ReportError/25 
Pwm_EndValidateGlobalConfigCall/4 (Pwm_EndValidateGlobalConfigCall) @068f1ee0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (write)Pwm_aState/1 (write)
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pwm_DeInit/14 Pwm_Init/13 
  Calls: 
Pwm_ValidateGlobalConfigCall/3 (Pwm_ValidateGlobalConfigCall) @068f1c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Pwm_aState/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Pwm_DeInit/14 Pwm_Init/13 
  Calls: Det_ReportError/25 Det_ReportError/25 
Pwm_GetPartitionChannelIdx/2 (Pwm_GetPartitionChannelIdx) @068f19a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Pwm_SetPhaseShift/24 Pwm_Notification/23 Pwm_GetChannelState/22 Pwm_EnableNotification/20 Pwm_DisableNotification/19 Pwm_GetOutputState/18 Pwm_SetOutputToIdle/17 Pwm_SetPeriodAndDuty/16 Pwm_SetDutyCycle/15 Pwm_ValidateChannelConfigCall/5 
  Calls: 
Pwm_aState/1 (Pwm_aState) @06845630
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Pwm_ValidateSetOutPutToIdle/12 (read)Pwm_EnableNotification/20 (read)Pwm_EndValidateGlobalConfigCall/4 (write)Pwm_ValidateParamNotification/10 (read)Pwm_ValidateParamsPeriodClass/9 (read)Pwm_DisableNotification/19 (read)Pwm_DeInit/14 (read)Pwm_SetPeriodAndDuty/16 (read)Pwm_SetOutputToIdle/17 (read)Pwm_ValidateParamNotification/10 (read)Pwm_ValidateGlobalConfigCall/3 (read)Pwm_SetOutputToIdle/17 (read)Pwm_GetChannelState/22 (read)Pwm_Init/13 (write)Pwm_Init/13 (read)Pwm_Init/13 (read)Pwm_Init/13 (read)Pwm_ValidateChannelConfigCall/5 (read)Pwm_ValidateChannelConfigCall/5 (read)Pwm_ValidateChannelConfigCall/5 (read)Pwm_Init/13 (read)Pwm_Init/13 (read)Pwm_DeInit/14 (write)Pwm_Notification/23 (read)Pwm_Init/13 (write)Pwm_DeInit/14 (write)Pwm_SetDutyCycle/15 (read)Pwm_EndValidateGlobalConfigCall/4 (write)Pwm_SetPeriodAndDuty/16 (read)Pwm_SetOutputToIdle/17 (write)Pwm_GetOutputState/18 (read)Pwm_Notification/23 (read)Pwm_DeInit/14 (read)Pwm_DeInit/14 (read)Pwm_DeInit/14 (read)Pwm_DeInit/14 (read)Pwm_Notification/23 (read)Pwm_SetPhaseShift/24 (read)Pwm_SetPhaseShift/24 (read)
  Availability: available
  Varpool flags: initialized

;; Function Pwm_GetPartitionChannelIdx (Pwm_GetPartitionChannelIdx, funcdef_no=1, decl_uid=6196, cgraph_uid=2, symbol_order=2)

Pwm_GetPartitionChannelIdx (uint32 coreId, Pwm_ChannelType channelNumber)
{
  uint8 D.6383;
  uint8 _2;

  <bb 2> :
  _2 = channelNumber_1(D);

  <bb 3> :
<L0>:
  return _2;

}



;; Function Pwm_ValidateGlobalConfigCall (Pwm_ValidateGlobalConfigCall, funcdef_no=2, decl_uid=6199, cgraph_uid=3, symbol_order=3)

Pwm_ValidateGlobalConfigCall (uint32 coreId, uint8 serviceId)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6392;
  <unnamed type> _1;
  Std_ReturnType _12;

  <bb 2> :
  retVal_4 = 0;
  _1 = Pwm_aState[coreId_6(D)].pwmDriverState;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (serviceId_7(D) != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  Det_ReportError (121, 0, serviceId_7(D), 17);
  retVal_11 = 1;
  goto <bb 7>; [INV]

  <bb 5> :
  if (serviceId_7(D) == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Det_ReportError (121, 0, serviceId_7(D), 20);
  retVal_9 = 1;

  <bb 7> :
  # retVal_2 = PHI <retVal_11(4), retVal_4(5), retVal_9(6), retVal_4(3)>
  _12 = retVal_2;

  <bb 8> :
<L7>:
  return _12;

}



;; Function Pwm_EndValidateGlobalConfigCall (Pwm_EndValidateGlobalConfigCall, funcdef_no=3, decl_uid=6203, cgraph_uid=4, symbol_order=4)

Pwm_EndValidateGlobalConfigCall (uint32 coreId, Std_ReturnType validCall, uint8 serviceId)
{
  <bb 2> :
  if (validCall_2(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (serviceId_4(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Pwm_aState[coreId_5(D)].pwmDriverState = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  Pwm_aState[coreId_5(D)].pwmDriverState = 1;

  <bb 6> :
  return;

}



;; Function Pwm_ValidateChannelConfigCall (Pwm_ValidateChannelConfigCall, funcdef_no=4, decl_uid=6207, cgraph_uid=5, symbol_order=5)

Pwm_ValidateChannelConfigCall (uint32 coreId, Pwm_ChannelType channelNumber, uint8 serviceId)
{
  Pwm_ChannelType partitionChannelIdx;
  Std_ReturnType retVal;
  Std_ReturnType D.6409;
  <unnamed type> _1;
  const struct Pwm_ConfigType * _2;
  unsigned char _3;
  const struct Pwm_ChannelConfigType * _4;
  unsigned int _5;
  unsigned int _6;
  const struct Pwm_ChannelConfigType * _7;
  const struct Pwm_IpwChannelConfigType * _8;
  unsigned char _9;
  Std_ReturnType _28;

  <bb 2> :
  retVal_12 = 0;
  _1 = Pwm_aState[coreId_14(D)].pwmDriverState;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  retVal_26 = 1;
  Det_ReportError (121, 0, serviceId_18(D), 17);
  goto <bb 13>; [INV]

  <bb 4> :
  if (channelNumber_15(D) != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  retVal_24 = 1;
  Det_ReportError (121, 0, serviceId_18(D), 18);
  goto <bb 13>; [INV]

  <bb 6> :
  partitionChannelIdx_17 = Pwm_GetPartitionChannelIdx (coreId_14(D), channelNumber_15(D));
  _2 = Pwm_aState[coreId_14(D)].pwmConfig;
  _3 = _2->numChannels;
  if (partitionChannelIdx_17 >= _3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  retVal_22 = 1;
  Det_ReportError (121, 0, serviceId_18(D), 64);
  goto <bb 13>; [INV]

  <bb 8> :
  if (serviceId_18(D) == 44)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (serviceId_18(D) == 45)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  if (serviceId_18(D) == 55)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _4 = Pwm_aState[coreId_14(D)].pwmChannelConfigs[0];
  _5 = (unsigned int) partitionChannelIdx_17;
  _6 = _5 * 28;
  _7 = _4 + _6;
  _8 = &_7->ipwChannelCfg;
  _9 = Pwm_Ipw_ValidateSetPhaseShift (_8);
  if (_9 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  retVal_20 = 1;
  Det_ReportError (121, 0, serviceId_18(D), 59);

  <bb 13> :
  # retVal_10 = PHI <retVal_26(3), retVal_24(5), retVal_22(7), retVal_12(10), retVal_12(11), retVal_20(12)>
  _28 = retVal_10;

  <bb 14> :
<L15>:
  return _28;

}



;; Function Pwm_EndValidateChannelConfigCall (Pwm_EndValidateChannelConfigCall, funcdef_no=5, decl_uid=6209, cgraph_uid=6, symbol_order=6)

Pwm_EndValidateChannelConfigCall (Pwm_ChannelType channelNumber)
{
  <bb 2> :
  return;

}



;; Function Pwm_ValidateParamPtrInit (Pwm_ValidateParamPtrInit, funcdef_no=6, decl_uid=6212, cgraph_uid=7, symbol_order=7)

Pwm_ValidateParamPtrInit (uint32 coreId, const struct Pwm_ConfigType * configPtr)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6418;
  Std_ReturnType _8;

  <bb 2> :
  retVal_3 = 0;
  if (configPtr_4(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, 0, 16);
  retVal_7 = 1;

  <bb 4> :
  # retVal_1 = PHI <retVal_3(2), retVal_7(3)>
  _8 = retVal_1;

  <bb 5> :
<L3>:
  return _8;

}



;; Function Pwm_ValidateParamDuty (Pwm_ValidateParamDuty, funcdef_no=7, decl_uid=6215, cgraph_uid=8, symbol_order=8)

Pwm_ValidateParamDuty (uint16 dutyCycle, uint8 serviceId)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6435;
  Std_ReturnType _9;

  <bb 2> :
  retVal_3 = 0;
  if (dutyCycle_4(D) > 32768)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, serviceId_6(D), 50);
  retVal_8 = 1;

  <bb 4> :
  # retVal_1 = PHI <retVal_3(2), retVal_8(3)>
  _9 = retVal_1;

  <bb 5> :
<L2>:
  return _9;

}



;; Function Pwm_ValidateParamsPeriodClass (Pwm_ValidateParamsPeriodClass, funcdef_no=8, decl_uid=6221, cgraph_uid=9, symbol_order=9)

Pwm_ValidateParamsPeriodClass (uint32 coreId, Pwm_ChannelType channelNumber, Pwm_ChannelClassType channelClass, Pwm_PeriodType period, uint8 serviceId)
{
  uint32 PeriodMaxValue;
  Std_ReturnType retVal;
  Std_ReturnType D.6449;
  const struct Pwm_ChannelConfigType * _1;
  unsigned int _2;
  unsigned int _3;
  const struct Pwm_ChannelConfigType * _4;
  const struct Pwm_IpwChannelConfigType * _5;
  long unsigned int _6;
  Std_ReturnType _23;

  <bb 2> :
  retVal_9 = 0;
  PeriodMaxValue_10 = 0;
  if (channelClass_11(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, serviceId_18(D), 19);
  retVal_22 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _1 = Pwm_aState[coreId_13(D)].pwmChannelConfigs[0];
  _2 = (unsigned int) channelNumber_14(D);
  _3 = _2 * 28;
  _4 = _1 + _3;
  _5 = &_4->ipwChannelCfg;
  PeriodMaxValue_16 = Pwm_Ipw_GetMaxPeriodValue (_5);
  _6 = (long unsigned int) period_17(D);
  if (PeriodMaxValue_16 < _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Det_ReportError (121, 0, serviceId_18(D), 26);
  retVal_20 = 1;

  <bb 6> :
  # retVal_7 = PHI <retVal_22(3), retVal_9(4), retVal_20(5)>
  _23 = retVal_7;

  <bb 7> :
<L6>:
  return _23;

}



;; Function Pwm_ValidateParamNotification (Pwm_ValidateParamNotification, funcdef_no=9, decl_uid=6225, cgraph_uid=10, symbol_order=10)

Pwm_ValidateParamNotification (uint32 coreId, Pwm_ChannelType channelNumber, Pwm_EdgeNotificationType notification)
{
  void (*Pwm_NotifyType) (void) pPwmChannelNotification;
  Std_ReturnType retVal;
  Std_ReturnType D.6474;
  const struct Pwm_ChannelConfigType * _1;
  unsigned int _2;
  unsigned int _3;
  const struct Pwm_ChannelConfigType * _4;
  const struct Pwm_ChannelConfigType * _5;
  unsigned int _6;
  unsigned int _7;
  const struct Pwm_ChannelConfigType * _8;
  const struct Pwm_IpwChannelConfigType * _9;
  Std_ReturnType _23;

  <bb 2> :
  retVal_12 = 0;
  _1 = Pwm_aState[coreId_14(D)].pwmChannelConfigs[0];
  _2 = (unsigned int) channelNumber_15(D);
  _3 = _2 * 28;
  _4 = _1 + _3;
  pPwmChannelNotification_16 = _4->pfPwmChannelNotification;
  if (pPwmChannelNotification_16 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, 7, 49);
  retVal_22 = 1;
  goto <bb 6>; [INV]

  <bb 4> :
  _5 = Pwm_aState[coreId_14(D)].pwmChannelConfigs[0];
  _6 = (unsigned int) channelNumber_15(D);
  _7 = _6 * 28;
  _8 = _5 + _7;
  _9 = &_8->ipwChannelCfg;
  retVal_19 = Pwm_Ipw_ValidateNotification (notification_17(D), _9);
  if (retVal_19 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Det_ReportError (121, 0, 7, 48);

  <bb 6> :
  # retVal_10 = PHI <retVal_22(3), retVal_19(4), retVal_19(5)>
  _23 = retVal_10;

  <bb 7> :
<L5>:
  return _23;

}



;; Function Pwm_ValidateParamsPhaseShift (Pwm_ValidateParamsPhaseShift, funcdef_no=10, decl_uid=6228, cgraph_uid=11, symbol_order=11)

Pwm_ValidateParamsPhaseShift (uint16 phaseShift, uint8 serviceId)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6495;
  Std_ReturnType _9;

  <bb 2> :
  retVal_2 = 0;
  retVal_6 = Pwm_Ipw_ValidateSetPhaseShiftParams (phaseShift_4(D));
  if (retVal_6 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, serviceId_7(D), 58);

  <bb 4> :
  _9 = retVal_6;

  <bb 5> :
<L2>:
  return _9;

}



;; Function Pwm_ValidateSetOutPutToIdle (Pwm_ValidateSetOutPutToIdle, funcdef_no=11, decl_uid=6231, cgraph_uid=12, symbol_order=12)

Pwm_ValidateSetOutPutToIdle (uint32 coreId, Pwm_ChannelType channelNumber)
{
  Std_ReturnType retVal;
  Std_ReturnType D.6457;
  const struct Pwm_ChannelConfigType * _1;
  unsigned int _2;
  unsigned int _3;
  const struct Pwm_ChannelConfigType * _4;
  const struct Pwm_IpwChannelConfigType * _5;
  Std_ReturnType _14;

  <bb 2> :
  retVal_7 = 0;
  _1 = Pwm_aState[coreId_9(D)].pwmChannelConfigs[0];
  _2 = (unsigned int) channelNumber_10(D);
  _3 = _2 * 28;
  _4 = _1 + _3;
  _5 = &_4->ipwChannelCfg;
  retVal_12 = Pwm_Ipw_ValidateSetOutPutToIdle (_5);
  if (retVal_12 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportError (121, 0, 4, 66);

  <bb 4> :
  _14 = retVal_12;

  <bb 5> :
<L2>:
  return _14;

}



;; Function Pwm_Init (Pwm_Init, funcdef_no=12, decl_uid=5938, cgraph_uid=13, symbol_order=13)

Pwm_Init (const struct Pwm_ConfigType * configPtr)
{
  uint8 index;
  uint32 coreId;
  Std_ReturnType callIsValid;
  const struct Pwm_ConfigType * _1;
  const struct Pwm_IpwInstanceConfigType[<unknown>] * _2;
  int _3;
  const struct Pwm_IpwInstanceConfigType * _4;
  unsigned char index.0_5;
  const struct Pwm_ConfigType * _6;
  unsigned char _7;
  const struct Pwm_ConfigType * _8;
  const struct Pwm_ChannelConfigType[<unknown>] * _9;
  int _10;
  int _11;
  const struct Pwm_ChannelConfigType * _12;
  const struct Pwm_ConfigType * _13;
  const struct Pwm_ChannelConfigType[<unknown>] * _14;
  int _15;
  const struct Pwm_IpwChannelConfigType * _16;
  unsigned char index.1_17;
  const struct Pwm_ConfigType * _18;
  unsigned char _19;

  <bb 2> :
  coreId_26 = 0;
  callIsValid_29 = Pwm_ValidateGlobalConfigCall (coreId_26, 0);
  if (callIsValid_29 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  callIsValid_32 = Pwm_ValidateParamPtrInit (coreId_26, configPtr_30(D));
  if (callIsValid_32 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 4> :
  Pwm_aState[coreId_26].pwmConfig = configPtr_30(D);
  index_34 = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _1 = Pwm_aState[coreId_26].pwmConfig;
  _2 = _1->pwmInstancesConfig;
  _3 = (int) index_21;
  _4 = &*_2[_3];
  Pwm_Ipw_InitInstance (_4);
  index.0_5 = index_21;
  index_40 = index.0_5 + 1;

  <bb 6> :
  # index_21 = PHI <index_34(4), index_40(5)>
  _6 = Pwm_aState[coreId_26].pwmConfig;
  _7 = _6->numInstances;
  if (index_21 < _7)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  index_35 = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  _8 = Pwm_aState[coreId_26].pwmConfig;
  _9 = _8->pwmChannelsConfig;
  _10 = (int) index_22;
  _11 = (int) index_22;
  _12 = &*_9[_10];
  Pwm_aState[coreId_26].pwmChannelConfigs[_11] = _12;
  _13 = Pwm_aState[coreId_26].pwmConfig;
  _14 = _13->pwmChannelsConfig;
  _15 = (int) index_22;
  _16 = &*_14[_15].ipwChannelCfg;
  Pwm_Ipw_Init (_16);
  index.1_17 = index_22;
  index_38 = index.1_17 + 1;

  <bb 9> :
  # index_22 = PHI <index_35(7), index_38(8)>
  _18 = Pwm_aState[coreId_26].pwmConfig;
  _19 = _18->numChannels;
  if (index_22 < _19)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  # callIsValid_20 = PHI <callIsValid_29(2), callIsValid_32(3), callIsValid_32(9)>
  Pwm_EndValidateGlobalConfigCall (coreId_26, callIsValid_20, 0);
  return;

}



;; Function Pwm_DeInit (Pwm_DeInit, funcdef_no=13, decl_uid=5940, cgraph_uid=14, symbol_order=14)

Pwm_DeInit ()
{
  uint8 index;
  uint32 coreId;
  const struct Pwm_ConfigType * configPtr;
  Std_ReturnType callIsValid;
  const struct Pwm_ChannelConfigType * _1;
  unsigned int _2;
  unsigned int _3;
  const struct Pwm_ChannelConfigType * _4;
  const struct Pwm_IpwChannelConfigType * _5;
  const struct Pwm_ChannelConfigType * _6;
  unsigned int _7;
  unsigned int _8;
  const struct Pwm_ChannelConfigType * _9;
  <unnamed type> _10;
  unsigned char index.2_11;
  const struct Pwm_ConfigType * _12;
  unsigned char _13;
  const struct Pwm_IpwInstanceConfigType[<unknown>] * _14;
  int _15;
  const struct Pwm_IpwInstanceConfigType * _16;
  unsigned char index.3_17;
  const struct Pwm_ConfigType * _18;
  unsigned char _19;
  int _20;
  unsigned char index.4_21;

  <bb 2> :
  coreId_29 = 0;
  callIsValid_32 = Pwm_ValidateGlobalConfigCall (coreId_29, 1);
  if (callIsValid_32 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  index_33 = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = Pwm_aState[coreId_29].pwmChannelConfigs[0];
  _2 = (unsigned int) index_22;
  _3 = _2 * 28;
  _4 = _1 + _3;
  _5 = &_4->ipwChannelCfg;
  _6 = Pwm_aState[coreId_29].pwmChannelConfigs[0];
  _7 = (unsigned int) index_22;
  _8 = _7 * 28;
  _9 = _6 + _8;
  _10 = _9->channelIdleState;
  Pwm_Ipw_DeInit (_5, _10);
  index.2_11 = index_22;
  index_43 = index.2_11 + 1;

  <bb 5> :
  # index_22 = PHI <index_33(3), index_43(4)>
  _12 = Pwm_aState[coreId_29].pwmConfig;
  _13 = _12->numChannels;
  if (index_22 < _13)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  configPtr_34 = Pwm_aState[coreId_29].pwmConfig;
  index_35 = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _14 = configPtr_34->pwmInstancesConfig;
  _15 = (int) index_23;
  _16 = &*_14[_15];
  Pwm_Ipw_DeInitInstance (_16);
  index.3_17 = index_23;
  index_41 = index.3_17 + 1;

  <bb 8> :
  # index_23 = PHI <index_35(6), index_41(7)>
  _18 = Pwm_aState[coreId_29].pwmConfig;
  _19 = _18->numInstances;
  if (index_23 < _19)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  Pwm_aState[coreId_29].pwmConfig = 0B;
  index_37 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  _20 = (int) index_24;
  Pwm_aState[coreId_29].pwmChannelConfigs[_20] = 0B;
  index.4_21 = index_24;
  index_39 = index.4_21 + 1;

  <bb 11> :
  # index_24 = PHI <index_37(9), index_39(10)>
  if (index_24 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  Pwm_EndValidateGlobalConfigCall (coreId_29, callIsValid_32, 1);
  return;

}



;; Function Pwm_SetDutyCycle (Pwm_SetDutyCycle, funcdef_no=14, decl_uid=5943, cgraph_uid=15, symbol_order=15)

Pwm_SetDutyCycle (Pwm_ChannelType channelNumber, uint16 dutyCycle)
{
  Std_ReturnType retVal;
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  unsigned char _2;
  const struct Pwm_ChannelConfigType * _3;
  unsigned int _4;
  unsigned int _5;
  const struct Pwm_ChannelConfigType * _6;
  const struct Pwm_IpwChannelConfigType * _7;

  <bb 2> :
  retVal_9 = 0;
  coreId_10 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_10, channelNumber_12(D), 2);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  partitionChannelIdx_15 = Pwm_GetPartitionChannelIdx (coreId_10, channelNumber_12(D));
  _2 = Pwm_ValidateParamDuty (dutyCycle_16(D), 2);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = Pwm_aState[coreId_10].pwmChannelConfigs[0];
  _4 = (unsigned int) partitionChannelIdx_15;
  _5 = _4 * 28;
  _6 = _3 + _5;
  _7 = &_6->ipwChannelCfg;
  retVal_19 = Pwm_Ipw_SetDutyCycle (dutyCycle_16(D), _7);
  if (retVal_19 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Det_ReportError (121, 0, 2, 52);

  <bb 6> :
  Pwm_EndValidateChannelConfigCall (channelNumber_12(D));
  return;

}



;; Function Pwm_SetPeriodAndDuty (Pwm_SetPeriodAndDuty, funcdef_no=15, decl_uid=5947, cgraph_uid=16, symbol_order=16)

Pwm_SetPeriodAndDuty (Pwm_ChannelType channelNumber, Pwm_PeriodType period, uint16 dutyCycle)
{
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  const struct Pwm_ChannelConfigType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Pwm_ChannelConfigType * _5;
  <unnamed type> _6;
  unsigned char _7;
  unsigned char _8;
  const struct Pwm_ChannelConfigType * _9;
  unsigned int _10;
  unsigned int _11;
  const struct Pwm_ChannelConfigType * _12;
  const struct Pwm_IpwChannelConfigType * _13;

  <bb 2> :
  coreId_15 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_15, channelNumber_17(D), 3);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  partitionChannelIdx_20 = Pwm_GetPartitionChannelIdx (coreId_15, channelNumber_17(D));
  _2 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _3 = (unsigned int) partitionChannelIdx_20;
  _4 = _3 * 28;
  _5 = _2 + _4;
  _6 = _5->pwmChannelClass;
  _7 = Pwm_ValidateParamsPeriodClass (coreId_15, partitionChannelIdx_20, _6, period_21(D), 3);
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _8 = Pwm_ValidateParamDuty (dutyCycle_23(D), 3);
  if (_8 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _9 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _10 = (unsigned int) partitionChannelIdx_20;
  _11 = _10 * 28;
  _12 = _9 + _11;
  _13 = &_12->ipwChannelCfg;
  Pwm_Ipw_SetPeriodAndDuty (period_21(D), dutyCycle_23(D), _13);

  <bb 6> :
  Pwm_EndValidateChannelConfigCall (channelNumber_17(D));
  return;

}



;; Function Pwm_SetOutputToIdle (Pwm_SetOutputToIdle, funcdef_no=16, decl_uid=5949, cgraph_uid=17, symbol_order=17)

Pwm_SetOutputToIdle (Pwm_ChannelType channelNumber)
{
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  unsigned char _2;
  const struct Pwm_ChannelConfigType * _3;
  unsigned int _4;
  unsigned int _5;
  const struct Pwm_ChannelConfigType * _6;
  <unnamed type> _7;
  const struct Pwm_ChannelConfigType * _8;
  unsigned int _9;
  unsigned int _10;
  const struct Pwm_ChannelConfigType * _11;
  const struct Pwm_IpwChannelConfigType * _12;
  int _13;

  <bb 2> :
  coreId_15 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_15, channelNumber_17(D), 4);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  partitionChannelIdx_20 = Pwm_GetPartitionChannelIdx (coreId_15, channelNumber_17(D));
  _2 = Pwm_ValidateSetOutPutToIdle (coreId_15, partitionChannelIdx_20);
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _4 = (unsigned int) partitionChannelIdx_20;
  _5 = _4 * 28;
  _6 = _3 + _5;
  _7 = _6->channelIdleState;
  _8 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _9 = (unsigned int) partitionChannelIdx_20;
  _10 = _9 * 28;
  _11 = _8 + _10;
  _12 = &_11->ipwChannelCfg;
  Pwm_Ipw_SetOutputToIdle (_7, _12);
  _13 = (int) partitionChannelIdx_20;
  Pwm_aState[coreId_15].pwmChannelIdleState[_13] = 1;

  <bb 5> :
  Pwm_EndValidateChannelConfigCall (channelNumber_17(D));
  return;

}



;; Function Pwm_GetOutputState (Pwm_GetOutputState, funcdef_no=17, decl_uid=5951, cgraph_uid=18, symbol_order=18)

Pwm_GetOutputState (Pwm_ChannelType channelNumber)
{
  Pwm_OutputStateType retVal;
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  Pwm_OutputStateType D.6461;
  unsigned char _1;
  const struct Pwm_ChannelConfigType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Pwm_ChannelConfigType * _5;
  const struct Pwm_IpwChannelConfigType * _6;
  Pwm_OutputStateType _19;

  <bb 2> :
  retVal_9 = 0;
  coreId_10 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_10, channelNumber_12(D), 5);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  partitionChannelIdx_15 = Pwm_GetPartitionChannelIdx (coreId_10, channelNumber_12(D));
  _2 = Pwm_aState[coreId_10].pwmChannelConfigs[0];
  _3 = (unsigned int) partitionChannelIdx_15;
  _4 = _3 * 28;
  _5 = _2 + _4;
  _6 = &_5->ipwChannelCfg;
  retVal_17 = Pwm_Ipw_GetOutputState (_6);

  <bb 4> :
  # retVal_7 = PHI <retVal_9(2), retVal_17(3)>
  Pwm_EndValidateChannelConfigCall (channelNumber_12(D));
  _19 = retVal_7;

  <bb 5> :
<L2>:
  return _19;

}



;; Function Pwm_DisableNotification (Pwm_DisableNotification, funcdef_no=18, decl_uid=5956, cgraph_uid=19, symbol_order=19)

Pwm_DisableNotification (Pwm_ChannelType channelNumber)
{
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  const struct Pwm_ChannelConfigType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Pwm_ChannelConfigType * _5;
  const struct Pwm_IpwChannelConfigType * _6;

  <bb 2> :
  coreId_8 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_8, channelNumber_10(D), 6);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  partitionChannelIdx_13 = Pwm_GetPartitionChannelIdx (coreId_8, channelNumber_10(D));
  _2 = Pwm_aState[coreId_8].pwmChannelConfigs[0];
  _3 = (unsigned int) partitionChannelIdx_13;
  _4 = _3 * 28;
  _5 = _2 + _4;
  _6 = &_5->ipwChannelCfg;
  Pwm_Ipw_DisableNotification (_6);

  <bb 4> :
  Pwm_EndValidateChannelConfigCall (channelNumber_10(D));
  return;

}



;; Function Pwm_EnableNotification (Pwm_EnableNotification, funcdef_no=19, decl_uid=5954, cgraph_uid=20, symbol_order=20)

Pwm_EnableNotification (Pwm_ChannelType channelNumber, Pwm_EdgeNotificationType notification)
{
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  unsigned char _2;
  const struct Pwm_ChannelConfigType * _3;
  unsigned int _4;
  unsigned int _5;
  const struct Pwm_ChannelConfigType * _6;
  const struct Pwm_IpwChannelConfigType * _7;

  <bb 2> :
  coreId_9 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_9, channelNumber_11(D), 7);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  partitionChannelIdx_14 = Pwm_GetPartitionChannelIdx (coreId_9, channelNumber_11(D));
  _2 = Pwm_ValidateParamNotification (coreId_9, partitionChannelIdx_14, notification_15(D));
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = Pwm_aState[coreId_9].pwmChannelConfigs[0];
  _4 = (unsigned int) partitionChannelIdx_14;
  _5 = _4 * 28;
  _6 = _3 + _5;
  _7 = &_6->ipwChannelCfg;
  Pwm_Ipw_EnableNotification (notification_15(D), _7);

  <bb 5> :
  Pwm_EndValidateChannelConfigCall (channelNumber_11(D));
  return;

}



;; Function Pwm_GetVersionInfo (Pwm_GetVersionInfo, funcdef_no=20, decl_uid=5958, cgraph_uid=21, symbol_order=21)

Pwm_GetVersionInfo (struct Std_VersionInfoType * versionInfo)
{
  <bb 2> :
  if (versionInfo_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  versionInfo_2(D)->vendorID = 43;
  versionInfo_2(D)->moduleID = 121;
  versionInfo_2(D)->sw_major_version = 1;
  versionInfo_2(D)->sw_minor_version = 0;
  versionInfo_2(D)->sw_patch_version = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  Det_ReportError (121, 0, 8, 21);

  <bb 5> :
  return;

}



;; Function Pwm_GetChannelState (Pwm_GetChannelState, funcdef_no=21, decl_uid=5960, cgraph_uid=22, symbol_order=22)

Pwm_GetChannelState (Pwm_ChannelType channelNumber)
{
  uint16 dutyCycle;
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  uint16 D.6481;
  unsigned char _1;
  const struct Pwm_ChannelConfigType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Pwm_ChannelConfigType * _5;
  const struct Pwm_IpwChannelConfigType * _6;
  uint16 _19;

  <bb 2> :
  dutyCycle_9 = 0;
  coreId_10 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_10, channelNumber_12(D), 32);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  partitionChannelIdx_15 = Pwm_GetPartitionChannelIdx (coreId_10, channelNumber_12(D));
  _2 = Pwm_aState[coreId_10].pwmChannelConfigs[0];
  _3 = (unsigned int) partitionChannelIdx_15;
  _4 = _3 * 28;
  _5 = _2 + _4;
  _6 = &_5->ipwChannelCfg;
  dutyCycle_17 = Pwm_Ipw_GetChannelState (_6);

  <bb 4> :
  # dutyCycle_7 = PHI <dutyCycle_9(2), dutyCycle_17(3)>
  Pwm_EndValidateChannelConfigCall (channelNumber_12(D));
  _19 = dutyCycle_7;

  <bb 5> :
<L2>:
  return _19;

}



;; Function Pwm_Notification (Pwm_Notification, funcdef_no=22, decl_uid=5966, cgraph_uid=23, symbol_order=23)

Pwm_Notification (uint8 channel)
{
  void (*Pwm_NotifyType) (void) pfNotify;
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  uint8 logicChannel;
  const struct Pwm_ConfigType * _1;
  const struct Pwm_ConfigType * _2;
  int _3;
  const struct Pwm_ChannelConfigType * _4;
  unsigned int _5;
  unsigned int _6;
  const struct Pwm_ChannelConfigType * _7;

  <bb 2> :
  coreId_9 = 0;
  _1 = Pwm_aState[coreId_9].pwmConfig;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = Pwm_aState[coreId_9].pwmConfig;
  _3 = (int) channel_11(D);
  logicChannel_12 = _2->hwToLogicChannelMap[_3];
  partitionChannelIdx_14 = Pwm_GetPartitionChannelIdx (coreId_9, logicChannel_12);
  _4 = Pwm_aState[coreId_9].pwmChannelConfigs[0];
  _5 = (unsigned int) partitionChannelIdx_14;
  _6 = _5 * 28;
  _7 = _4 + _6;
  pfNotify_15 = _7->pfPwmChannelNotification;
  if (pfNotify_15 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pfNotify_15 ();

  <bb 5> :
  return;

}



;; Function Pwm_SetPhaseShift (Pwm_SetPhaseShift, funcdef_no=23, decl_uid=5964, cgraph_uid=24, symbol_order=24)

Pwm_SetPhaseShift (Pwm_ChannelType channelNumber, Pwm_PeriodType period, uint16 phaseShift)
{
  Pwm_ChannelType partitionChannelIdx;
  uint32 coreId;
  unsigned char _1;
  const struct Pwm_ChannelConfigType * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Pwm_ChannelConfigType * _5;
  <unnamed type> _6;
  unsigned char _7;
  unsigned char _8;
  const struct Pwm_ChannelConfigType * _9;
  unsigned int _10;
  unsigned int _11;
  const struct Pwm_ChannelConfigType * _12;
  const struct Pwm_IpwChannelConfigType * _13;

  <bb 2> :
  coreId_15 = 0;
  _1 = Pwm_ValidateChannelConfigCall (coreId_15, channelNumber_17(D), 44);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  partitionChannelIdx_20 = Pwm_GetPartitionChannelIdx (coreId_15, channelNumber_17(D));
  _2 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _3 = (unsigned int) partitionChannelIdx_20;
  _4 = _3 * 28;
  _5 = _2 + _4;
  _6 = _5->pwmChannelClass;
  _7 = Pwm_ValidateParamsPeriodClass (coreId_15, partitionChannelIdx_20, _6, period_21(D), 44);
  if (_7 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _8 = Pwm_ValidateParamsPhaseShift (phaseShift_23(D), 44);
  if (_8 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _9 = Pwm_aState[coreId_15].pwmChannelConfigs[0];
  _10 = (unsigned int) partitionChannelIdx_20;
  _11 = _10 * 28;
  _12 = _9 + _11;
  _13 = &_12->ipwChannelCfg;
  Pwm_Ipw_SetPhaseShift (period_21(D), phaseShift_23(D), _13);

  <bb 6> :
  Pwm_EndValidateChannelConfigCall (channelNumber_17(D));
  return;

}


