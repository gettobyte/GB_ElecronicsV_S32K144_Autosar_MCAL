Ram_Ip_InitRamSection (const struct Ram_Ip_RamConfigType * Ram_Ip_pRamConfigPtr)
{
  Ram_Ip_RamSizeType RamCounterLimit;
  Ram_Ip_RamIndexType RamCounter;
  Ram_Ip_StatusType RamStatus;
  Ram_Ip_StatusType D.5593;

  <bb 2> :
  RamStatus = 0;
  _1 = Ram_Ip_pRamConfigPtr->RamSize;
  _2 = (long unsigned int) _1;
  _3 = Ram_Ip_pRamConfigPtr->RamWriteSize;
  RamCounterLimit = _2 / _3;
  RamStatus = 0;
  RamCounter = 0;
  goto <bb 10>; [INV]

  <bb 3> :
  _4 = Ram_Ip_pRamConfigPtr->RamWriteSize;
  switch (_4) <default: <L5> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 4: <L3> [INV], case 8: <L4> [INV]>

  <bb 4> :
<L1>:
  _5 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _6 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _7 = (unsigned char) _5;
  *_6[RamCounter] = _7;
  goto <bb 9>; [INV]

  <bb 5> :
<L2>:
  _8 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _9 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _10 = (short unsigned int) _8;
  MEM[(uint16[1] *)_9][RamCounter] = _10;
  goto <bb 9>; [INV]

  <bb 6> :
<L3>:
  _11 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _12 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _13 = (long unsigned int) _11;
  MEM[(uint32[1] *)_12][RamCounter] = _13;
  goto <bb 9>; [INV]

  <bb 7> :
<L4>:
  _14 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _15 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  MEM[(uint64[1] *)_14][RamCounter] = _15;
  goto <bb 9>; [INV]

  <bb 8> :
<L5>:
  RamStatus = 1;

  <bb 9> :
  RamCounter = RamCounter + 1;

  <bb 10> :
  if (RamCounter < RamCounterLimit)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  if (RamStatus == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (RamStatus == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 13> :
  RamCounter = 0;
  goto <bb 29>; [INV]

  <bb 14> :
  _16 = Ram_Ip_pRamConfigPtr->RamWriteSize;
  switch (_16) <default: <L24> [INV], case 1: <L12> [INV], case 2: <L15> [INV], case 4: <L18> [INV], case 8: <L21> [INV]>

  <bb 15> :
<L12>:
  _17 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _18 = (unsigned char) _17;
  _19 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _20 = *_19[RamCounter];
  if (_18 != _20)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  RamStatus = 1;

  <bb 17> :
  goto <bb 28>; [INV]

  <bb 18> :
<L15>:
  _21 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _22 = (short unsigned int) _21;
  _23 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _24 = MEM[(uint16[1] *)_23][RamCounter];
  if (_22 != _24)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  RamStatus = 1;

  <bb 20> :
  goto <bb 28>; [INV]

  <bb 21> :
<L18>:
  _25 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _26 = (long unsigned int) _25;
  _27 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _28 = MEM[(uint32[1] *)_27][RamCounter];
  if (_26 != _28)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  RamStatus = 1;

  <bb 23> :
  goto <bb 28>; [INV]

  <bb 24> :
<L21>:
  _29 = Ram_Ip_pRamConfigPtr->u64RamDefaultValue;
  _30 = Ram_Ip_pRamConfigPtr->pu8RamBaseAddr;
  _31 = MEM[(uint64[1] *)_30][RamCounter];
  if (_29 != _31)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  RamStatus = 1;

  <bb 26> :
  goto <bb 28>; [INV]

  <bb 27> :
<L24>:
  RamStatus = 1;

  <bb 28> :
  RamCounter = RamCounter + 1;

  <bb 29> :
  if (RamCounter < RamCounterLimit)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  if (RamStatus == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 31> :
  D.5593 = RamStatus;

  <bb 32> :
<L30>:
  return D.5593;

}


