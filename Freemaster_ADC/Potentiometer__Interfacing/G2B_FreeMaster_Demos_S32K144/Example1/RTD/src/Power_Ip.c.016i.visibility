
Marking local functions:


Marking externally visible functions: Power_Ip_InstallNotificationsCallback Power_Ip_EnableSleepOnExit Power_Ip_DisableSleepOnExit Power_Ip_InitPower Power_Ip_InitReset Power_Ip_GetResetRawValue Power_Ip_GetResetReason Power_Ip_SetMode


Marking externally visible variables: powerReportErrorsCallback


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Power_Ip_CM4_EnableSleepOnExit/21 (Power_Ip_CM4_EnableSleepOnExit) @068dc000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_EnableSleepOnExit/8 
  Calls: 
Power_Ip_CM4_DisableSleepOnExit/20 (Power_Ip_CM4_DisableSleepOnExit) @068d7e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_DisableSleepOnExit/7 
  Calls: 
Power_Ip_SMC_AllowedModesConfig/19 (Power_Ip_SMC_AllowedModesConfig) @068d7c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_InitPower/6 
  Calls: 
Power_Ip_PMC_PowerInit/18 (Power_Ip_PMC_PowerInit) @068d7b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_InitPower/6 
  Calls: 
Power_Ip_RCM_ResetInit/17 (Power_Ip_RCM_ResetInit) @068d79a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_InitReset/5 
  Calls: 
Power_Ip_RCM_GetResetRawValue/16 (Power_Ip_RCM_GetResetRawValue) @068d77e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_GetResetRawValue/4 
  Calls: 
Power_Ip_RCM_GetResetReason/15 (Power_Ip_RCM_GetResetReason) @068d7620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_GetResetReason/3 
  Calls: 
resetReasonArray.5767/14 (resetReasonArray) @068d8288
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Power_Ip_ConvertIntergeToResetType/2 (read)Power_Ip_ConvertIntergeToResetType/2 (read)Power_Ip_ConvertIntergeToResetType/2 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
ReportPowerErrors/13 (ReportPowerErrors) @068d7380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
Power_Ip_SMC_ModeConfig/12 (Power_Ip_SMC_ModeConfig) @068d72a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
Power_Ip_SMC_ModeCheckEntry/11 (Power_Ip_SMC_ModeCheckEntry) @068d71c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Power_Ip_SetMode/1 
  Calls: 
ReportPowerErrorsEmptyCallback/10 (ReportPowerErrorsEmptyCallback) @068d58c0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: powerReportErrorsCallback/0 (addr)
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
Power_Ip_InstallNotificationsCallback/9 (Power_Ip_InstallNotificationsCallback) @068d5620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: powerReportErrorsCallback/0 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Power_Ip_EnableSleepOnExit/8 (Power_Ip_EnableSleepOnExit) @068d50e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_CM4_EnableSleepOnExit/21 
Power_Ip_DisableSleepOnExit/7 (Power_Ip_DisableSleepOnExit) @068d5d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_CM4_DisableSleepOnExit/20 
Power_Ip_InitPower/6 (Power_Ip_InitPower) @068d5a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_SMC_AllowedModesConfig/19 Power_Ip_PMC_PowerInit/18 
Power_Ip_InitReset/5 (Power_Ip_InitReset) @068d57e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_RCM_ResetInit/17 
Power_Ip_GetResetRawValue/4 (Power_Ip_GetResetRawValue) @068d5540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_RCM_GetResetRawValue/16 
Power_Ip_GetResetReason/3 (Power_Ip_GetResetReason) @068d52a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Power_Ip_ConvertIntergeToResetType/2 Power_Ip_RCM_GetResetReason/15 
Power_Ip_ConvertIntergeToResetType/2 (Power_Ip_ConvertIntergeToResetType) @068d5000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: resetReasonArray.5767/14 (read)resetReasonArray.5767/14 (read)resetReasonArray.5767/14 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Power_Ip_GetResetReason/3 
  Calls: 
Power_Ip_SetMode/1 (Power_Ip_SetMode) @0696ee00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ReportPowerErrors/13 Power_Ip_SMC_ModeConfig/12 Power_Ip_SMC_ModeCheckEntry/11 
powerReportErrorsCallback/0 (powerReportErrorsCallback) @06985168
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: ReportPowerErrorsEmptyCallback/10 (addr)
  Referring: Power_Ip_InstallNotificationsCallback/9 (write)
  Availability: available
  Varpool flags: initialized
Power_Ip_InstallNotificationsCallback (void (*Power_Ip_ReportErrorsCallbackType) (Power_Ip_PowerReportErrorType, uint8) reportErrorsCallback)
{
  <bb 2> :
  powerReportErrorsCallback = reportErrorsCallback;
  return;

}


Power_Ip_EnableSleepOnExit ()
{
  <bb 2> :
  Power_Ip_CM4_EnableSleepOnExit ();
  return;

}


Power_Ip_DisableSleepOnExit ()
{
  <bb 2> :
  Power_Ip_CM4_DisableSleepOnExit ();
  return;

}


Power_Ip_InitPower (const struct Power_Ip_HwIPsConfigType * Power_Ip_pHwIPsConfigPtr)
{
  <bb 2> :
  _1 = Power_Ip_pHwIPsConfigPtr->PMC_pConfig;
  Power_Ip_PMC_PowerInit (_1);
  _2 = Power_Ip_pHwIPsConfigPtr->SMC_pConfig;
  Power_Ip_SMC_AllowedModesConfig (_2);
  return;

}


Power_Ip_InitReset (const struct Power_Ip_HwIPsConfigType * Power_Ip_pHwIPsConfigPtr)
{
  <bb 2> :
  _1 = Power_Ip_pHwIPsConfigPtr->RCM_pConfig;
  Power_Ip_RCM_ResetInit (_1);
  return;

}


Power_Ip_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;
  Power_Ip_RawResetType D.5810;

  <bb 2> :
  ResetReason = Power_Ip_RCM_GetResetRawValue ();
  D.5810 = ResetReason;

  <bb 3> :
<L0>:
  return D.5810;

}


Power_Ip_GetResetReason ()
{
  uint32 resetVal;
  Power_Ip_ResetType eResetReason;
  Power_Ip_ResetType D.5808;

  <bb 2> :
  eResetReason = 14;
  resetVal = Power_Ip_RCM_GetResetReason ();
  eResetReason = Power_Ip_ConvertIntergeToResetType (resetVal);
  D.5808 = eResetReason;

  <bb 3> :
<L0>:
  return D.5808;

}


Power_Ip_ConvertIntergeToResetType (uint32 resetReasonIndex)
{
  static const Power_Ip_ResetType resetReasonArray[15] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
  Power_Ip_ResetType eResetReason;
  Power_Ip_ResetType D.5806;

  <bb 2> :
  eResetReason = 12;
  _1 = resetReasonArray[resetReasonIndex];
  if (_1 <= 14)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = resetReasonArray[resetReasonIndex];
  if (_2 != 33)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  eResetReason = resetReasonArray[resetReasonIndex];
  goto <bb 6>; [INV]

  <bb 5> :
  eResetReason = 12;

  <bb 6> :
  D.5806 = eResetReason;

  <bb 7> :
<L4>:
  return D.5806;

}


Power_Ip_SetMode (const struct Power_Ip_ModeConfigType * Power_Ip_pModeConfigPtr)
{
  Power_Ip_PowerModeType ePowerMode;
  uint32 ePowerSwitchMode;

  <bb 2> :
  ePowerMode = Power_Ip_pModeConfigPtr->Power_Ip_ePowerMode;
  _1 = Power_Ip_SMC_ModeCheckEntry (ePowerMode);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ePowerSwitchMode = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  ePowerSwitchMode = Power_Ip_SMC_ModeConfig (Power_Ip_pModeConfigPtr);

  <bb 5> :
  if (ePowerSwitchMode == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  ReportPowerErrors (3, 255);

  <bb 7> :
  return;

}


