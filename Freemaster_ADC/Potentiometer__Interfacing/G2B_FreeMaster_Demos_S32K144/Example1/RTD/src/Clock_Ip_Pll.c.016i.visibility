
Marking local functions: DevAssert


Marking externally visible functions:


Marking externally visible variables: pllCallbacks


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

ReportClockErrors/16 (ReportClockErrors) @075c12a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: CompleteSpll/9 
  Calls: 
ClockTimeoutExpired/15 (ClockTimeoutExpired) @075c11c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: CompleteSpll/9 
  Calls: 
ClockStartTimeout/14 (ClockStartTimeout) @075c10e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: CompleteSpll/9 
  Calls: 
EnableSpll/13 (EnableSpll) @069cd620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: EnableSpll_TrustedCall/12 
EnableSpll_TrustedCall/12 (EnableSpll_TrustedCall) @069cd380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: EnableSpll/13 
  Calls: 
DisableSpll/11 (DisableSpll) @069cd000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: DisableSpll_TrustedCall/10 
DisableSpll_TrustedCall/10 (DisableSpll_TrustedCall) @069c68c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: DisableSpll/11 
  Calls: 
CompleteSpll/9 (CompleteSpll) @069c6d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ReportClockErrors/16 ClockTimeoutExpired/15 ClockStartTimeout/14 
SetSpll/8 (SetSpll) @069c6a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: SetSpll_TrustedCall/7 
SetSpll_TrustedCall/7 (SetSpll_TrustedCall) @069c67e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: SetSpll/8 
  Calls: DevAssert/0 
ResetSpll/6 (ResetSpll) @069c6000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: ResetSpll_TrustedCall/5 
ResetSpll_TrustedCall/5 (ResetSpll_TrustedCall) @068d69a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ResetSpll/6 
  Calls: 
Callback_PllEmptyDisable/4 (Callback_PllEmptyDisable) @068d6e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Callback_PllEmptyComplete/3 (Callback_PllEmptyComplete) @068d6b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Callback_PllEmpty/2 (Callback_PllEmpty) @068d68c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: pllCallbacks/1 (addr)pllCallbacks/1 (addr)pllCallbacks/1 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
pllCallbacks/1 (pllCallbacks) @068d5948
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Callback_PllEmpty/2 (addr)Callback_PllEmpty/2 (addr)Callback_PllEmptyComplete/3 (addr)Callback_PllEmpty/2 (addr)Callback_PllEmptyDisable/4 (addr)ResetSpll/6 (addr)SetSpll/8 (addr)CompleteSpll/9 (addr)EnableSpll/13 (addr)DisableSpll/11 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
DevAssert/0 (DevAssert) @06896380
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: SetSpll_TrustedCall/7 
  Calls: 
EnableSpll (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  EnableSpll_TrustedCall (config);
  return;

}


EnableSpll_TrustedCall (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  _1 = config->enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 = _2->SPLLCSR;
  _4 = 1074151424B;
  _5 = _3 | 1;
  _4->SPLLCSR = _5;

  <bb 4> :
  return;

}


DisableSpll (Clock_Ip_NameType PllName)
{
  <bb 2> :
  DisableSpll_TrustedCall (PllName);
  return;

}


DisableSpll_TrustedCall (Clock_Ip_NameType PllName)
{
  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR = _4;
  _5 = 1074151424B;
  _6 = _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967294;
  _7->SPLLCSR = _8;
  return;

}


CompleteSpll (Clock_Ip_NameType pllName)
{
  uint32 SPLLStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  clock_pll_status_t pllStatus;
  clock_pll_status_t D.6133;

  <bb 2> :
  pllStatus = 1;
  TimeoutOccurred = 0;
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  ClockStartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _4 = 1074151424B;
  _5 = _4->SPLLCSR;
  _6 = _5 >> 24;
  SPLLStatus = _6 & 1;
  TimeoutTicks.1_7 = TimeoutTicks;
  TimeoutOccurred = ClockTimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_7);
  if (SPLLStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = ~TimeoutOccurred;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _9 = ~TimeoutOccurred;
  if (_9 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  pllStatus = 2;
  goto <bb 10>; [INV]

  <bb 8> :
  ReportClockErrors (1, pllName);
  goto <bb 10>; [INV]

  <bb 9> :
  pllStatus = 0;

  <bb 10> :
  D.6133 = pllStatus;
  StartTime = {CLOBBER};
  ElapsedTime = {CLOBBER};
  TimeoutTicks = {CLOBBER};

  <bb 11> :
<L10>:
  return D.6133;

}


SetSpll (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  SetSpll_TrustedCall (config);
  return;

}


SetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  _1 = config->enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 = _2->SPLLCFG;
  _4 = config->predivider;
  _5 = (long unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _6 << 8;
  _8 = _7 & 1792;
  _9 = config->mulFactorDiv;
  _10 = (long unsigned int) _9;
  _11 = _10 + 4294967280;
  _12 = _11 << 16;
  _13 = _12 & 2031616;
  _14 = _8 | _13;
  _15 = 1074151424B;
  _16 = _3 | _14;
  _15->SPLLCFG = _16;
  _17 = config->monitor;
  _18 = (int) _17;
  switch (_18) <default: <L4> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 2: <L3> [INV]>

  <bb 4> :
<L1>:
  _19 = 1074151424B;
  _19->SPLLCSR = 0;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  _20 = 1074151424B;
  _20->SPLLCSR = 65536;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  _21 = 1074151424B;
  _21->SPLLCSR = 196608;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:
  DevAssert (0);

  <bb 8> :
  return;

}


ResetSpll (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  ResetSpll_TrustedCall (config);
  return;

}


ResetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR = _4;
  _5 = 1074151424B;
  _6 = _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967294;
  _7->SPLLCSR = _8;
  _9 = 1074151424B;
  _10 = _9->SPLLCFG;
  _11 = 1074151424B;
  _12 = _10 & 4294965503;
  _11->SPLLCFG = _12;
  _13 = 1074151424B;
  _14 = _13->SPLLCFG;
  _15 = 1074151424B;
  _16 = _14 & 4292935679;
  _15->SPLLCFG = _16;
  return;

}


Callback_PllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> :
  return;

}


Callback_PllEmptyComplete (Clock_Ip_NameType PllName)
{
  clock_pll_status_t D.6119;

  <bb 2> :
  D.6119 = 0;

  <bb 3> :
<L0>:
  return D.6119;

}


Callback_PllEmpty (const struct Clock_Ip_PllConfigType * config)
{
  <bb 2> :
  return;

}


DevAssert (volatile boolean x)
{
  <bb 2> :
  x.0_1 = x;
  if (x.0_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  goto <bb 3>; [INV]

  <bb 4> :
  return;

}


